export const ZHITO_ROS2_MSG =  {"image_display/msg/ImageDisplay":"\n    #imagediplay\n    uint8 cameraid\n    uint8 imagetype\n    uint32 imagewidth\n    uint32 imageheight\n    uint64 timestamp\n    uint32 imagesize\n    uint8[]  imagedata\n    \n    ","lidar_driver_interface/msg/DriverPointCloud":"\n    HeaderStack hea\n    uint8[100] frame_id\n    bool is_dense\n    PointXYZIT[80000] point\n    float64 measurement_time\n    uint32 width\n    uint32 height\n    uint32 lidar_status\n    \n    ================================================================================\n    MSG: lidar_driver_interface/msg/HeaderStack\n    float64 timestamp_sec\n    uint8[100] module_name\n    uint32  sequence_num\n    uint64  lidar_timestamp\n    uint64  camera_timestamp\n    uint64  radar_timestamp\n    uint32  version\n    StatusPbStack status\n    uint8[100] frame_id\n    ================================================================================\n    MSG: lidar_driver_interface/msg/StatusPbStack\n    uint32 error_code\n    uint8[100] msg\n    ================================================================================\n    MSG: lidar_driver_interface/msg/PointXYZIT\n    float32 x\n    float32 y\n    float32 z\n    uint32 intensity\n    uint64 timestamp\n    ","lidar_driver_interface/msg/HeaderStack":"\n    float64 timestamp_sec\n    uint8[100] module_name\n    uint32  sequence_num\n    uint64  lidar_timestamp\n    uint64  camera_timestamp\n    uint64  radar_timestamp\n    uint32  version\n    StatusPbStack status\n    uint8[100] frame_id\n    ================================================================================\n    MSG: lidar_driver_interface/msg/StatusPbStack\n    uint32 error_code\n    uint8[100] msg\n    ","lidar_driver_interface/msg/PointXYZIT":"\n    float32 x\n    float32 y\n    float32 z\n    uint32 intensity\n    uint64 timestamp\n    ","lidar_driver_interface/msg/StatusPbStack":"\n    uint32 error_code\n    uint8[100] msg\n    ","lidar_to_rviz2/msg/DriverPointCloud":"\n    HeaderStack header\n    uint8[100] frame_id\n    bool is_dense\n    uint8[1920000] point\n    float64 measurement_time\n    uint32 width\n    uint32 height\n    uint32 lidar_status\n    ================================================================================\n    MSG: lidar_to_rviz2/msg/HeaderStack\n    float64 timestamp_sec\n    uint8[100] module_name\n    uint32  sequence_num\n    uint64  lidar_timestamp\n    uint64  camera_timestamp\n    uint64  radar_timestamp\n    uint32  version\n    StatusPbStack status\n    uint8[100] frame_id\n    ================================================================================\n    MSG: lidar_to_rviz2/msg/StatusPbStack\n    uint32 error_code\n    uint8[100] msg\n    ","lidar_to_rviz2/msg/HeaderStack":"\n    float64 timestamp_sec\n    uint8[100] module_name\n    uint32  sequence_num\n    uint64  lidar_timestamp\n    uint64  camera_timestamp\n    uint64  radar_timestamp\n    uint32  version\n    StatusPbStack status\n    uint8[100] frame_id\n    ================================================================================\n    MSG: lidar_to_rviz2/msg/StatusPbStack\n    uint32 error_code\n    uint8[100] msg\n    ","lidar_to_rviz2/msg/PointXYZIT":"\n    float32 x\n    float32 y\n    float32 z\n    uint32 intensity\n    uint64 timestamp\n    ","lidar_to_rviz2/msg/StatusPbStack":"\n    uint32 error_code\n    uint8[100] msg\n    ","sdc_interfaces/msg/ADMInfoMCU2SOC":"\n    # ADMInfoMCU2SOC\n    uint8 cam_status\n    uint8 radar_f_status\n    uint8 radar_fl_status\n    uint8 radar_fr_status\n    uint8 radar_rl_status\n    uint8 radar_rr_status\n    uint8 fusion_mcu_status\n    uint8 chassis_status\n    uint8 mcu_status\n    uint8 main_am_dission\n    uint8 current_ad_mission\n    uint8 ad_target_speed\n    uint8 set_ti_gap\n    uint8 driver_confirm_lane_change\n    uint8 drive_mode\n    uint8 sp_mode\n    uint8 i_ac_cmode\n    uint8 drvr_lane_change_req\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ","sdc_interfaces/msg/ASWInfoMCU2SOCMsg":"\n    # ASWInfoMCU2SOCMsg\n    uint8 sp_switch_stat\n    uint8 hmi_i_acc_mode\n    uint8 hmi_sp_mode\n    uint8 hmi_aeb_mode\n    uint8 hmi_ldw_status\n    uint8 spst_bsd_sys_stat\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ","sdc_interfaces/msg/BoschObstacle":"\n    # BoschObstacle\n    uint8 id\n    uint8 obstacle_status\n    float32 heading\n    float32 pos_x\n    float32 pos_y\n    float32 pos_x_std\n    float32 pos_y_std\n    float32 length\n    float32 width\n    float32 height\n    uint8 obstacle_type\n    float32 vel_x\n    float32 vel_y\n    uint8 motion_status\n    float32 confidence\n    float32 accel_x\n    float32 accel_y\n    float32 vel_x_std\n    float32 vel_y_std\n    float32 accel_x_std\n    float32 accel_y_std\n    \n    ","sdc_interfaces/msg/BoschRadarStatus":"\n    # BoschRadarStatus\n    uint8 antenna_sts\n    uint8 blindness_sts\n    uint8 dsp_sts\n    uint8 hw_main_board_sts\n    uint8 hw_mcu_sts\n    uint8 calib_sts\n    uint8 mal_sts\n    \n    ","sdc_interfaces/msg/BoschSensorMeas":"\n    # BoschSensorMeas\n    uint16 update_count\n    uint8 sensor_pattern\n    uint64 time_stamp\n    BoschObstacle[12] bosch_obstacle\n    BoschRadarStatus[5] bosch_radar_status\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ================================================================================\n    MSG: sdc_interfaces/msg/BoschObstacle\n    # BoschObstacle\n    uint8 id\n    uint8 obstacle_status\n    float32 heading\n    float32 pos_x\n    float32 pos_y\n    float32 pos_x_std\n    float32 pos_y_std\n    float32 length\n    float32 width\n    float32 height\n    uint8 obstacle_type\n    float32 vel_x\n    float32 vel_y\n    uint8 motion_status\n    float32 confidence\n    float32 accel_x\n    float32 accel_y\n    float32 vel_x_std\n    float32 vel_y_std\n    float32 accel_x_std\n    float32 accel_y_std\n    \n    ================================================================================\n    MSG: sdc_interfaces/msg/BoschRadarStatus\n    # BoschRadarStatus\n    uint8 antenna_sts\n    uint8 blindness_sts\n    uint8 dsp_sts\n    uint8 hw_main_board_sts\n    uint8 hw_mcu_sts\n    uint8 calib_sts\n    uint8 mal_sts\n    \n    ","sdc_interfaces/msg/CanCameraObstacle":"\n    # CanCameraObstacle\n    uint8 id\n    uint16 count\n    float32 pos_x\n    float32 pos_y\n    float32 width\n    uint8 obstacle_type\n    float32 vel_x\n    float32 vel_y\n    uint8 cipv_flag\n    uint8 obstacle_lane_id\n    uint8 motion_status\n    uint8 confidence\n    float32 heading\n    float32 length\n    float32 height\n    uint8 vehicle_sub_type\n    uint8 ped_sub_type\n    float32 acc_x\n    float32 acc_y\n    \n    ","sdc_interfaces/msg/CanCameraSensorMeas":"\n    # CanCameraSensorMeas\n    uint16 update_count\n    uint64 time_stamp\n    CanCameraObstacle[10] can_camera_obstacle\n    LaneLine[8] lane_line\n    TrafficSign[8] traffic_sign\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ================================================================================\n    MSG: sdc_interfaces/msg/CanCameraObstacle\n    # CanCameraObstacle\n    uint8 id\n    uint16 count\n    float32 pos_x\n    float32 pos_y\n    float32 width\n    uint8 obstacle_type\n    float32 vel_x\n    float32 vel_y\n    uint8 cipv_flag\n    uint8 obstacle_lane_id\n    uint8 motion_status\n    uint8 confidence\n    float32 heading\n    float32 length\n    float32 height\n    uint8 vehicle_sub_type\n    uint8 ped_sub_type\n    float32 acc_x\n    float32 acc_y\n    \n    ================================================================================\n    MSG: sdc_interfaces/msg/LaneLine\n    # LaneLine\n    uint16 lane_id\n    uint8 lane_color\n    float32 c0\n    float32 c1\n    float32 c2\n    float32 c3\n    float32 begin_dis\n    float32 end_dis\n    float32 width\n    uint8 location_type\n    uint8 mark_type\n    uint8 quality\n    uint8 crossing\n    uint8 status\n    \n    ================================================================================\n    MSG: sdc_interfaces/msg/TrafficSign\n    # TrafficSign\n    uint8 sign_id\n    uint8 confirm_flag\n    uint16 sign_type\n    uint8 confidence\n    float32 pos_x\n    float32 pos_y\n    float32 pos_z\n    \n    ","sdc_interfaces/msg/CanCameraStatus":"\n    #CanCameraStatus\n    uint8 calibration_status\n    uint8 status\n    uint8 blindness_status\n    uint8 voltage_status\n    uint8 software_status\n    uint8 temp_status\n    uint8 communication_status\n    uint8 hardware_status\n    ","sdc_interfaces/msg/CanCameraTrafficSign":"\n    # CanCameraTrafficSign\n    uint8 sign_id\n    uint8 confirm_flag\n    uint16 sign_type\n    uint8 confidence\n    float32 pos_x\n    float32 pos_y\n    float32 pos_z\n    ","sdc_interfaces/msg/Chassis":"\n    # Chassis\n    bool engine_started\n    uint8 engine_started_status\n    bool parking_brake\n    uint8 parking_brake_status\n    bool high_beam_signal\n    uint8 high_beam_signal_status\n    bool low_beam_signal\n    uint8 low_beam_signal_status\n    bool left_turn_signal\n    uint8 left_turn_signal_status\n    bool right_turn_signal\n    uint8 right_turn_signal_status\n    bool horn\n    uint8 horn_status\n    bool wiper\n    uint8 wiper_status\n    float32 engine_rpm\n    uint8 engine_rpm_status\n    float32 speed_mps\n    uint8 speed_mps_status\n    float32 speed_mps_filtered\n    float32 wheel_spd_fl\n    uint8 wheel_spd_fl_status\n    float32 wheel_spd_fr\n    uint8 wheel_spd_fr_status\n    float32 wheel_spd_rl\n    uint8 wheel_spd_rl_status\n    float32 wheel_spd_rr\n    uint8 wheel_spd_rr_status\n    float32 wheel_spd_fl_filtered\n    float32 wheel_spd_fr_filtered\n    float32 wheel_spd_rl_filtered\n    float32 wheel_spd_rr_filtered\n    float32 odometer_m\n    uint8 odometer_m_status\n    float32 throttle_percentage\n    uint8 throttle_percentage_status\n    float32 brake_percentage\n    uint8 brake_percentage_status\n    float32 steering_angle\n    uint8 steering_angle_status\n    float32 steering_percentage\n    uint8 steering_percentage_status\n    float32 steering_torque_nm\n    uint8 steering_torque_nm_status\n    float32 steering_angle_velocity\n    uint8 steering_angle_velocity_status\n    float32 actual_torque\n    uint8 actual_torque_status\n    float32 yaw_rate\n    float32 yaw_rate_filtered\n    uint8 yaw_rate_status\n    float32 gear_ratio\n    uint8 gear_ratio_status\n    float32 longitude_acc\n    uint8 longitude_acc_status\n    float32 longitude_acc_filtered\n    float32 lateral_acc\n    uint8 lateral_acc_status\n    float32 lateral_acc_filtered\n    int32 fuel_range_m\n    uint8 fuel_range_m_status\n    uint8 driving_mode\n    uint8 driving_mode_status\n    uint8 gear_location\n    uint8 gear_location_status\n    uint8 trailer_connected\n    uint8 trailer_connected_status\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ","sdc_interfaces/msg/Conti408Obstacle":"\n    # Conti408Obstacle\n    uint8 id\n    float32 rcs\n    float32 heading\n    float32 pos_x\n    float32 pos_y\n    float32 vel_x\n    float32 vel_y\n    float32 length\n    float32 width\n    float32 accel_x\n    float32 accel_y\n    uint8 obstacle_type\n    uint8 motion_status\n    \n    ","sdc_interfaces/msg/Conti408SensorMeas":"\n    # Conti408SensorMeas\n    uint16 update_count\n    uint8 sensor_pattern\n    uint64 time_stamp\n    Conti408Obstacle[24] conti408_obstacle\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ================================================================================\n    MSG: sdc_interfaces/msg/Conti408Obstacle\n    # Conti408Obstacle\n    uint8 id\n    float32 rcs\n    float32 heading\n    float32 pos_x\n    float32 pos_y\n    float32 vel_x\n    float32 vel_y\n    float32 length\n    float32 width\n    float32 accel_x\n    float32 accel_y\n    uint8 obstacle_type\n    uint8 motion_status\n    \n    ","sdc_interfaces/msg/Conti430Obstacle":"\n    # Conti430Obstacle\n    uint8 id\n    uint8 obstacle_status\n    uint8 count\n    float32 pos_x\n    float32 pos_y\n    float32 pos_x_std\n    float32 pos_y_std\n    float32 width\n    uint8 obstacle_type\n    float32 vel_x\n    float32 vel_y\n    uint8 motion_status\n    float32 accel_x\n    float32 vel_x_std\n    float32 vel_y_std\n    float32 rcs\n    uint8 prob_of_exist\n    uint8 rev1\n    uint8 rev2\n    uint8 rev3\n    \n    ","sdc_interfaces/msg/Conti430RadarStatus":"\n    #Conti430RadarStatus \n    uint8 wakeup_rsn_sts \n    uint8 sys_availability_sts \n    uint8 blockage_sts \n    uint32 dtc_sts \n    ","sdc_interfaces/msg/Conti430SensorMeas":"\n    # Conti430SensorMeas\n    uint16 update_count\n    uint64 time_stamp\n    Conti430Obstacle[40] conti430_obstacle\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ================================================================================\n    MSG: sdc_interfaces/msg/Conti430Obstacle\n    # Conti430Obstacle\n    uint8 id\n    uint8 obstacle_status\n    uint8 count\n    float32 pos_x\n    float32 pos_y\n    float32 pos_x_std\n    float32 pos_y_std\n    float32 width\n    uint8 obstacle_type\n    float32 vel_x\n    float32 vel_y\n    uint8 motion_status\n    float32 accel_x\n    float32 vel_x_std\n    float32 vel_y_std\n    float32 rcs\n    uint8 prob_of_exist\n    uint8 rev1\n    uint8 rev2\n    uint8 rev3\n    \n    ","sdc_interfaces/msg/ControlDebugMCU2SOCMsg":"\n    # ControlDebugMCU2SOCMsg\n    uint8 adm_chassis_sts\n    uint8 adm_main_ad_mission\n    uint8 adm_set_spd\n    uint8 adm_drvr_confirm_lane_chg\n    uint8 adm_sp_mode\n    uint8 adm_driver_lane_chg_req\n    uint8 adm_coast_flag\n    float32 adm_coast_vc\n    uint8 adm_i_acc_mode\n    uint8 adm_valid_obj_deteced\n    uint8 adm_lat_ctrl_actv\n    float32 adm_desd_rng_ctrl\n    uint8 adm_lat_ctrl_lane_chg_actv\n    uint8 adm_ad_mode\n    uint8 adm_i_acc_passive2off_diag\n    uint16 adm_i_acc_failure_diag\n    uint32 adm_i_acc_standby2passive_diag\n    uint8 adm_i_acc_active2passive_diag\n    uint8 adm_sp_drvr_sts_not_ok_diag\n    uint8 adm_sp_passive2_off_diag\n    uint16 adm_sp_active2_off_diag\n    uint8 adm_sp_on2_error_diag\n    uint16 adm_sp_standby2_passive_diag\n    uint8 adm_sp_active2_passive_diag\n    uint8 em_sens_sys_err_sp\n    uint8 em_sens_sys_err_i_acc\n    uint8 em_adu_sft_hrd_err_sp\n    uint8 em_adu_sft_hrd_err_i_acc\n    uint8 em_bms_err_sp\n    uint8 em_bms_err_i_acc\n    uint8 em_hmi_err_sp\n    uint8 em_hmi_err_i_acc\n    uint8 em_hod_err_sp\n    uint8 em_hod_err_i_acc\n    uint8 em_can_eth_comm_err_sp\n    uint8 em_can_eth_comm_err_i_acc\n    uint8 em_brk_sys_err_sp\n    uint8 em_brk_sys_err_i_acc\n    uint8 em_drv_sys_err_sp\n    uint8 em_drv_sys_err_i_acc\n    uint8 em_trsm_sys_err_sp\n    uint8 em_trsm_sys_err_i_acc\n    uint8 em_str_sys_err_sp\n    uint8 em_str_sys_err_i_acc\n    uint8 em_bcm_sys_err_sp\n    uint8 em_bcm_sys_err_i_acc\n    uint8 em_dms_sys_err_sp\n    uint8 em_dms_sys_err_i_acc\n    uint8 em_lv1_degrd\n    uint8 em_lv2_degrd\n    uint8 em_lv3_degrd\n    uint8 em_lv4_degrd\n    uint8 em_cam_sts\n    uint8 em_f_rdr_sts\n    uint8 em_fl_rdr_sts\n    uint8 em_fr_rdr_sts\n    uint8 em_rl_rdr_sts\n    uint8 em_rr_rdr_sts\n    float32 aeb_aeb_decel\n    uint8 aeb_aeb_st\n    uint8 aeb_aeb_mode\n    float32 aeb_aebttc\n    uint8 aeb_aeb_faild\n    uint8 long_ctrl_brake_reqd\n    float32 long_ctrl_brake_accel_output\n    float32 long_ctrl_torque_command_output\n    float32 long_ctrl_accel_des\n    float32 long_ctrl_accel_limit_max\n    float32 long_ctrl_accel_limit_min\n    float32 long_ctrl_jerk_limit_max\n    float32 long_ctrl_jerk_limit_min\n    float32 long_ctrl_p_term_engine\n    float32 long_ctrl_i_term_engine\n    float32 long_ctrl_p_term_brake\n    float32 long_ctrl_i_term_brake\n    float32 vse_lat_tilt_estmd_angl\n    float32 vse_estmd_mass\n    uint8 vse_estmd_mass_reliab\n    float32 vse_lon_tilt_estm_angl\n    uint8 ldw_sts\n    uint8 ldw_le_req\n    uint8 ldw_rireq\n    uint8 bsd_le_blind_spot_warning\n    uint8 bsd_ri_blind_spot_warning\n    uint8 bsd_mode\n    float32 crm_lat_err\n    float32 crm_hding_err\n    float32 crm_ref_cur\n    float32 crm_long_err\n    float32 crm_spd_err\n    float32 crm_ref_accel\n    float64 crm_trj_hdr_ti\n    float32 crm_loc_num\n    float32 crm_trj_num\n    uint8 crm_lat_ref_idx\n    float32 crm_long_mtch_x\n    float32 crm_long_mtch_y\n    float32 crm_long_mtch_s\n    float32 crm_cur_spd\n    uint8 crm_long_ref_idx\n    float32 lat_ctrl_lat_dst_err\n    float32 lat_ctrl_hding_angl_err\n    float32 lat_ctrl_lat_ctrl_status\n    float32 lat_ctrl_proc_tar_str_whl_angl\n    float32 lat_ctrl_tar_str_whl_angl\n    float32 lat_ctrl_mpc_tar_yaw_rate\n    float32 lat_ctrl_fd_fwd_tar_yaw_rate\n    float32 lat_ctrl_tar_yaw_rate\n    float32 lat_ctrl_fd_str_whl_angl\n    float32 lat_ctrl_fd_fwd_str_whl_angl\n    float32 lat_ctrl_yaw_rate_cps\n    float32 plan_tar_spd_mps\n    float32 plan_cipv_vel\n    float32 plan_range_err\n    float32 plan_spd_err\n    float32 plan_u_wght\n    float32 plan_rng_err_wght\n    float32 plan_spd_err_wght\n    float32 plan_du_wght\n    float32 plan_accel_lmt_min\n    float32 plan_accel_lmt_max\n    float32 plan_jerk_lmt_min\n    float32 plan_jerk_lmt_max\n    float32 plan_ref_accel\n    float32 plan_ref_vel\n    float32 plan_hdway_stb\n    uint64 mcutime_stamp\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ","sdc_interfaces/msg/LaneLine":"\n    # LaneLine\n    uint16 lane_id\n    uint8 lane_color\n    float32 c0\n    float32 c1\n    float32 c2\n    float32 c3\n    float32 begin_dis\n    float32 end_dis\n    float32 width\n    uint8 location_type\n    uint8 mark_type\n    uint8 quality\n    uint8 crossing\n    uint8 status\n    \n    ","sdc_interfaces/msg/RawNaviInfo":"\n    # RawNaviInfo\n    uint16 m_week\n    float64 m_sec\n    float32[3] m_gyr\n    float32[3] m_acc\n    uint8 m_sys_state\n    uint8[2] m_gps_num_sat_used\n    uint8 m_sat_status\n    float32 m_age\n    uint8[2] m_gps_num_sats\n    float64[3] m_pos\n    float32[3] m_pos_std\n    float32[4] m_vel\n    float32[4] m_vel_std\n    float32[3] m_acc_in_vehicle\n    float32[3] m_att\n    float32[3] m_att_std\n    float32[3] m_paltance_in_vehicle\n    uint64 time_stamp\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ","sdc_interfaces/msg/RoadInformation":"\n    #RoadInformation\n    uint8 current_time\n    uint8 current_weather\n    uint8 current_roadtype\n    uint8 res\n    ","sdc_interfaces/msg/TrafficSign":"\n    # TrafficSign\n    uint8 sign_id\n    uint8 confirm_flag\n    uint16 sign_type\n    uint8 confidence\n    float32 pos_x\n    float32 pos_y\n    float32 pos_z\n    \n    ","zhito_ap/msg/ADCTrajectoryMsg":"\n    # ADCTrajectoryMsg\n    HeaderMsg m_header\n    float64 total_path_length\n    float64 total_path_time\n    TrajectoryPointMsg[] trajectory_point\n    EStopMsg estop\n    PathPointMsg[] path_point\n    bool is_replan\n    string replan_reason\n    uint32 gear\n    DecisionResultMsg decision\n    PlanningLatencyStatsMsg latency_stats\n    HeaderMsg routing_header\n    PlanningDebugDataMsg debug_data\n    uint32 right_of_way_status\n    IdMsg[] lane_id\n    EngageAdviceMsg engage_advice\n    CriticalRegionMsg critical_region\n    uint32 trajectory_type\n    IdMsg[] target_lane_id\n    float64 distance_to_destination\n    bool is_adc_stop\n    RSSInfoMsg rss_info\n    bool sweeping_state\n    bool rl_result\n    uint32 nudge_state\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EStopMsg\n    # EStopMsg\n    bool is_estop\n    string reason\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DecisionResultMsg\n    # DecisionResultMsg\n    MainDecisionMsg main_decision\n    ObjectDecisionsMsg object_decision\n    VehicleSignalMsg vehicle_signal\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainDecisionMsg\n    # MainDecisionMsg\n    uint32 task_case\n    MainCruiseMsg cruise\n    MainStopMsg stop\n    MainEmergencyStopMsg estop\n    MainChangeLaneMsg change_lane\n    MainMissionCompleteMsg mission_complete\n    MainNotReadyMsg not_ready\n    MainParkingMsg parking\n    TargetLaneMsg[] target_lane\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainCruiseMsg\n    # MainCruiseMsg\n    uint32 change_lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainStopMsg\n    # MainStopMsg\n    uint32 reason_code\n    string reason\n    PointENUMsg stop_point\n    float64 stop_heading\n    uint32 change_lane_type\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainEmergencyStopMsg\n    # MainEmergencyStopMsg\n    uint32 reason_code\n    string reason\n    uint32 task_case\n    EmergencyStopHardBrakeMsg hard_brake\n    EmergencyStopCruiseToStopMsg cruise_to_stop\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EmergencyStopHardBrakeMsg\n    # EmergencyStopHardBrakeMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EmergencyStopCruiseToStopMsg\n    # EmergencyStopCruiseToStopMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainChangeLaneMsg\n    # MainChangeLaneMsg\n    uint32 type\n    TargetLaneMsg[] default_lane\n    MainStopMsg default_lane_stop\n    MainStopMsg target_lane_stop\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TargetLaneMsg\n    # TargetLaneMsg\n    string id\n    float64 start_s\n    float64 end_s\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainMissionCompleteMsg\n    # MainMissionCompleteMsg\n    PointENUMsg stop_point\n    float64 stop_heading\n    uint32 reason_code\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainNotReadyMsg\n    # MainNotReadyMsg\n    string reason\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainParkingMsg\n    # MainParkingMsg\n    uint32 status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectDecisionsMsg\n    # ObjectDecisionsMsg\n    ObjectDecisionMsg[] decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectDecisionMsg\n    # ObjectDecisionMsg\n    string id\n    int32 perception_id\n    ObjectDecisionTypeMsg[] object_decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectDecisionTypeMsg\n    # ObjectDecisionTypeMsg\n    uint32 object_tag_case\n    ObjectIgnoreMsg ignore\n    ObjectStopMsg stop\n    ObjectFollowMsg follow\n    ObjectYieldMsg m_yield\n    ObjectOvertakeMsg overtake\n    ObjectNudgeMsg nudge\n    ObjectAvoidMsg avoid\n    ObjectSidePassMsg side_pass\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectIgnoreMsg\n    # ObjectIgnoreMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectStopMsg\n    # ObjectStopMsg\n    uint32 reason_code\n    float64 distance_s\n    PointENUMsg stop_point\n    float64 stop_heading\n    string[] wait_for_obstacle\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectFollowMsg\n    # ObjectFollowMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectYieldMsg\n    # ObjectYieldMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectOvertakeMsg\n    # ObjectOvertakeMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectNudgeMsg\n    # ObjectNudgeMsg\n    uint32 type\n    float64 distance_l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectAvoidMsg\n    # ObjectAvoidMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectSidePassMsg\n    # ObjectSidePassMsg\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/VehicleSignalMsg\n    # VehicleSignalMsg\n    uint32 turn_signal\n    bool high_beam\n    bool low_beam\n    bool horn\n    bool emergency_light\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PlanningLatencyStatsMsg\n    # PlanningLatencyStatsMsg\n    float64 total_time_ms\n    TaskStatsMsg[] task_stats\n    float64 init_frame_time_ms\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TaskStatsMsg\n    # TaskStatsMsg\n    string name\n    float64 time_ms\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PlanningDebugDataMsg\n    # PlanningDebugDataMsg\n    InputDataMsg input\n    TrajectoryStitcherStateMsg traj_stitcher_state\n    PositionAnalysisMsg distance_to_referenceline_point\n    LaneChangeAnalysisMsg lane_change_analysis\n    DecisionInfoMsg decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/InputDataMsg\n    # InputDataMsg\n    LocalizationEstimateMsg localization\n    ChassisMsg chassis\n    ADM2PPMsg adm_input\n    HeaderMsg perception_header\n    HeaderMsg prediction_header\n    HeaderMsg zmap_header\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LocalizationEstimateMsg\n    # LocalizationEstimateMsg\n    HeaderMsg m_header\n    PoseMsg pose\n    UncertaintyMsg uncertainty\n    float64 measurement_time\n    TrajectoryPointMsg[] trajectory_point\n    MsfStatusMsg msf_status\n    MsfSensorMsgStatusMsg sensor_status\n    int32 status\n    float64 mileage\n    float32 trailer_theta\n    float32 vehicle_to_curb_dist\n    StateMessageMsg state_message\n    DebugMessageMsg debug_message\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PoseMsg\n    # PoseMsg\n    PointENUMsg position\n    QuaternionMsg orientation\n    Point3DMsg linear_velocity\n    Point3DMsg linear_acceleration\n    Point3DMsg angular_velocity\n    float64 heading\n    Point3DMsg linear_acceleration_vrf\n    Point3DMsg angular_velocity_vrf\n    Point3DMsg euler_angles\n    Point3DMsg linear_velocity_vrf\n    PointLLHMsg position_llh\n    PointLLHMsg origin_llh\n    PointENUMsg global_offset\n    RelativePoseMsg relative_pose\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointLLHMsg\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RelativePoseMsg\n    # RelativePoseMsg\n    float64 relative_distance\n    float64 relative_heading\n    float64 reserved_1\n    float64 reserved_2\n    float64 reserved_3\n    float64 reserved_4\n    \n    ================================================================================\n    MSG: zhito_ap/msg/UncertaintyMsg\n    # UncertaintyMsg\n    Point3DMsg position_std_dev\n    Point3DMsg orientation_std_dev\n    Point3DMsg linear_velocity_std_dev\n    Point3DMsg linear_acceleration_std_dev\n    Point3DMsg angular_velocity_std_dev\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfStatusMsg\n    # MsfStatusMsg\n    uint32 local_lidar_consistency\n    uint32 gnss_consistency\n    uint32 local_lidar_status\n    uint32 local_lidar_quality\n    uint32 gnsspos_position_type\n    uint32 msf_running_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfSensorMsgStatusMsg\n    # MsfSensorMsgStatusMsg\n    uint32 imu_delay_status\n    uint32 imu_missing_status\n    uint32 imu_data_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StateMessageMsg\n    # StateMessageMsg\n    int32 fusion_state\n    int32 imu_state\n    int32 gnss_state\n    int32 wheel_state\n    int32 vision_state\n    int32 lidar_state\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DebugMessageMsg\n    # DebugMessageMsg\n    SensorMessageMsg sensor_message\n    ExtrinsicParaMsg extrinsic_para\n    bool skew_status\n    string adm_status\n    string reserved_1\n    string reserved_2\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMessageMsg\n    # SensorMessageMsg\n    int32 imu_delay\n    int32 gnss_delay\n    int32 wheel_delay\n    int32 vision_delay\n    int32 lidar_delay\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ExtrinsicParaMsg\n    # ExtrinsicParaMsg\n    Point3DMsg vi_eluer_zxy_deg\n    Point3DMsg vg_eluer_zxy_deg\n    Point3DMsg vc_eluer_zxy_deg\n    Point3DMsg vb_eluer_zxy_deg\n    Point3DMsg vl_eluer_zxy_deg\n    QuaternionMsg wheel_ko\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ChassisMsg\n    # ChassisMsg\n    bool engine_started\n    uint8 engine_started_status\n    bool parking_brake\n    uint8 parking_brake_status\n    bool high_beam_signal\n    uint8 high_beam_signal_status\n    bool low_beam_signal\n    uint8 low_beam_signal_status\n    bool left_turn_signal\n    uint8 left_turn_signal_status\n    bool right_turn_signal\n    uint8 right_turn_signal_status\n    bool horn\n    uint8 horn_status\n    bool wiper\n    uint8 wiper_status\n    float32 engine_rpm\n    uint8 engine_rpm_status\n    float32 speed_mps\n    uint8 speed_mps_status\n    float32 speed_mps_filtered\n    float32 wheel_spd_fl\n    uint8 wheel_spd_fl_status\n    float32 wheel_spd_fr\n    uint8 wheel_spd_fr_status\n    float32 wheel_spd_rl\n    uint8 wheel_spd_rl_status\n    float32 wheel_spd_rr\n    uint8 wheel_spd_rr_status\n    float32 wheel_spd_fl_filtered\n    float32 wheel_spd_fr_filtered\n    float32 wheel_spd_rl_filtered\n    float32 wheel_spd_rr_filtered\n    float32 odometer_m\n    uint8 odometer_m_status\n    float32 throttle_percentage\n    uint8 throttle_percentage_status\n    float32 brake_percentage\n    uint8 brake_percentage_status\n    float32 steering_angle\n    uint8 steering_angle_status\n    float32 steering_percentage\n    uint8 steering_percentage_status\n    float32 steering_torque_nm\n    uint8 steering_torque_nm_status\n    float32 steering_angle_velocity\n    uint8 steering_angle_velocity_status\n    float32 actual_torque\n    uint8 actual_torque_status\n    float32 yaw_rate\n    float32 yaw_rate_filtered\n    uint8 yaw_rate_status\n    float32 gear_ratio\n    uint8 gear_ratio_status\n    float32 longitude_acc\n    uint8 longitude_acc_status\n    float32 longitude_acc_filtered\n    float32 lateral_acc\n    uint8 lateral_acc_status\n    float32 lateral_acc_filtered\n    int32 fuel_range_m\n    uint8 fuel_range_m_status\n    uint32 driving_mode\n    uint8 driving_mode_status\n    uint32 gear_location\n    uint8 gear_location_status\n    uint8 trailer_connected\n    uint8 trailer_connected_status\n    HeaderMsg m_header\n    float64 eng_fuel_rate\n    float64 eng_instant_fuel_economy\n    float64 eng_average_fuel_economy\n    uint32 mass\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ADM2PPMsg\n    # ADM2PPMsg\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 ad_target_speed\n    uint8 ad_target_time_gap\n    uint8 driver_confirm_lane_change\n    uint8 drive_mode\n    uint8 sp_mode\n    uint8 i_acc_mode\n    uint8 drvr_lane_change_req\n    uint64 time_stamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryStitcherStateMsg\n    # TrajectoryStitcherStateMsg\n    uint32 replan_reason_type\n    float64 lat_diff\n    float64 lon_diff\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PositionAnalysisMsg\n    # PositionAnalysisMsg\n    DistanceToReferencePathMsg[] referenceline_distance_to_map\n    DistanceToReferencePathMsg[] trajectroy_distance_to_referenceline\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DistanceToReferencePathMsg\n    # DistanceToReferencePathMsg\n    float64 s\n    float64 distance\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneChangeAnalysisMsg\n    # LaneChangeAnalysisMsg\n    LaneChangeStatusMsg[] target_lane_obstacle_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneChangeStatusMsg\n    # LaneChangeStatusMsg\n    string obstacle_id\n    uint8 obstacle_direction\n    float64 obstacle_ttc\n    float64 obstacle_distance\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DecisionInfoMsg\n    # DecisionInfoMsg\n    ObstacleDecisionsMsg obstacle_decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstacleDecisionsMsg\n    # ObstacleDecisionsMsg\n    ObstacleDecisionMsg[] decisions\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstacleDecisionMsg\n    # ObstacleDecisionMsg\n    string id\n    uint32 perception_id\n    uint8 decision\n    float32 safety_distance\n    float32 ttc\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EngageAdviceMsg\n    # EngageAdviceMsg\n    uint32 advice\n    string reason\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CriticalRegionMsg\n    # CriticalRegionMsg\n    PolygonMsg[] region\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PolygonMsg\n    # PolygonMsg\n    Point3DMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RSSInfoMsg\n    # RSSInfoMsg\n    bool is_rss_safe\n    float64 cur_dist_lon\n    float64 rss_safe_dist_lon\n    float64 acc_lon_range_minimum\n    float64 acc_lon_range_maximum\n    float64 acc_lat_left_range_minimum\n    float64 acc_lat_left_range_maximum\n    float64 acc_lat_right_range_minimum\n    float64 acc_lat_right_range_maximum\n    \n    ","zhito_ap/msg/ADM2CameraMsg":"\n    # ADM2CameraMsg\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 drvr_lane_change_req\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/ADM2PPMsg":"\n    # ADM2PPMsg\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 ad_target_speed\n    uint8 ad_target_time_gap\n    uint8 driver_confirm_lane_change\n    uint8 drive_mode\n    uint8 sp_mode\n    uint8 i_acc_mode\n    uint8 drvr_lane_change_req\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/ADM2RCFMsg":"\n    # ADM2RCFMsg\n    uint8 can_camera_status\n    uint8 radar1_status\n    uint8 radar2status\n    uint8 radar3status\n    uint8 radar4status\n    uint8 radar5status\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 drvr_lane_change_req\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/ADMInfoMCU2SOCMsg":"\n    # ADMInfoMCU2SOCMsg\n    uint8 cam_status\n    uint8 radar_f_status\n    uint8 radar_fl_status\n    uint8 radar_fr_status\n    uint8 radar_rl_status\n    uint8 radar_rr_status\n    uint8 fusion_mcu_status\n    uint8 chassis_status\n    uint8 mcu_status\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 ad_target_speed\n    uint8 set_ti_gap\n    uint8 driver_confirm_lane_change\n    uint8 drive_mode\n    uint8 sp_mode\n    uint8 i_acc_mode\n    uint8 drvr_lane_change_req\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rc\n    \n    ","zhito_ap/msg/ADMInfoSOC2MCUMsg":"\n    # ADMInfoSOC2MCUMsg\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 drive_mode\n    uint8 auto_lane_change_req\n    uint8 lane_change_condition\n    uint8 degrade_for_exceed_odd\n    uint32 out_odd_reason\n    uint8 sp_available\n    uint8 take_over_lane_change\n    uint8 odd_status\n    uint32 pdphmi_caution_info\n    uint32 planning_status\n    uint8 trajectory_type\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/ASWInfoMCU2SOCMsg":"\n    # ASWInfoMCU2SOCMsg\n    uint8 sp_switch_stat\n    uint8 hmi_i_acc_mode\n    uint8 hmi_sp_mode\n    uint8 hmi_aeb_mode\n    uint8 hmi_ldw_status\n    uint8 spst_bsd_sys_stat\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ","zhito_ap/msg/AdmPlanningStatusMsg":"\n    # AdmPlanningStatusMsg\n    uint32 planning_status\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 drive_mode\n    uint8 auto_lane_change_req\n    uint8 lane_change_condition\n    uint8 degrade_for_exceed_odd\n    uint8 sp_available\n    uint8 take_over_lane_change\n    uint8 pp_process_time\n    uint8 planning_action\n    \n    ","zhito_ap/msg/AppInfoMsg":"\n    # AppInfoMsg\n    string name\n    int32 pid\n    uint32 state\n    \n    ","zhito_ap/msg/Array3DoubleNestedMsg":"\n    float64[3] m_float64\n    \n    ","zhito_ap/msg/Array3FloatNestedMsg":"\n    float32[3] m_float32\n    \n    ","zhito_ap/msg/Array4DoubleNestedMsg":"\n    float64[4] m_float64\n    \n    ","zhito_ap/msg/AttributePointCloudDMsg":"\n    # AttributePointCloudDMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointDMsg\n    # PointDMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array4DoubleNestedMsg\n    float64[4] m_float64\n    \n    ","zhito_ap/msg/AttributePointCloudFMsg":"\n    # AttributePointCloudFMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointFMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointFMsg\n    # PointFMsg\n    float32 x\n    float32 y\n    float32 z\n    float32 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array4DoubleNestedMsg\n    float64[4] m_float64\n    \n    ","zhito_ap/msg/BBox2DMsg":"\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ","zhito_ap/msg/BEVCornerPosMsg":"\n    # BEVCornerPosMsg\n    float64[3] rel_pos\n    bool is_visiable\n    \n    ","zhito_ap/msg/BoschObstacleMsg":"\n    # BoschObstacleMsg\n    uint8 id\n    uint8 obstacle_status\n    float32 heading\n    float32 pos_x\n    float32 pos_y\n    float32 pos_x_std\n    float32 pos_y_std\n    float32 vel_x\n    float32 vel_y\n    float32 vel_x_std\n    float32 vel_y_std\n    float32 accel_x\n    float32 accel_y\n    float32 accel_x_std\n    float32 accel_y_std\n    float32 length\n    float32 width\n    float32 height\n    uint8 obstacle_type\n    uint8 motion_status\n    float32 confidence\n    \n    ","zhito_ap/msg/BoschRadarStatusMsg":"\n    # BoschRadarStatusMsg\n    uint8 antenna_sts\n    uint8 blindness_sts\n    uint8 dsp_sts\n    uint8 hw_main_board_sts\n    uint8 hw_mcu_sts\n    uint8 calib_sts\n    uint8 mal_sts\n    uint8 comm_input_sts\n    \n    ","zhito_ap/msg/BoschSensorMeasMsg":"\n    # BoschSensorMeasMsg\n    uint16 update_count\n    uint8 sensor_pattern\n    uint64 time_stamp\n    BoschObstacleMsg[] obstacles\n    BoschRadarStatusMsg radar_status\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rc\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoschObstacleMsg\n    # BoschObstacleMsg\n    uint8 id\n    uint8 obstacle_status\n    float32 heading\n    float32 pos_x\n    float32 pos_y\n    float32 pos_x_std\n    float32 pos_y_std\n    float32 vel_x\n    float32 vel_y\n    float32 vel_x_std\n    float32 vel_y_std\n    float32 accel_x\n    float32 accel_y\n    float32 accel_x_std\n    float32 accel_y_std\n    float32 length\n    float32 width\n    float32 height\n    uint8 obstacle_type\n    uint8 motion_status\n    float32 confidence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoschRadarStatusMsg\n    # BoschRadarStatusMsg\n    uint8 antenna_sts\n    uint8 blindness_sts\n    uint8 dsp_sts\n    uint8 hw_main_board_sts\n    uint8 hw_mcu_sts\n    uint8 calib_sts\n    uint8 mal_sts\n    uint8 comm_input_sts\n    \n    ","zhito_ap/msg/BoundaryEdgeMsg":"\n    # BoundaryEdgeMsg\n    CurveMsg curve\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/BoundaryPolygonMsg":"\n    # BoundaryPolygonMsg\n    BoundaryEdgeMsg[] edge\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryEdgeMsg\n    # BoundaryEdgeMsg\n    CurveMsg curve\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/BsdInfoMsg":"\n    # BsdInfoMsg\n    bool left_blind_spot_alarm\n    bool right_blind_spot_alarm\n    bool bsd_work_status\n    uint64 time_stamp\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rc\n    \n    ","zhito_ap/msg/CIPVInfoMsg":"\n    # CIPVInfoMsg\n    uint32 cipv_id\n    uint32[] potential_cipv_id\n    \n    ","zhito_ap/msg/CameraObjectSupplementMsg":"\n    # CameraObjectSupplementMsg\n    string sensor_name\n    BBox2DMsg bbox\n    BBox2DMsg front_box\n    BBox2DMsg back_box\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ","zhito_ap/msg/CameraObsStatusMsg":"\n    # CameraObsStatusMsg\n    uint32 perception_camera_obs_status\n    uint8 camera_obs_process_time\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/CameraStatusMsg":"\n    # CameraStatusMsg\n    uint32 camera_status\n    uint8 perception_camera_status_c4\n    uint8 perception_camera_status_c5\n    uint8 perception_camera_status_c6\n    uint8 perception_camera_status_c7\n    uint8 perception_camera_status11\n    uint8 perception_camera_status12\n    uint8 perception_camera_status13\n    uint8 perception_camera_status14\n    uint8 perception_camera_process_time_c4\n    uint8 perception_camera_process_time_c5\n    uint8 perception_camera_process_time_c6\n    uint8 perception_camera_process_time_c7\n    uint8 perception_camera_process_time_c11\n    uint8 perception_camera_process_time_c12\n    uint8 perception_camera_process_time_c13\n    uint8 perception_camera_process_time_c14\n    uint8 pano_camera_process_time\n    uint8 lane_camera_process_time\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/CanCameraObstacleMsg":"\n    # CanCameraObstacleMsg\n    uint8 id\n    uint8 count\n    float32 pos_x\n    float32 pos_y\n    float32 vel_x\n    float32 vel_y\n    float32 width\n    uint8 obstacle_type\n    uint8 cipv_flag\n    uint8 obstacle_lane_id\n    uint8 motion_status\n    uint8 confidence\n    float32 heading\n    float32 length\n    float32 height\n    uint8 vehicle_sub_type\n    uint8 ped_sub_type\n    float32 acc_x\n    float32 acc_y\n    \n    ","zhito_ap/msg/CanCameraSensorMeasMsg":"\n    # CanCameraSensorMeasMsg\n    uint16 update_count\n    uint64 time_stamp\n    RoadInformationMsg road_information\n    CanCameraStatusMsg can_camera_status\n    CanCameraObstacleMsg[] obstacles\n    LaneLineMsg[] lanes\n    TrafficSignMsg[] traffic_signs\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rc\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadInformationMsg\n    # RoadInformationMsg\n    uint8 current_time\n    uint8 current_weather\n    uint8 road_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CanCameraStatusMsg\n    # CanCameraStatusMsg\n    uint8 calibration_status\n    uint8 status\n    uint8 blindness_status\n    uint8 voltage_status\n    uint8 software_status\n    uint8 temp_status\n    uint8 communication_status\n    uint8 hardware_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CanCameraObstacleMsg\n    # CanCameraObstacleMsg\n    uint8 id\n    uint8 count\n    float32 pos_x\n    float32 pos_y\n    float32 vel_x\n    float32 vel_y\n    float32 width\n    uint8 obstacle_type\n    uint8 cipv_flag\n    uint8 obstacle_lane_id\n    uint8 motion_status\n    uint8 confidence\n    float32 heading\n    float32 length\n    float32 height\n    uint8 vehicle_sub_type\n    uint8 ped_sub_type\n    float32 acc_x\n    float32 acc_y\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneLineMsg\n    # LaneLineMsg\n    uint16 lane_id\n    uint8 lane_color\n    float32 c0\n    float32 c1\n    float32 c2\n    float32 c3\n    float32 begin_dis\n    float32 end_dis\n    float32 width\n    uint8 location_type\n    uint8 mark_type\n    uint8 quality\n    bool crossing\n    uint8 status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrafficSignMsg\n    # TrafficSignMsg\n    uint8 sign_id\n    uint8 confirm_flag\n    uint16 sign_type\n    uint8 confidence\n    float32 pos_x\n    float32 pos_y\n    float32 pos_z\n    \n    ","zhito_ap/msg/CanCameraStatusMsg":"\n    # CanCameraStatusMsg\n    uint8 calibration_status\n    uint8 status\n    uint8 blindness_status\n    uint8 voltage_status\n    uint8 software_status\n    uint8 temp_status\n    uint8 communication_status\n    uint8 hardware_status\n    \n    ","zhito_ap/msg/CanbusChassisMsg":"\n    # CanbusChassisMsg\n    bool engine_started\n    uint8 engine_started_status\n    bool parking_brake\n    uint8 parking_brake_status\n    bool high_beam_signal\n    uint8 high_beam_signal_status\n    bool low_beam_signal\n    uint8 low_beam_signal_status\n    bool left_turn_signal\n    uint8 left_turn_signal_status\n    bool right_turn_signal\n    uint8 right_turn_signal_status\n    bool horn\n    uint8 horn_status\n    bool wiper\n    uint8 wiper_status\n    float32 engine_rpm\n    uint8 engine_rpm_status\n    float32 speed_mps\n    uint8 speed_mps_status\n    float32 speed_mps_filtered\n    float32 wheel_spd_fl\n    uint8 wheel_spd_fl_status\n    float32 wheel_spd_fr\n    uint8 wheel_spd_fr_status\n    float32 wheel_spd_rl\n    uint8 wheel_spd_rl_status\n    float32 wheel_spd_rr\n    uint8 wheel_spd_rr_status\n    float32 wheel_spd_fl_filtered\n    float32 wheel_spd_fr_filtered\n    float32 wheel_spd_rl_filtered\n    float32 wheel_spd_rr_filtered\n    float32 odometer_m\n    uint8 odometer_m_status\n    float32 throttle_percentage\n    uint8 throttle_percentage_status\n    float32 brake_percentage\n    uint8 brake_percentage_status\n    float32 steering_angle\n    uint8 steering_angle_status\n    float32 steering_percentage\n    uint8 steering_percentage_status\n    float32 steering_torque_nm\n    uint8 steering_torque_nm_status\n    float32 steering_angle_velocity\n    uint8 steering_angle_velocity_status\n    float32 actual_torque\n    uint8 actual_torque_status\n    float32 yaw_rate\n    float32 yaw_rate_filtered\n    uint8 yaw_rate_status\n    float32 gear_ratio\n    uint8 gear_ratio_status\n    float32 longitude_acc\n    uint8 longitude_acc_status\n    float32 longitude_acc_filtered\n    float32 lateral_acc\n    uint8 lateral_acc_status\n    float32 lateral_acc_filtered\n    int32 fuel_range_m\n    uint8 fuel_range_m_status\n    uint32 driving_mode\n    uint8 driving_mode_status\n    uint32 gear_location\n    uint8 gear_location_status\n    uint8 trailer_connected\n    uint8 trailer_connected_status\n    HeaderMsg m_header\n    float64 eng_fuel_rate\n    float64 eng_instant_fuel_economy\n    float64 eng_average_fuel_economy\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ","zhito_ap/msg/ChassisMsg":"\n    # ChassisMsg\n    bool engine_started\n    uint8 engine_started_status\n    bool parking_brake\n    uint8 parking_brake_status\n    bool high_beam_signal\n    uint8 high_beam_signal_status\n    bool low_beam_signal\n    uint8 low_beam_signal_status\n    bool left_turn_signal\n    uint8 left_turn_signal_status\n    bool right_turn_signal\n    uint8 right_turn_signal_status\n    bool horn\n    uint8 horn_status\n    bool wiper\n    uint8 wiper_status\n    float32 engine_rpm\n    uint8 engine_rpm_status\n    float32 speed_mps\n    uint8 speed_mps_status\n    float32 speed_mps_filtered\n    float32 wheel_spd_fl\n    uint8 wheel_spd_fl_status\n    float32 wheel_spd_fr\n    uint8 wheel_spd_fr_status\n    float32 wheel_spd_rl\n    uint8 wheel_spd_rl_status\n    float32 wheel_spd_rr\n    uint8 wheel_spd_rr_status\n    float32 wheel_spd_fl_filtered\n    float32 wheel_spd_fr_filtered\n    float32 wheel_spd_rl_filtered\n    float32 wheel_spd_rr_filtered\n    float32 odometer_m\n    uint8 odometer_m_status\n    float32 throttle_percentage\n    uint8 throttle_percentage_status\n    float32 brake_percentage\n    uint8 brake_percentage_status\n    float32 steering_angle\n    uint8 steering_angle_status\n    float32 steering_percentage\n    uint8 steering_percentage_status\n    float32 steering_torque_nm\n    uint8 steering_torque_nm_status\n    float32 steering_angle_velocity\n    uint8 steering_angle_velocity_status\n    float32 actual_torque\n    uint8 actual_torque_status\n    float32 yaw_rate\n    float32 yaw_rate_filtered\n    uint8 yaw_rate_status\n    float32 gear_ratio\n    uint8 gear_ratio_status\n    float32 longitude_acc\n    uint8 longitude_acc_status\n    float32 longitude_acc_filtered\n    float32 lateral_acc\n    uint8 lateral_acc_status\n    float32 lateral_acc_filtered\n    int32 fuel_range_m\n    uint8 fuel_range_m_status\n    uint32 driving_mode\n    uint8 driving_mode_status\n    uint32 gear_location\n    uint8 gear_location_status\n    uint8 trailer_connected\n    uint8 trailer_connected_status\n    HeaderMsg m_header\n    float64 eng_fuel_rate\n    float64 eng_instant_fuel_economy\n    float64 eng_average_fuel_economy\n    uint32 mass\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ","zhito_ap/msg/ClearAreaMsg":"\n    # ClearAreaMsg\n    IdMsg id\n    IdMsg[] overlap_id\n    HdmapPolygonMsg polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/Conti408ObstacleMsg":"\n    # Conti408ObstacleMsg\n    uint8 id\n    float32 rcs\n    float32 heading\n    float32 pos_x\n    float32 pos_y\n    float32 vel_x\n    float32 vel_y\n    float32 length\n    float32 width\n    float32 accel_x\n    float32 accel_y\n    uint8 obstacle_type\n    uint8 motion_status\n    \n    ","zhito_ap/msg/Conti408SensorMeasMsg":"\n    # Conti408SensorMeasMsg\n    uint16 update_count\n    uint8 sensor_pattern\n    uint64 time_stamp\n    Conti408ObstacleMsg[] obstacles\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rc\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Conti408ObstacleMsg\n    # Conti408ObstacleMsg\n    uint8 id\n    float32 rcs\n    float32 heading\n    float32 pos_x\n    float32 pos_y\n    float32 vel_x\n    float32 vel_y\n    float32 length\n    float32 width\n    float32 accel_x\n    float32 accel_y\n    uint8 obstacle_type\n    uint8 motion_status\n    \n    ","zhito_ap/msg/Conti430ObstacleMsg":"\n    # Conti430ObstacleMsg\n    uint8 id\n    uint8 obstacle_status\n    uint16 count\n    float32 pos_x\n    float32 pos_y\n    float32 pos_x_std\n    float32 pos_y_std\n    float32 vel_x\n    float32 vel_y\n    float32 vel_x_std\n    float32 vel_y_std\n    float32 accel_x\n    float32 width\n    uint8 obstacle_type\n    uint8 motion_status\n    float32 rcs\n    uint8 prob_of_exist\n    \n    ","zhito_ap/msg/Conti430RadarStatusMsg":"\n    # Conti430RadarStatusMsg\n    uint8 wakeup_rsn_sts\n    uint8 sys_availability_sts\n    uint8 blockage_sts\n    uint8 dtc_sts\n    \n    ","zhito_ap/msg/Conti430SensorMeasMsg":"\n    # Conti430SensorMeasMsg\n    uint16 update_count\n    uint64 time_stamp\n    Conti430RadarStatusMsg radar_status\n    Conti430ObstacleMsg[] obstacles\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rc\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Conti430RadarStatusMsg\n    # Conti430RadarStatusMsg\n    uint8 wakeup_rsn_sts\n    uint8 sys_availability_sts\n    uint8 blockage_sts\n    uint8 dtc_sts\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Conti430ObstacleMsg\n    # Conti430ObstacleMsg\n    uint8 id\n    uint8 obstacle_status\n    uint16 count\n    float32 pos_x\n    float32 pos_y\n    float32 pos_x_std\n    float32 pos_y_std\n    float32 vel_x\n    float32 vel_y\n    float32 vel_x_std\n    float32 vel_y_std\n    float32 accel_x\n    float32 width\n    uint8 obstacle_type\n    uint8 motion_status\n    float32 rcs\n    uint8 prob_of_exist\n    \n    ","zhito_ap/msg/ControlDebugMCU2SOCMsg":"\n    \n    uint8 ADM_ChassisSts\n    uint8 ADM_MainADMission\n    uint8 ADM_CurADMission\n    uint8 ADM_SetSpd\n    uint8 ADM_DrvrConfirmLaneChg\n    uint8 ADM_SPMode\n    uint8 ADM_DriverLaneChgReq\n    bool ADM_CoastFlag\n    float32 ADM_CoastVc\n    uint8 ADM_iACCMode\n    bool ADM_ValidObjDeteced\n    bool ADM_LatCtrlActv\n    float32 ADM_DesdRngCtrl\n    bool ADM_LatCtrlLaneChgActv\n    uint8 ADM_ADMode\n    uint8 ADM_iACC_PASSIVE2OFF_Diag\n    uint8 ADM_iACC_Failure_Diag\n    uint32 ADM_iACC_STANDBY2PASSIVE_Diag\n    uint32 ADM_iACC_ACTIVE2PASSIVE_Diag\n    uint8 ADM_SP_DrvrStsNotOk_Diag\n    uint8 ADM_SP_Passive2Off_Diag\n    uint16 ADM_SP_Active2Off_Diag\n    uint8 ADM_SP_On2Error_Diag\n    uint32 ADM_SP_Standby2Passive_Diag\n    uint32 ADM_SP_Passive2Standby_Diag\n    uint8 ADM_SP_Active2Passive_Diag\n    uint8 ADM_SP_DrvrOutTakeOver_Diag\n    uint8 ADM_SP_Standby2Active_Diag\n    uint8 ADM_SP_Off2On_Diag\n    bool EM_SPErr_On\n    bool EM_SPErr_Off\n    bool EM_iACCErr_On\n    bool EM_iACCErr_Off\n    uint8 EM_Lv1Degrd\n    uint8 EM_Lv2Degrd\n    uint8 EM_Lv3Degrd\n    uint8 EM_Lv4Degrd\n    uint8 EM_SP_Remind\n    bool EM_AEBErr_On\n    bool EM_AEBErr_Off\n    bool EM_BSDErr_On\n    bool EM_BSDErr_Off\n    bool EM_LDWErr_On\n    bool EM_LDWErr_Off\n    uint32 EM_SPErr_On_Diag1\n    uint32 EM_SPErr_On_Diag2\n    uint32 EM_SPErr_Off_Diag1\n    uint32 EM_SPErr_Off_Diag2\n    uint32 EM_iACCErr_On_Diag\n    uint32 EM_iACCErr_Off_Diag\n    uint32 EM_Lv1Degrd_Diag\n    uint32 EM_Lv2Degrd_Diag1\n    uint32 EM_Lv2Degrd_Diag2\n    uint32 EM_Lv2Degrd_Diag3\n    uint32 EM_Lv3Degrd_Diag1\n    uint32 EM_Lv3Degrd_Diag2\n    uint32 EM_Lv3Degrd_Diag3\n    uint32 EM_Lv4Degrd_Diag\n    uint32 EM_SP_Remind_Diag\n    uint32 EM_AEBErr_On_Diag\n    uint32 EM_AEBErr_Off_Diag\n    uint32 EM_BSDErr_On_Diag\n    uint32 EM_BSDErr_Off_Diag\n    uint32 EM_LDWErr_On_Diag\n    uint32 EM_LDWErr_Off_Diag\n    float32 AEB_AEBDecel\n    uint8 AEB_AEBSt\n    uint8 AEB_AEBMode\n    float32 AEB_AEBTTC\n    bool AEB_AEBFaild\n    bool LongCtrl_BrakeReqd\n    float32 LongCtrl_BrakeAccelOutput\n    float32 LongCtrl_TorqueCommandOutput\n    float32 LongCtrl_AccelDes\n    float32 LongCtrl_AccelLimitMax\n    float32 LongCtrl_AccelLimitMin\n    float32 LongCtrl_JerkLimitMax\n    float32 LongCtrl_JerkLimitMin\n    float32 LongCtrl_PTermEngine\n    float32 LongCtrl_ITermEngine\n    float32 LongCtrl_PTermBrake\n    float32 LongCtrl_ITermBrake\n    float32 LongCtrl_LongAccComp\n    uint8 LongCtrl_ACC_isTargetExist\n    float32 LongCtrl_ACC_RelLongDist\n    float32 LongCtrl_ACC_RelLongVel\n    float32 VSE_LatTiltEstmdAngl\n    float32 VSE_EstmdMass\n    bool VSE_EstmdMassReliab\n    float32 VSE_LonTiltEstmAngl\n    float32 VSE_YawRateOffset\n    uint8 VSE_YawRateOffsetCalEnable\n    uint8 VSE_YROffset_HeadingErrorReady\n    uint8 VSE_YROffset_HostSpdMpsReady\n    uint8 VSE_YROffset_LaneCurvatureReady\n    uint8 VSE_YROffset_LaneCurvatureRateReady\n    uint8 VSE_YROffset_CalReset\n    float32 VSE_LatAccOffset\n    uint8 VSE_LatAccOffset_UpdateEnable\n    uint8 VSE_LatAccOffset_YawRateReady\n    uint8 VSE_LatAccOffset_HostSpdMpsReady\n    uint8 VSE_LatAccOffset_LaneCurvatureReady\n    uint8 VSE_LatAccOffset_CalReset\n    uint8 LDW_Sts\n    uint8 LDW_LeReq\n    uint8 LDW_Rireq\n    uint8 LDW_Active2Standby_Diag\n    uint16 LDW_LeOutWarn2Warn_Diag\n    uint16 LDW_RiOutWarn2Warn_Diag\n    uint16 LDW_LeWarn2OutWarn_Diag\n    uint16 LDW_RiWarn2OutWarn_Diag\n    bool BSD_LeBlindSpotWarning\n    bool BSD_RiBlindSpotWarning\n    uint8 BSD_Mode\n    float32 CRM_LatErr\n    float32 CRM_HdingErr\n    float32 CRM_RefCur\n    float32 CRM_PrvLatErr\n    float32 CRM_PrvHdingErr\n    float32 CRM_PrvRefCur\n    float32 CRM_PrvTi\n    float32 CRM_LongErr\n    float32 CRM_SpdErr\n    float32 CRM_RefAccel\n    float64 CRM_TrjHdrTi\n    float32 CRM_LocNum\n    float32 CRM_TrjNum\n    uint8 CRM_LatRefIdx\n    float32 CRM_LatRef_X\n    float32 CRM_LatRef_Y\n    float32 CRM_LatRef_Hding\n    float32 CRM_LongRef_S\n    float32 CRM_LongRef_V\n    float32 CRM_Cur_X\n    float32 CRM_Cur_Y\n    float32 CRM_Cur_Hding\n    float64 CRM_CurTi\n    float32 CRM_LongMtch_X\n    float32 CRM_LongMtch_Y\n    float32 CRM_LongMtch_S\n    float32 CRM_CurSpd\n    uint8 CRM_LongRefIdx\n    float32 CRM_MLA1Offset_MeanSum\n    uint8 CRM_MLA1Offset_CalEnable\n    uint8 CRM_MLA1Offset_YawRateReady\n    uint8 CRM_MLA1Offset_VehSpdReady\n    uint8 CRM_MLA1Offset_CurvatureReady\n    uint8 CRM_MLA1Offset_CurvatureRateReady\n    uint8 CRM_MLA1Offset_UpdateEnd\n    bool CRM_LaneChgActv\n    float32 LatCtrl_LatDstErr\n    float32 LatCtrl_HdingAnglErr\n    float32 LatCtrl_LatCtrlStatus\n    float32 LatCtrl_ProcTarStrWhlAngl\n    float32 LatCtrl_TarStrWhlAngl\n    float32 LatCtrl_MPCTarYawRate\n    float32 LatCtrl_FdFwdTarYawRate\n    float32 LatCtrl_TarYawRate\n    float32 LatCtrl_PrvMPCTarYawRate\n    float32 LatCtrl_PrvFdFwdTarYawRate\n    float32 LatCtrl_PrvTarYawRate\n    float32 LatCtrl_FdStrWhlAngl\n    float32 LatCtrl_FdFwdStrWhlAngl\n    float32 LatCtrl_YawRateCps\n    uint8 LatCtrl_EstmMassLevel\n    float32 LatCtrl_MaxStrWhlAngl\n    float32 LatCtrl_StrWhlAnglRate\n    uint8 LatCtrl_RoadBumpEnable\n    float32 LatCtrl_YawRateController_P\n    uint8 LatCtrl_FdbkAmplifyEnable\n    float32 LatCtrl_EqualWheelBase\n    float32 LatCtrl_CurLatErrWght\n    float32 LatCtrl_CurHdingErrWght\n    float32 LatCtrl_CurUWght\n    float32 LatCtrl_CurDeltaUWght\n    float32 LatCtrl_PrvLatErrWght\n    float32 LatCtrl_PrvHdingWght\n    float32 LatCtrl_PrvUWght\n    float32 LatCtrl_PrvDeltaUWght\n    float32 LatCtrl_FdfwdKappa\n    float32 LatCtrl_PrvFdfwdKappa\n    float32 LatCtrl_PrvKappaStrWhlAngl\n    float32 PLAN_TarSpdMps\n    float32 PLAN_CIPVVel\n    float32 PLAN_RangeErr\n    float32 PLAN_SpdErr\n    float32 PLAN_UWght\n    float32 PLAN_RngErrWght\n    float32 PLAN_SpdErrWght\n    float32 PLAN_DUWght\n    float32 PLAN_AccelLmtMin\n    float32 PLAN_AccelLmtMax\n    float32 PLAN_JerkLmtMin\n    float32 PLAN_JerkLmtMax\n    float32 PLAN_RefAccel\n    float32 PLAN_RefVel\n    float32 PLAN_HdwayStb\n    float32 PLAN_RefLanePolyC0\n    float32 PLAN_RefLanePolyC1\n    float32 PLAN_RefLanePolyC2\n    float32 PLAN_RefLanePolyC3\n    uint16 PLAN_LaneInfoStatus\n    uint16 PLAN_LaneConfidence_Main\n    float32 TIn_HostSpdMps\n    uint8 TIn_VehMvDir\n    float32 TIn_HostLongAccel\n    float32 TIn_HostLatAccel\n    bool TIn_HostStopd\n    float32 TIn_AccelPedlPosn\n    float32 TIn_BrkPedlPosn\n    int8 TIn_CurGear\n    uint8 TIn_BrkSwt\n    uint8 TIn_ManualBrkSwt\n    bool TIn_BrkPedlPsd\n    float32 TIn_NomEngTrq\n    float32 TIn_FricPercTrq\n    float32 TIn_TrqLimMax\n    float32 TIn_TrqLimMin\n    float32 TIn_RPMRat\n    float32 TIn_StrWhlAngl\n    float32 TIn_StrWhlAnglRate\n    float32 TIn_HostYawRateRps\n    float32 TIn_DrvHandTrq\n    uint8 TIn_AutoToManualTips\n    uint8 TIn_TurnRiLiSts\n    uint8 TIn_TurnLeLiSts\n    uint8 TIn_ABSActv\n    uint8 TIn_TrlrVld\n    uint8 TIn_ACCModeSwt\n    uint8 TIn_ACCSetPlusSwt\n    uint8 TIn_ACCSetMinusSwt\n    uint8 TIn_ACCResumeSwt\n    uint8 TIn_AccOffSwt\n    uint8 TIn_SPOnSwt\n    uint8 TIn_RsvdSwt\n    float32 TIn_RollAngl\n    uint8 TIn_RollAnglSt\n    uint8 TIn_ImplementMkrLiCmd\n    uint8 TIn_HighBeamHeadLi\n    uint8 TIn_LowBeamHeadLi\n    uint8 TIn_ExtControlMode\n    uint8 TIn_XBRSysState\n    uint8 TIn_TurnSigSwt\n    uint8 TIn_EBSRedWarnSig\n    uint8 TIn_EBSAmberWarnSig\n    uint8 TIn_IgnitPosn\n    uint8 TIn_OpenStsOfDoor1\n    uint8 TIn_OpenStsOfDoor2\n    float32 TIn_Tire1Pressure\n    float32 TIn_Tire2Pressure\n    uint8 TIn_RetarderEnaBrkAsitSwt\n    float32 TIn_EngSpd\n    uint8 TIn_TransLoSpdMode\n    uint8 TIn_StOfEPB\n    uint8 TIn_FuelLvl1\n    uint8 TIn_ABSFullyOper\n    uint8 TIn_VDCFullyOper\n    uint8 TIn_ROPBrkCtrlActv\n    uint8 TIn_ROPEngCtrlActv\n    uint8 TIn_YCBrkCtrlActv\n    uint8 TIn_YCEngCtrlActv\n    uint8 TIn_ASRBrkCtrlActv\n    uint8 TIn_ASREngCtrlActv\n    uint8 TIn_EmgyBrkActv\n    uint8 TIn_HODFlt\n    uint8 TIn_DMSSysSt\n    uint8 TIn_HandsOff\n    uint8 TIn_DrvrFatiSt\n    uint8 TIn_DrvrAttenSt\n    uint8 TIn_LDWSwtSts\n    uint8 TIn_HzrdLiSwt\n    float32 TIn_ActEngPercTq\n    uint8 TIn_TransShiftInProc\n    uint8 TIn_IRGlsDectSt\n    uint8 TIn_ImgShadeSt\n    uint8 TIn_DrvrDectSt\n    uint8 TIn_TirePressThreDect\n    uint8 TIn_TranSelectGear\n    uint8 TIn_TrlrVDCActv\n    uint8 TIn_ATCOrASRInfoSig\n    uint8 TIn_EngTqMode\n    uint8 TIn_WorkingModeOfEPB\n    uint8 TIn_VCUMode\n    uint8 TIn_RetarderSelectNonEng_VCU\n    uint8 TIn_RotaryKnobSts\n    uint8 TIn_TrlrMountedABSWarning\n    uint8 TIn_VDCInfoSig\n    uint8 TIn_DrvrActvnDmdForAEBS\n    uint8 TIn_FCWSnvtySet\n    uint16 TIn_VehWght\n    uint8 TIn_VehLocSwt\n    uint8 TIn_DrvrMonitorSwt\n    uint8 TIn_PriDataPeriod\n    uint8 TIn_EPSSysState\n    uint8 TIn_EmgyStrSts\n    uint8 TIn_ElecStrSupRedLv\n    uint8 TIn_ALCReqSwt\n    uint8 TIn_BSDSwt\n    uint8 TIn_EPBHCUInParkSt\n    float32 TIn_FrntAxlLeWhlSpdKph\n    float32 TIn_FrntAxlRiWhlSpdKph\n    float32 TIn_RearAxlLeWhlSpdKph\n    float32 TIn_RearAxlRiWhlSpdKph\n    uint8 HMI_iACC_Mode\n    uint8 HMI_SP_Mode\n    uint8 HMI_SPCharDisplay\n    uint8 HMI_iACC_SetSpd\n    uint8 HMI_iACC_SetTiGap\n    uint8 HMI_LDW_Status\n    bool HMI_LDW_LeReq\n    bool HMI_LDW_RiReq\n    uint8 HMI_AEB_Mode\n    uint8 HMI_AEB_TarClass\n    uint8 HMI_BSDMode\n    bool HMI_LeBlindSpotWarning\n    bool HMI_RiBlindSpotWarning\n    uint8 HMI_OverSpdWarn\n    uint16 HMI_RoadSpdLim\n    uint8 HMI_ALCReq\n    uint8 HMI_TouchSteerWheel\n    float64 Zloc_Timestamp\n    float64 Zloc_SDC_Out_TimeStamp\n    float64 Zloc_IDC_IN_TimeStamp\n    float64 Zloc_IDC_OUT_TimeStamp\n    uint64 mcu_timestamp\n    uint64 soc_timestamp\n    uint32 rolling_counter\n    \n    ","zhito_ap/msg/CriticalRegionMsg":"\n    # CriticalRegionMsg\n    PolygonMsg[] region\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PolygonMsg\n    # PolygonMsg\n    Point3DMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/CrosswalkMsg":"\n    # CrosswalkMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/CurveMsg":"\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/CurveSegmentMsg":"\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/DebugMessageMsg":"\n    # DebugMessageMsg\n    SensorMessageMsg sensor_message\n    ExtrinsicParaMsg extrinsic_para\n    bool skew_status\n    string adm_status\n    string reserved_1\n    string reserved_2\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMessageMsg\n    # SensorMessageMsg\n    int32 imu_delay\n    int32 gnss_delay\n    int32 wheel_delay\n    int32 vision_delay\n    int32 lidar_delay\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ExtrinsicParaMsg\n    # ExtrinsicParaMsg\n    Point3DMsg vi_eluer_zxy_deg\n    Point3DMsg vg_eluer_zxy_deg\n    Point3DMsg vc_eluer_zxy_deg\n    Point3DMsg vb_eluer_zxy_deg\n    Point3DMsg vl_eluer_zxy_deg\n    QuaternionMsg wheel_ko\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ","zhito_ap/msg/DecisionInfoMsg":"\n    # DecisionInfoMsg\n    ObstacleDecisionsMsg obstacle_decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstacleDecisionsMsg\n    # ObstacleDecisionsMsg\n    ObstacleDecisionMsg[] decisions\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstacleDecisionMsg\n    # ObstacleDecisionMsg\n    string id\n    uint32 perception_id\n    uint8 decision\n    float32 safety_distance\n    float32 ttc\n    \n    ","zhito_ap/msg/DecisionResultMsg":"\n    # DecisionResultMsg\n    MainDecisionMsg main_decision\n    ObjectDecisionsMsg object_decision\n    VehicleSignalMsg vehicle_signal\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainDecisionMsg\n    # MainDecisionMsg\n    uint32 task_case\n    MainCruiseMsg cruise\n    MainStopMsg stop\n    MainEmergencyStopMsg estop\n    MainChangeLaneMsg change_lane\n    MainMissionCompleteMsg mission_complete\n    MainNotReadyMsg not_ready\n    MainParkingMsg parking\n    TargetLaneMsg[] target_lane\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainCruiseMsg\n    # MainCruiseMsg\n    uint32 change_lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainStopMsg\n    # MainStopMsg\n    uint32 reason_code\n    string reason\n    PointENUMsg stop_point\n    float64 stop_heading\n    uint32 change_lane_type\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainEmergencyStopMsg\n    # MainEmergencyStopMsg\n    uint32 reason_code\n    string reason\n    uint32 task_case\n    EmergencyStopHardBrakeMsg hard_brake\n    EmergencyStopCruiseToStopMsg cruise_to_stop\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EmergencyStopHardBrakeMsg\n    # EmergencyStopHardBrakeMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EmergencyStopCruiseToStopMsg\n    # EmergencyStopCruiseToStopMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainChangeLaneMsg\n    # MainChangeLaneMsg\n    uint32 type\n    TargetLaneMsg[] default_lane\n    MainStopMsg default_lane_stop\n    MainStopMsg target_lane_stop\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TargetLaneMsg\n    # TargetLaneMsg\n    string id\n    float64 start_s\n    float64 end_s\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainMissionCompleteMsg\n    # MainMissionCompleteMsg\n    PointENUMsg stop_point\n    float64 stop_heading\n    uint32 reason_code\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainNotReadyMsg\n    # MainNotReadyMsg\n    string reason\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainParkingMsg\n    # MainParkingMsg\n    uint32 status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectDecisionsMsg\n    # ObjectDecisionsMsg\n    ObjectDecisionMsg[] decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectDecisionMsg\n    # ObjectDecisionMsg\n    string id\n    int32 perception_id\n    ObjectDecisionTypeMsg[] object_decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectDecisionTypeMsg\n    # ObjectDecisionTypeMsg\n    uint32 object_tag_case\n    ObjectIgnoreMsg ignore\n    ObjectStopMsg stop\n    ObjectFollowMsg follow\n    ObjectYieldMsg m_yield\n    ObjectOvertakeMsg overtake\n    ObjectNudgeMsg nudge\n    ObjectAvoidMsg avoid\n    ObjectSidePassMsg side_pass\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectIgnoreMsg\n    # ObjectIgnoreMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectStopMsg\n    # ObjectStopMsg\n    uint32 reason_code\n    float64 distance_s\n    PointENUMsg stop_point\n    float64 stop_heading\n    string[] wait_for_obstacle\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectFollowMsg\n    # ObjectFollowMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectYieldMsg\n    # ObjectYieldMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectOvertakeMsg\n    # ObjectOvertakeMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectNudgeMsg\n    # ObjectNudgeMsg\n    uint32 type\n    float64 distance_l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectAvoidMsg\n    # ObjectAvoidMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectSidePassMsg\n    # ObjectSidePassMsg\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/VehicleSignalMsg\n    # VehicleSignalMsg\n    uint32 turn_signal\n    bool high_beam\n    bool low_beam\n    bool horn\n    bool emergency_light\n    \n    ","zhito_ap/msg/DistanceToReferencePathMsg":"\n    # DistanceToReferencePathMsg\n    float64 s\n    float64 distance\n    \n    ","zhito_ap/msg/EMInfoSOC2MCUMsg":"\n    # EMInfoSOC2MCUMsg\n    uint32 camera_status\n    uint8 cam_c4_status\n    uint8 cam_c5_status\n    uint8 cam_c6_status\n    uint8 cam_c7_status\n    uint8 cam11_status\n    uint8 cam12_status\n    uint8 cam13_status\n    uint8 cam14_status\n    uint32 lidar_status\n    uint32 sr_status\n    uint8 radar1_status\n    uint8 radar2_status\n    uint8 radar3_status\n    uint8 radar4_status\n    uint8 radar5_status\n    uint8 can_camera_status\n    uint8 perception_camera_process_time_c4\n    uint8 perception_camera_process_time_c5\n    uint8 perception_camera_process_time_c6\n    uint8 perception_camera_process_time_c7\n    uint8 perception_camera_process_time_c11\n    uint8 perception_camera_process_time_c12\n    uint8 perception_camera_process_time_c13\n    uint8 perception_camera_process_time_c14\n    uint8 pano_camera_process_time\n    uint8 lane_camera_process_time\n    uint8 segmentation_process_time\n    uint8 recognition_process_time\n    uint8 camera_obs_process_time\n    uint8 radar_process_time\n    uint8 fusion_process_time\n    uint32 fusion_so_c_status\n    uint32 zloc_status\n    uint32 zmap_status\n    uint8 imu_transfer_time\n    uint8 zloc_process_time\n    uint8 zmap_process_time\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/EStopMsg":"\n    # EStopMsg\n    bool is_estop\n    string reason\n    \n    ","zhito_ap/msg/EmergencyStopCruiseToStopMsg":"\n    # EmergencyStopCruiseToStopMsg\n    string id\n    \n    ","zhito_ap/msg/EmergencyStopHardBrakeMsg":"\n    # EmergencyStopHardBrakeMsg\n    string id\n    \n    ","zhito_ap/msg/EngageAdviceMsg":"\n    # EngageAdviceMsg\n    uint32 advice\n    string reason\n    \n    ","zhito_ap/msg/ExtrinsicParaMsg":"\n    # ExtrinsicParaMsg\n    Point3DMsg vi_eluer_zxy_deg\n    Point3DMsg vg_eluer_zxy_deg\n    Point3DMsg vc_eluer_zxy_deg\n    Point3DMsg vb_eluer_zxy_deg\n    Point3DMsg vl_eluer_zxy_deg\n    QuaternionMsg wheel_ko\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ","zhito_ap/msg/FeatureMsg":"\n    # FeatureMsg\n    int32 id\n    Point3DMsg[] polygon_point\n    Point3DMsg position\n    Point3DMsg front_position\n    Point3DMsg velocity\n    Point3DMsg raw_velocity\n    Point3DMsg acceleration\n    float64 velocity_heading\n    float64 speed\n    float64 acc\n    float64 theta\n    float64 length\n    float64 width\n    float64 height\n    float64 tracking_time\n    float64 timestamp\n    LaneMsg lane\n    LaneAssignMsg lane_assign\n    JunctionFeatureMsg junction_feature\n    Point3DMsg t_position\n    Point3DMsg t_velocity\n    float64 t_velocity_heading\n    float64 t_speed\n    Point3DMsg t_acceleration\n    float64 t_acc\n    bool is_still\n    uint32 type\n    float64 label_update_time_delta\n    ObstaclePriorityMsg priority\n    bool is_near_junction\n    PredictionTrajectoryPointMsg[] future_trajectory_points\n    TrajectoryPointMsg[] short_term_predicted_trajectory_points\n    PredictionTrajectoryMsg[] predicted_trajectory\n    TrajectoryPointMsg[] adc_trajectory_point\n    string[] surrounding_lane_id\n    string[] within_lane_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneMsg\n    # LaneMsg\n    LaneFeatureMsg[] current_lane_feature\n    LaneFeatureMsg lane_feature\n    LaneFeatureMsg[] nearby_lane_feature\n    LaneGraphMsg lane_graph\n    LaneGraphMsg lane_graph_ordered\n    float64 label_update_time_delta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneFeatureMsg\n    # LaneFeatureMsg\n    string lane_id\n    uint32 lane_turn_type\n    float64 lane_s\n    float64 lane_l\n    float64 angle_diff\n    float64 dist_to_left_boundary\n    float64 dist_to_right_boundary\n    float64 lane_heading\n    uint32 lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneGraphMsg\n    # LaneGraphMsg\n    LaneSequenceMsg[] lane_sequence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceMsg\n    # LaneSequenceMsg\n    int32 lane_sequence_id\n    PredictionLaneSegmentMsg[] lane_segment\n    int32 adc_lane_segment_idx\n    PathPointMsg[] path_point\n    uint32 lane_type\n    float64 lane_s\n    float64 lane_l\n    bool vehicle_on_lane\n    NearbyObstacleMsg[] nearby_obstacle\n    StopSignMsg stop_sign\n    int32 right_of_way\n    LaneSequenceFeaturesMsg features\n    int32 label\n    float64 probability\n    float64 acceleration\n    float64 time_to_lane_center\n    float64 time_to_lane_edge\n    uint32 behavior_type\n    LanePointMsg[] curr_lane_point\n    LanePointMsg[] left_neighbor_point\n    LanePointMsg[] right_neighbor_point\n    NearbyObstacleMsg[] left_nearby_obstacle\n    NearbyObstacleMsg[] right_nearby_obstacle\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionLaneSegmentMsg\n    # PredictionLaneSegmentMsg\n    string lane_id\n    float64 start_s\n    float64 end_s\n    uint32 lane_turn_type\n    LanePointMsg[] lane_point\n    float64 adc_s\n    int32 adc_lane_point_idx\n    float64 total_length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LanePointMsg\n    # LanePointMsg\n    Point3DMsg position\n    float64 heading\n    float64 width\n    float64 relative_s\n    float64 relative_l\n    float64 angle_diff\n    float64 kappa\n    uint32 scenario_type\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/NearbyObstacleMsg\n    # NearbyObstacleMsg\n    int32 id\n    float64 s\n    float64 l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StopSignMsg\n    # StopSignMsg\n    string stop_sign_id\n    string lane_id\n    float64 lane_s\n    float64 lane_sequence_s\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceFeaturesMsg\n    # LaneSequenceFeaturesMsg\n    float64[] mlp_features\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneAssignMsg\n    # LaneAssignMsg\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionFeatureMsg\n    # JunctionFeatureMsg\n    string junction_id\n    float64 junction_range\n    LaneFeatureMsg enter_lane\n    JunctionExitMsg[] junction_exit\n    float64[] junction_mlp_feature\n    int32[] junction_mlp_label\n    float64[] junction_mlp_probability\n    string[] start_lane_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionExitMsg\n    # JunctionExitMsg\n    string exit_lane_id\n    Point3DMsg exit_position\n    float64 exit_heading\n    float64 exit_width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstaclePriorityMsg\n    # ObstaclePriorityMsg\n    uint32 priority\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionTrajectoryPointMsg\n    # PredictionTrajectoryPointMsg\n    PredictionPathPointMsg path_point\n    float64 timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionPathPointMsg\n    # PredictionPathPointMsg\n    float64 x\n    float64 y\n    float64 velocity_heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionTrajectoryMsg\n    # PredictionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ","zhito_ap/msg/FireHydrantMsg":"\n    # FireHydrantMsg\n    PointENUMsg point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/FusionStatusMsg":"\n    # FusionStatusMsg\n    uint32 camera_status\n    uint8 cam_c4_status\n    uint8 cam_c5_status\n    uint8 cam_c6_status\n    uint8 cam_c7_status\n    uint8 cam11_status\n    uint8 cam12_status\n    uint8 cam13_status\n    uint8 cam14_status\n    uint32 lidar_status\n    uint32 sr_status\n    uint8 radar1_status\n    uint8 radar2_status\n    uint8 radar3_status\n    uint8 radar4_status\n    uint8 radar5_status\n    uint8 can_camera_status\n    uint8 perception_camera_process_time_c4\n    uint8 perception_camera_process_time_c5\n    uint8 perception_camera_process_time_c6\n    uint8 perception_camera_process_time_c7\n    uint8 perception_camera_process_time_c11\n    uint8 perception_camera_process_time_c12\n    uint8 perception_camera_process_time_c13\n    uint8 perception_camera_process_time_c14\n    uint8 pano_camera_process_time\n    uint8 lane_camera_process_time\n    uint8 segmentation_process_time\n    uint8 recognition_process_time\n    uint8 camera_obs_process_time\n    uint8 radar_process_time\n    uint8 fusion_process_time\n    uint32 fusion_so_c_status\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/GaussianInfoMsg":"\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ","zhito_ap/msg/H2puHeaderMsg":"\n    # H2puHeaderMsg\n    string name\n    uint32 seq_num\n    uint64 timestamp\n    \n    ","zhito_ap/msg/H2puImu330baData1Msg":"\n    # H2puImu330baData1Msg\n    uint32 status\n    int32 x_rate\n    int32 y_rate\n    int32 z_rate\n    int32 x_accel\n    int32 y_accel\n    int32 z_accel\n    int32 temprature\n    int32 timestamp1\n    int32 timestamp2\n    \n    ","zhito_ap/msg/H2puImuAd24501Data1Msg":"\n    # H2puImuAd24501Data1Msg\n    int32 diag_stat\n    int32 x_gyro_out\n    int32 y_gyro_out\n    int32 z_gyro_out\n    int32 x_accel_out\n    int32 y_accel_out\n    int32 z_accel_out\n    int32 temprature\n    int32 timestamp\n    int32 checksum\n    int32 diag_stat2\n    int32 x_deltang_out\n    int32 y_deltang_out\n    int32 z_deltang_out\n    int32 x_deltvel_out\n    int32 y_deltvel_out\n    int32 z_deltvel_out\n    int32 temprature2\n    int32 data_cntr\n    int32 checksum2\n    \n    ","zhito_ap/msg/H2puImuMsg":"\n    # H2puImuMsg\n    H2puUdpBufferMsg udp_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/H2puUdpBufferMsg\n    # H2puUdpBufferMsg\n    uint32 length\n    uint8[1500] rawbuffer\n    uint64 timestamp\n    \n    ","zhito_ap/msg/H2puUbloxMsg":"\n    # UbloxMsg\n    H2puUdpBufferMsg udp_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/H2puUdpBufferMsg\n    # H2puUdpBufferMsg\n    uint32 length\n    uint8[1500] rawbuffer\n    uint64 timestamp\n    \n    ","zhito_ap/msg/H2puUdpBufferMsg":"\n    # H2puUdpBufferMsg\n    uint32 length\n    uint8[1500] rawbuffer\n    uint64 timestamp\n    \n    ","zhito_ap/msg/HdmapHeaderMsg":"\n    # HdmapHeaderMsg\n    string version\n    string date\n    ProjectionMsg projection\n    string district\n    string generation\n    string rev_major\n    string rev_minor\n    float64 left\n    float64 top\n    float64 right\n    float64 bottom\n    string vendor\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProjectionMsg\n    # ProjectionMsg\n    string proj\n    float64 origin_latitude_deg\n    float64 origin_longitude_deg\n    float64 origin_altitude_m\n    \n    ","zhito_ap/msg/HdmapLaneBoundaryMsg":"\n    # HdmapLaneBoundaryMsg\n    IdMsg id\n    CurveMsg curve\n    float64 length\n    bool is_virtual\n    LaneBoundaryTypeMsg[] boundary_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneBoundaryTypeMsg\n    # LaneBoundaryTypeMsg\n    float64 s\n    uint32[] types\n    \n    ","zhito_ap/msg/HdmapLaneMsg":"\n    # HdmapLaneMsg\n    IdMsg id\n    CurveMsg central_curve\n    HdmapLaneBoundaryMsg left_boundary\n    HdmapLaneBoundaryMsg right_boundary\n    float64 length\n    float64 speed_limit\n    IdMsg[] overlap_id\n    IdMsg[] predecessor_id\n    IdMsg[] successor_id\n    IdMsg[] left_neighbor_forward_lane_id\n    IdMsg[] right_neighbor_forward_lane_id\n    uint32 type\n    uint32 turn\n    IdMsg[] left_neighbor_reverse_lane_id\n    IdMsg[] right_neighbor_reverse_lane_id\n    IdMsg junction_id\n    LaneSampleAssociationMsg[] left_sample\n    LaneSampleAssociationMsg[] right_sample\n    uint32 direction\n    LaneSampleAssociationMsg[] left_road_sample\n    LaneSampleAssociationMsg[] right_road_sample\n    IdMsg[] self_reverse_lane_id\n    float64 min_speed_limit\n    bool is_illegal_lane\n    bool is_side_road\n    bool is_connecting_lane\n    bool is_passable_lane\n    IdMsg section_id\n    bool is_vehicle_on\n    LaneSlopeMsg[] slope\n    LaneCurvatureMsg[] curvature\n    uint32 connection_type\n    uint32 attribute\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapLaneBoundaryMsg\n    # HdmapLaneBoundaryMsg\n    IdMsg id\n    CurveMsg curve\n    float64 length\n    bool is_virtual\n    LaneBoundaryTypeMsg[] boundary_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneBoundaryTypeMsg\n    # LaneBoundaryTypeMsg\n    float64 s\n    uint32[] types\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSampleAssociationMsg\n    # LaneSampleAssociationMsg\n    float64 s\n    float64 width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSlopeMsg\n    # LaneSlopeMsg\n    float64 s\n    float64 value\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneCurvatureMsg\n    # LaneCurvatureMsg\n    float64 s\n    float64 curve_value\n    \n    ","zhito_ap/msg/HdmapPassageMsg":"\n    # HdmapPassageMsg\n    IdMsg id\n    IdMsg[] signal_id\n    IdMsg[] yield_id\n    IdMsg[] stop_sign_id\n    IdMsg[] lane_id\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ","zhito_ap/msg/HdmapPolygonMsg":"\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/HdmapRoadBoundaryMsg":"\n    # HdmapRoadBoundaryMsg\n    BoundaryPolygonMsg outer_polygon\n    BoundaryPolygonMsg[] hole\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryPolygonMsg\n    # BoundaryPolygonMsg\n    BoundaryEdgeMsg[] edge\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryEdgeMsg\n    # BoundaryEdgeMsg\n    CurveMsg curve\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/HdmapStopSignMsg":"\n    # HdmapStopSignMsg\n    IdMsg id\n    CurveMsg[] stop_line\n    IdMsg[] overlap_id\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/HdmapStructMsg":"\n    # HdmapStructMsg\n    RoadBoundaryMsg[] road_boundary\n    PointCloudDMsg[] road_polygons\n    PointCloudDMsg[] hole_polygons\n    PointCloudDMsg[] junction_polygons\n    RoadBoundaryMsg[] lanes\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadBoundaryMsg\n    # RoadBoundaryMsg\n    PointCloudDMsg left_boundary\n    PointCloudDMsg right_boundary\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointCloudDMsg\n    # PointCloudDMsg\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointDMsg\n    # PointDMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array4DoubleNestedMsg\n    float64[4] m_float64\n    \n    ","zhito_ap/msg/HdmapTrafficSignMsg":"\n    # HdmapTrafficSignMsg\n    IdMsg id\n    PointENUMsg[] points\n    uint32 type\n    IdMsg section_id\n    float32 rect_width\n    float32 rect_height\n    uint32 point_num\n    PointENUMsg board_direction\n    PointENUMsg anchor_point\n    float32 board_height\n    uint32 shape\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/HeaderMsg":"\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ","zhito_ap/msg/HeaderStackMsg":"\n    # HeaderStackMsg\n    float64 timestamp_sec\n    uint8[100] module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbStackMsg status\n    uint8[100] frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbStackMsg\n    # StatusPbStackMsg\n    uint32 error_code\n    uint8[100] msg\n    \n    ","zhito_ap/msg/HmiObstacleInfoMsg":"\n    # HmiObstacleInfoMsg\n    uint8 id\n    float32 long_distance\n    float32 lat_distance\n    uint8 m_class\n    uint8 threat\n    uint8 acc_target_detec\n    uint8 lane_assign\n    \n    ","zhito_ap/msg/HmiObstacleInfosMsg":"\n    # HmiObstacleInfosMsg\n    HmiObstacleInfoMsg[10] hmi_obs_infos\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HmiObstacleInfoMsg\n    # HmiObstacleInfoMsg\n    uint8 id\n    float32 long_distance\n    float32 lat_distance\n    uint8 m_class\n    uint8 threat\n    uint8 acc_target_detec\n    uint8 lane_assign\n    \n    ","zhito_ap/msg/IdMsg":"\n    # IdMsg\n    string id\n    \n    ","zhito_ap/msg/InputDataMsg":"\n    # InputDataMsg\n    LocalizationEstimateMsg localization\n    ChassisMsg chassis\n    ADM2PPMsg adm_input\n    HeaderMsg perception_header\n    HeaderMsg prediction_header\n    HeaderMsg zmap_header\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LocalizationEstimateMsg\n    # LocalizationEstimateMsg\n    HeaderMsg m_header\n    PoseMsg pose\n    UncertaintyMsg uncertainty\n    float64 measurement_time\n    TrajectoryPointMsg[] trajectory_point\n    MsfStatusMsg msf_status\n    MsfSensorMsgStatusMsg sensor_status\n    int32 status\n    float64 mileage\n    float32 trailer_theta\n    float32 vehicle_to_curb_dist\n    StateMessageMsg state_message\n    DebugMessageMsg debug_message\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PoseMsg\n    # PoseMsg\n    PointENUMsg position\n    QuaternionMsg orientation\n    Point3DMsg linear_velocity\n    Point3DMsg linear_acceleration\n    Point3DMsg angular_velocity\n    float64 heading\n    Point3DMsg linear_acceleration_vrf\n    Point3DMsg angular_velocity_vrf\n    Point3DMsg euler_angles\n    Point3DMsg linear_velocity_vrf\n    PointLLHMsg position_llh\n    PointLLHMsg origin_llh\n    PointENUMsg global_offset\n    RelativePoseMsg relative_pose\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointLLHMsg\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RelativePoseMsg\n    # RelativePoseMsg\n    float64 relative_distance\n    float64 relative_heading\n    float64 reserved_1\n    float64 reserved_2\n    float64 reserved_3\n    float64 reserved_4\n    \n    ================================================================================\n    MSG: zhito_ap/msg/UncertaintyMsg\n    # UncertaintyMsg\n    Point3DMsg position_std_dev\n    Point3DMsg orientation_std_dev\n    Point3DMsg linear_velocity_std_dev\n    Point3DMsg linear_acceleration_std_dev\n    Point3DMsg angular_velocity_std_dev\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfStatusMsg\n    # MsfStatusMsg\n    uint32 local_lidar_consistency\n    uint32 gnss_consistency\n    uint32 local_lidar_status\n    uint32 local_lidar_quality\n    uint32 gnsspos_position_type\n    uint32 msf_running_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfSensorMsgStatusMsg\n    # MsfSensorMsgStatusMsg\n    uint32 imu_delay_status\n    uint32 imu_missing_status\n    uint32 imu_data_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StateMessageMsg\n    # StateMessageMsg\n    int32 fusion_state\n    int32 imu_state\n    int32 gnss_state\n    int32 wheel_state\n    int32 vision_state\n    int32 lidar_state\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DebugMessageMsg\n    # DebugMessageMsg\n    SensorMessageMsg sensor_message\n    ExtrinsicParaMsg extrinsic_para\n    bool skew_status\n    string adm_status\n    string reserved_1\n    string reserved_2\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMessageMsg\n    # SensorMessageMsg\n    int32 imu_delay\n    int32 gnss_delay\n    int32 wheel_delay\n    int32 vision_delay\n    int32 lidar_delay\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ExtrinsicParaMsg\n    # ExtrinsicParaMsg\n    Point3DMsg vi_eluer_zxy_deg\n    Point3DMsg vg_eluer_zxy_deg\n    Point3DMsg vc_eluer_zxy_deg\n    Point3DMsg vb_eluer_zxy_deg\n    Point3DMsg vl_eluer_zxy_deg\n    QuaternionMsg wheel_ko\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ChassisMsg\n    # ChassisMsg\n    bool engine_started\n    uint8 engine_started_status\n    bool parking_brake\n    uint8 parking_brake_status\n    bool high_beam_signal\n    uint8 high_beam_signal_status\n    bool low_beam_signal\n    uint8 low_beam_signal_status\n    bool left_turn_signal\n    uint8 left_turn_signal_status\n    bool right_turn_signal\n    uint8 right_turn_signal_status\n    bool horn\n    uint8 horn_status\n    bool wiper\n    uint8 wiper_status\n    float32 engine_rpm\n    uint8 engine_rpm_status\n    float32 speed_mps\n    uint8 speed_mps_status\n    float32 speed_mps_filtered\n    float32 wheel_spd_fl\n    uint8 wheel_spd_fl_status\n    float32 wheel_spd_fr\n    uint8 wheel_spd_fr_status\n    float32 wheel_spd_rl\n    uint8 wheel_spd_rl_status\n    float32 wheel_spd_rr\n    uint8 wheel_spd_rr_status\n    float32 wheel_spd_fl_filtered\n    float32 wheel_spd_fr_filtered\n    float32 wheel_spd_rl_filtered\n    float32 wheel_spd_rr_filtered\n    float32 odometer_m\n    uint8 odometer_m_status\n    float32 throttle_percentage\n    uint8 throttle_percentage_status\n    float32 brake_percentage\n    uint8 brake_percentage_status\n    float32 steering_angle\n    uint8 steering_angle_status\n    float32 steering_percentage\n    uint8 steering_percentage_status\n    float32 steering_torque_nm\n    uint8 steering_torque_nm_status\n    float32 steering_angle_velocity\n    uint8 steering_angle_velocity_status\n    float32 actual_torque\n    uint8 actual_torque_status\n    float32 yaw_rate\n    float32 yaw_rate_filtered\n    uint8 yaw_rate_status\n    float32 gear_ratio\n    uint8 gear_ratio_status\n    float32 longitude_acc\n    uint8 longitude_acc_status\n    float32 longitude_acc_filtered\n    float32 lateral_acc\n    uint8 lateral_acc_status\n    float32 lateral_acc_filtered\n    int32 fuel_range_m\n    uint8 fuel_range_m_status\n    uint32 driving_mode\n    uint8 driving_mode_status\n    uint32 gear_location\n    uint8 gear_location_status\n    uint8 trailer_connected\n    uint8 trailer_connected_status\n    HeaderMsg m_header\n    float64 eng_fuel_rate\n    float64 eng_instant_fuel_economy\n    float64 eng_average_fuel_economy\n    uint32 mass\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ADM2PPMsg\n    # ADM2PPMsg\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 ad_target_speed\n    uint8 ad_target_time_gap\n    uint8 driver_confirm_lane_change\n    uint8 drive_mode\n    uint8 sp_mode\n    uint8 i_acc_mode\n    uint8 drvr_lane_change_req\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/IntentMsg":"\n    # IntentMsg\n    uint32 type\n    \n    ","zhito_ap/msg/JunctionExitMsg":"\n    # JunctionExitMsg\n    string exit_lane_id\n    Point3DMsg exit_position\n    float64 exit_heading\n    float64 exit_width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/JunctionFeatureMsg":"\n    # JunctionFeatureMsg\n    string junction_id\n    float64 junction_range\n    LaneFeatureMsg enter_lane\n    JunctionExitMsg[] junction_exit\n    float64[] junction_mlp_feature\n    int32[] junction_mlp_label\n    float64[] junction_mlp_probability\n    string[] start_lane_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneFeatureMsg\n    # LaneFeatureMsg\n    string lane_id\n    uint32 lane_turn_type\n    float64 lane_s\n    float64 lane_l\n    float64 angle_diff\n    float64 dist_to_left_boundary\n    float64 dist_to_right_boundary\n    float64 lane_heading\n    uint32 lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionExitMsg\n    # JunctionExitMsg\n    string exit_lane_id\n    Point3DMsg exit_position\n    float64 exit_heading\n    float64 exit_width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/JunctionMsg":"\n    # JunctionMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    IdMsg[] signal_group_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/JunctionRoadGroupMsg":"\n    # JunctionRoadGroupMsg\n    IdMsg id\n    IdMsg begin_junction_id\n    IdMsg end_junction_id\n    IdMsg[] road_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ","zhito_ap/msg/LMStatusMsg":"\n    # LMStatusMsg\n    uint32 zloc_status\n    uint32 zmap_status\n    uint8 odd_status\n    uint8 imu_transfer_time\n    uint8 zloc_process_time\n    uint8 zmap_process_time\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/LandMarkMsg":"\n    # LandMarkMsg\n    IdMsg id\n    uint32 type\n    PointENUMsg[] points\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/LaneAssignMsg":"\n    # LaneAssignMsg\n    uint32 type\n    \n    ","zhito_ap/msg/LaneBoundaryTypeMsg":"\n    # LaneBoundaryTypeMsg\n    float64 s\n    uint32[] types\n    \n    ","zhito_ap/msg/LaneChangeAnalysisMsg":"\n    # LaneChangeAnalysisMsg\n    LaneChangeStatusMsg[] target_lane_obstacle_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneChangeStatusMsg\n    # LaneChangeStatusMsg\n    string obstacle_id\n    uint8 obstacle_direction\n    float64 obstacle_ttc\n    float64 obstacle_distance\n    \n    ","zhito_ap/msg/LaneChangeStatusMsg":"\n    # LaneChangeStatusMsg\n    string obstacle_id\n    uint8 obstacle_direction\n    float64 obstacle_ttc\n    float64 obstacle_distance\n    \n    ","zhito_ap/msg/LaneCurvatureMsg":"\n    # LaneCurvatureMsg\n    float64 s\n    float64 curve_value\n    \n    ","zhito_ap/msg/LaneFeatureMsg":"\n    # LaneFeatureMsg\n    string lane_id\n    uint32 lane_turn_type\n    float64 lane_s\n    float64 lane_l\n    float64 angle_diff\n    float64 dist_to_left_boundary\n    float64 dist_to_right_boundary\n    float64 lane_heading\n    uint32 lane_type\n    \n    ","zhito_ap/msg/LaneFuseLineMsg":"\n    # LaneFuseLineMsg\n    uint32 lane_id\n    uint32 line_type\n    float32 line_confidence\n    LaneLineParamMsg line_param\n    Point2DMsg[] lane_dots\n    Point3DMsg[] lane_points\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneLineParamMsg\n    # LaneLineParamMsg\n    float32 c0\n    float32 c1\n    float32 c2\n    float32 c3\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/LaneFuseMessageMsg":"\n    # LaneFuseMessageMsg\n    uint64 timestamp\n    LaneFuseLineMsg[] lane_lines\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneFuseLineMsg\n    # LaneFuseLineMsg\n    uint32 lane_id\n    uint32 line_type\n    float32 line_confidence\n    LaneLineParamMsg line_param\n    Point2DMsg[] lane_dots\n    Point3DMsg[] lane_points\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneLineParamMsg\n    # LaneLineParamMsg\n    float32 c0\n    float32 c1\n    float32 c2\n    float32 c3\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/LaneGraphMsg":"\n    # LaneGraphMsg\n    LaneSequenceMsg[] lane_sequence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceMsg\n    # LaneSequenceMsg\n    int32 lane_sequence_id\n    PredictionLaneSegmentMsg[] lane_segment\n    int32 adc_lane_segment_idx\n    PathPointMsg[] path_point\n    uint32 lane_type\n    float64 lane_s\n    float64 lane_l\n    bool vehicle_on_lane\n    NearbyObstacleMsg[] nearby_obstacle\n    StopSignMsg stop_sign\n    int32 right_of_way\n    LaneSequenceFeaturesMsg features\n    int32 label\n    float64 probability\n    float64 acceleration\n    float64 time_to_lane_center\n    float64 time_to_lane_edge\n    uint32 behavior_type\n    LanePointMsg[] curr_lane_point\n    LanePointMsg[] left_neighbor_point\n    LanePointMsg[] right_neighbor_point\n    NearbyObstacleMsg[] left_nearby_obstacle\n    NearbyObstacleMsg[] right_nearby_obstacle\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionLaneSegmentMsg\n    # PredictionLaneSegmentMsg\n    string lane_id\n    float64 start_s\n    float64 end_s\n    uint32 lane_turn_type\n    LanePointMsg[] lane_point\n    float64 adc_s\n    int32 adc_lane_point_idx\n    float64 total_length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LanePointMsg\n    # LanePointMsg\n    Point3DMsg position\n    float64 heading\n    float64 width\n    float64 relative_s\n    float64 relative_l\n    float64 angle_diff\n    float64 kappa\n    uint32 scenario_type\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/NearbyObstacleMsg\n    # NearbyObstacleMsg\n    int32 id\n    float64 s\n    float64 l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StopSignMsg\n    # StopSignMsg\n    string stop_sign_id\n    string lane_id\n    float64 lane_s\n    float64 lane_sequence_s\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceFeaturesMsg\n    # LaneSequenceFeaturesMsg\n    float64[] mlp_features\n    \n    ","zhito_ap/msg/LaneLineMsg":"\n    # LaneLineMsg\n    uint16 lane_id\n    uint8 lane_color\n    float32 c0\n    float32 c1\n    float32 c2\n    float32 c3\n    float32 begin_dis\n    float32 end_dis\n    float32 width\n    uint8 location_type\n    uint8 mark_type\n    uint8 quality\n    bool crossing\n    uint8 status\n    \n    ","zhito_ap/msg/LaneLineParamMsg":"\n    # LaneLineParamMsg\n    float32 c0\n    float32 c1\n    float32 c2\n    float32 c3\n    \n    ","zhito_ap/msg/LaneLinesMsg":"\n    # LaneLinesMsg\n    LineInfoMsg left_lane_line\n    LineInfoMsg right_lane_line\n    uint8 next_left_line_num\n    LineInfoMsg[] next_left_lane_lines\n    uint8 next_right_line_num\n    LineInfoMsg[] next_right_lane_lines\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineInfoMsg\n    # LineInfoMsg\n    uint32 lane_type\n    float64 quality\n    float64 c0_position\n    float64 c1_heading_angle\n    float64 c2_curvature\n    float64 c3_curvature_derivative\n    float64 longitude_start\n    float64 longitude_end\n    \n    ","zhito_ap/msg/LaneMarkerMsg":"\n    # LaneMarkerMsg\n    uint32 lane_type\n    float64 quality\n    uint32 model_degree\n    float64 c0_position\n    float64 c1_heading_angle\n    float64 c2_curvature\n    float64 c3_curvature_derivative\n    float64 view_range\n    float64 longitude_start\n    float64 longitude_end\n    \n    ","zhito_ap/msg/LaneMarkersMsg":"\n    # LaneMarkersMsg\n    LaneMarkerMsg left_lane_marker\n    LaneMarkerMsg right_lane_marker\n    LaneMarkerMsg[] next_left_lane_marker\n    LaneMarkerMsg[] next_right_lane_marker\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneMarkerMsg\n    # LaneMarkerMsg\n    uint32 lane_type\n    float64 quality\n    uint32 model_degree\n    float64 c0_position\n    float64 c1_heading_angle\n    float64 c2_curvature\n    float64 c3_curvature_derivative\n    float64 view_range\n    float64 longitude_start\n    float64 longitude_end\n    \n    ","zhito_ap/msg/LaneMsg":"\n    # LaneMsg\n    LaneFeatureMsg[] current_lane_feature\n    LaneFeatureMsg lane_feature\n    LaneFeatureMsg[] nearby_lane_feature\n    LaneGraphMsg lane_graph\n    LaneGraphMsg lane_graph_ordered\n    float64 label_update_time_delta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneFeatureMsg\n    # LaneFeatureMsg\n    string lane_id\n    uint32 lane_turn_type\n    float64 lane_s\n    float64 lane_l\n    float64 angle_diff\n    float64 dist_to_left_boundary\n    float64 dist_to_right_boundary\n    float64 lane_heading\n    uint32 lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneGraphMsg\n    # LaneGraphMsg\n    LaneSequenceMsg[] lane_sequence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceMsg\n    # LaneSequenceMsg\n    int32 lane_sequence_id\n    PredictionLaneSegmentMsg[] lane_segment\n    int32 adc_lane_segment_idx\n    PathPointMsg[] path_point\n    uint32 lane_type\n    float64 lane_s\n    float64 lane_l\n    bool vehicle_on_lane\n    NearbyObstacleMsg[] nearby_obstacle\n    StopSignMsg stop_sign\n    int32 right_of_way\n    LaneSequenceFeaturesMsg features\n    int32 label\n    float64 probability\n    float64 acceleration\n    float64 time_to_lane_center\n    float64 time_to_lane_edge\n    uint32 behavior_type\n    LanePointMsg[] curr_lane_point\n    LanePointMsg[] left_neighbor_point\n    LanePointMsg[] right_neighbor_point\n    NearbyObstacleMsg[] left_nearby_obstacle\n    NearbyObstacleMsg[] right_nearby_obstacle\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionLaneSegmentMsg\n    # PredictionLaneSegmentMsg\n    string lane_id\n    float64 start_s\n    float64 end_s\n    uint32 lane_turn_type\n    LanePointMsg[] lane_point\n    float64 adc_s\n    int32 adc_lane_point_idx\n    float64 total_length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LanePointMsg\n    # LanePointMsg\n    Point3DMsg position\n    float64 heading\n    float64 width\n    float64 relative_s\n    float64 relative_l\n    float64 angle_diff\n    float64 kappa\n    uint32 scenario_type\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/NearbyObstacleMsg\n    # NearbyObstacleMsg\n    int32 id\n    float64 s\n    float64 l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StopSignMsg\n    # StopSignMsg\n    string stop_sign_id\n    string lane_id\n    float64 lane_s\n    float64 lane_sequence_s\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceFeaturesMsg\n    # LaneSequenceFeaturesMsg\n    float64[] mlp_features\n    \n    ","zhito_ap/msg/LanePointMsg":"\n    # LanePointMsg\n    Point3DMsg position\n    float64 heading\n    float64 width\n    float64 relative_s\n    float64 relative_l\n    float64 angle_diff\n    float64 kappa\n    uint32 scenario_type\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/LaneSampleAssociationMsg":"\n    # LaneSampleAssociationMsg\n    float64 s\n    float64 width\n    \n    ","zhito_ap/msg/LaneSegmentMsg":"\n    # LaneSegmentMsg\n    string id\n    float64 start_s\n    float64 end_s\n    \n    ","zhito_ap/msg/LaneSequenceFeaturesMsg":"\n    # LaneSequenceFeaturesMsg\n    float64[] mlp_features\n    \n    ","zhito_ap/msg/LaneSequenceMsg":"\n    # LaneSequenceMsg\n    int32 lane_sequence_id\n    PredictionLaneSegmentMsg[] lane_segment\n    int32 adc_lane_segment_idx\n    PathPointMsg[] path_point\n    uint32 lane_type\n    float64 lane_s\n    float64 lane_l\n    bool vehicle_on_lane\n    NearbyObstacleMsg[] nearby_obstacle\n    StopSignMsg stop_sign\n    int32 right_of_way\n    LaneSequenceFeaturesMsg features\n    int32 label\n    float64 probability\n    float64 acceleration\n    float64 time_to_lane_center\n    float64 time_to_lane_edge\n    uint32 behavior_type\n    LanePointMsg[] curr_lane_point\n    LanePointMsg[] left_neighbor_point\n    LanePointMsg[] right_neighbor_point\n    NearbyObstacleMsg[] left_nearby_obstacle\n    NearbyObstacleMsg[] right_nearby_obstacle\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionLaneSegmentMsg\n    # PredictionLaneSegmentMsg\n    string lane_id\n    float64 start_s\n    float64 end_s\n    uint32 lane_turn_type\n    LanePointMsg[] lane_point\n    float64 adc_s\n    int32 adc_lane_point_idx\n    float64 total_length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LanePointMsg\n    # LanePointMsg\n    Point3DMsg position\n    float64 heading\n    float64 width\n    float64 relative_s\n    float64 relative_l\n    float64 angle_diff\n    float64 kappa\n    uint32 scenario_type\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/NearbyObstacleMsg\n    # NearbyObstacleMsg\n    int32 id\n    float64 s\n    float64 l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StopSignMsg\n    # StopSignMsg\n    string stop_sign_id\n    string lane_id\n    float64 lane_s\n    float64 lane_sequence_s\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceFeaturesMsg\n    # LaneSequenceFeaturesMsg\n    float64[] mlp_features\n    \n    ","zhito_ap/msg/LaneSlopeMsg":"\n    # LaneSlopeMsg\n    float64 s\n    float64 value\n    \n    ","zhito_ap/msg/LaneWaypointMsg":"\n    # LaneWaypointMsg\n    string id\n    float64 s\n    PointENUMsg pose\n    uint32 clean_type\n    uint32 waypoint_type\n    uint32 change_buffer\n    uint32 speed_type\n    PointLLHMsg pose_llh\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointLLHMsg\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ","zhito_ap/msg/LidarFrameMessageMsg":"\n    # LidarFrameMessageMsg\n    float64 m_timestamp\n    uint64 m_lidar_timestamp\n    uint32 m_seq_num\n    string m_type_name\n    uint8 m_process_stage\n    uint32 m_error_code\n    LidarFrameMsg m_lidar_frame\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LidarFrameMsg\n    # LidarFrameMsg\n    AttributePointCloudFMsg cloud\n    AttributePointCloudDMsg world_cloud\n    float64 timestamp\n    Array4DoubleNestedMsg[4] lidar2world_pose\n    Array4DoubleNestedMsg[4] novatel2world_pose\n    HdmapStructMsg hdmap_struct\n    ObjectMsg[] segmented_objects\n    ObjectMsg[] tracked_objects\n    PointIndicesMsg roi_indices\n    PointIndicesMsg non_ground_indices\n    PointIndicesMsg secondary_indices\n    PointIndicesMsg trailer_indices\n    AttributePointCloudFMsg trailer_cloud\n    SensorInformationMsg sensor_info\n    string reserve\n    bool trailer_existed\n    TrailerMessageMsg trailer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/AttributePointCloudFMsg\n    # AttributePointCloudFMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointFMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointFMsg\n    # PointFMsg\n    float32 x\n    float32 y\n    float32 z\n    float32 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array4DoubleNestedMsg\n    float64[4] m_float64\n    \n    ================================================================================\n    MSG: zhito_ap/msg/AttributePointCloudDMsg\n    # AttributePointCloudDMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointDMsg\n    # PointDMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapStructMsg\n    # HdmapStructMsg\n    RoadBoundaryMsg[] road_boundary\n    PointCloudDMsg[] road_polygons\n    PointCloudDMsg[] hole_polygons\n    PointCloudDMsg[] junction_polygons\n    RoadBoundaryMsg[] lanes\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadBoundaryMsg\n    # RoadBoundaryMsg\n    PointCloudDMsg left_boundary\n    PointCloudDMsg right_boundary\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointCloudDMsg\n    # PointCloudDMsg\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectMsg\n    # ObjectMsg\n    int32 id\n    PointCloudDMsg polygon\n    float32[3] direction\n    float32 theta\n    float32 theta_variance\n    float64[3] center\n    float64[3] local_center\n    Array3DoubleNestedMsg[3] center_uncertainty\n    float32[3] size\n    float32[3] size_variance\n    float64[3] anchor_point\n    float64[3] local_anchor_point\n    uint32 type\n    float32[] type_probs\n    uint32 sub_type\n    float32[] sub_type_probs\n    float32 confidence\n    int32 track_id\n    float32[3] velocity\n    float32[3] rel_velocity\n    Array3FloatNestedMsg[3] velocity_uncertainty\n    bool velocity_converged\n    float32 velocity_confidence\n    float32[3] acceleration\n    Array3FloatNestedMsg[3] acceleration_uncertainty\n    float64 tracking_time\n    float64 latest_tracked_time\n    uint32 motion_state\n    Array3DoubleNestedMsg[100] drops\n    uint64 drop_num\n    bool b_cipv\n    LidarObjectSupplementMsg lidar_supplement\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3DoubleNestedMsg\n    float64[3] m_float64\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3FloatNestedMsg\n    float32[3] m_float32\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LidarObjectSupplementMsg\n    # LidarObjectSupplementMsg\n    bool is_orientation_ready\n    bool on_use\n    AttributePointCloudFMsg cloud\n    AttributePointCloudDMsg cloud_world\n    bool is_background\n    bool is_fp\n    float32 fp_prob\n    bool is_in_roi\n    uint64 num_points_in_roi\n    float32 height_above_ground\n    uint32 lidar_algorithm_type\n    VectorFloatNestedMsg[] raw_probs\n    string[] raw_classification_methods\n    \n    ================================================================================\n    MSG: zhito_ap/msg/VectorFloatNestedMsg\n    float32[] m_float32\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointIndicesMsg\n    # PointIndicesMsg\n    int32[] indices\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorInformationMsg\n    # SensorInformationMsg\n    string name\n    uint8 type\n    uint8 orientation\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrailerMessageMsg\n    # TrailerMessageMsg\n    float32 trailer_theta\n    Point2DMsg[4] trailer_polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/LidarFrameMsg":"\n    # LidarFrameMsg\n    AttributePointCloudFMsg cloud\n    AttributePointCloudDMsg world_cloud\n    float64 timestamp\n    Array4DoubleNestedMsg[4] lidar2world_pose\n    Array4DoubleNestedMsg[4] novatel2world_pose\n    HdmapStructMsg hdmap_struct\n    ObjectMsg[] segmented_objects\n    ObjectMsg[] tracked_objects\n    PointIndicesMsg roi_indices\n    PointIndicesMsg non_ground_indices\n    PointIndicesMsg secondary_indices\n    PointIndicesMsg trailer_indices\n    AttributePointCloudFMsg trailer_cloud\n    SensorInformationMsg sensor_info\n    string reserve\n    bool trailer_existed\n    TrailerMessageMsg trailer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/AttributePointCloudFMsg\n    # AttributePointCloudFMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointFMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointFMsg\n    # PointFMsg\n    float32 x\n    float32 y\n    float32 z\n    float32 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array4DoubleNestedMsg\n    float64[4] m_float64\n    \n    ================================================================================\n    MSG: zhito_ap/msg/AttributePointCloudDMsg\n    # AttributePointCloudDMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointDMsg\n    # PointDMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapStructMsg\n    # HdmapStructMsg\n    RoadBoundaryMsg[] road_boundary\n    PointCloudDMsg[] road_polygons\n    PointCloudDMsg[] hole_polygons\n    PointCloudDMsg[] junction_polygons\n    RoadBoundaryMsg[] lanes\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadBoundaryMsg\n    # RoadBoundaryMsg\n    PointCloudDMsg left_boundary\n    PointCloudDMsg right_boundary\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointCloudDMsg\n    # PointCloudDMsg\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectMsg\n    # ObjectMsg\n    int32 id\n    PointCloudDMsg polygon\n    float32[3] direction\n    float32 theta\n    float32 theta_variance\n    float64[3] center\n    float64[3] local_center\n    Array3DoubleNestedMsg[3] center_uncertainty\n    float32[3] size\n    float32[3] size_variance\n    float64[3] anchor_point\n    float64[3] local_anchor_point\n    uint32 type\n    float32[] type_probs\n    uint32 sub_type\n    float32[] sub_type_probs\n    float32 confidence\n    int32 track_id\n    float32[3] velocity\n    float32[3] rel_velocity\n    Array3FloatNestedMsg[3] velocity_uncertainty\n    bool velocity_converged\n    float32 velocity_confidence\n    float32[3] acceleration\n    Array3FloatNestedMsg[3] acceleration_uncertainty\n    float64 tracking_time\n    float64 latest_tracked_time\n    uint32 motion_state\n    Array3DoubleNestedMsg[100] drops\n    uint64 drop_num\n    bool b_cipv\n    LidarObjectSupplementMsg lidar_supplement\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3DoubleNestedMsg\n    float64[3] m_float64\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3FloatNestedMsg\n    float32[3] m_float32\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LidarObjectSupplementMsg\n    # LidarObjectSupplementMsg\n    bool is_orientation_ready\n    bool on_use\n    AttributePointCloudFMsg cloud\n    AttributePointCloudDMsg cloud_world\n    bool is_background\n    bool is_fp\n    float32 fp_prob\n    bool is_in_roi\n    uint64 num_points_in_roi\n    float32 height_above_ground\n    uint32 lidar_algorithm_type\n    VectorFloatNestedMsg[] raw_probs\n    string[] raw_classification_methods\n    \n    ================================================================================\n    MSG: zhito_ap/msg/VectorFloatNestedMsg\n    float32[] m_float32\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointIndicesMsg\n    # PointIndicesMsg\n    int32[] indices\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorInformationMsg\n    # SensorInformationMsg\n    string name\n    uint8 type\n    uint8 orientation\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrailerMessageMsg\n    # TrailerMessageMsg\n    float32 trailer_theta\n    Point2DMsg[4] trailer_polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/LidarFrameSupplementMsg":"\n    # LidarFrameSupplementMsg\n    bool on_use\n    bool trailer_existed\n    TrailerMessageMsg trailer_msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrailerMessageMsg\n    # TrailerMessageMsg\n    float32 trailer_theta\n    Point2DMsg[4] trailer_polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/LidarObjectSupplementMsg":"\n    # LidarObjectSupplementMsg\n    bool is_orientation_ready\n    bool on_use\n    AttributePointCloudFMsg cloud\n    AttributePointCloudDMsg cloud_world\n    bool is_background\n    bool is_fp\n    float32 fp_prob\n    bool is_in_roi\n    uint64 num_points_in_roi\n    float32 height_above_ground\n    uint32 lidar_algorithm_type\n    VectorFloatNestedMsg[] raw_probs\n    string[] raw_classification_methods\n    \n    ================================================================================\n    MSG: zhito_ap/msg/AttributePointCloudFMsg\n    # AttributePointCloudFMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointFMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointFMsg\n    # PointFMsg\n    float32 x\n    float32 y\n    float32 z\n    float32 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array4DoubleNestedMsg\n    float64[4] m_float64\n    \n    ================================================================================\n    MSG: zhito_ap/msg/AttributePointCloudDMsg\n    # AttributePointCloudDMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointDMsg\n    # PointDMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/VectorFloatNestedMsg\n    float32[] m_float32\n    \n    ","zhito_ap/msg/LightStatusMsg":"\n    # LightStatusMsg\n    float64 brake_visible\n    float64 brake_switch_on\n    float64 left_turn_visible\n    float64 left_turn_switch_on\n    float64 right_turn_visible\n    float64 right_turn_switch_on\n    \n    ","zhito_ap/msg/LineInfoMsg":"\n    # LineInfoMsg\n    uint32 lane_type\n    float64 quality\n    float64 c0_position\n    float64 c1_heading_angle\n    float64 c2_curvature\n    float64 c3_curvature_derivative\n    float64 longitude_start\n    float64 longitude_end\n    \n    ","zhito_ap/msg/LineSegmentMsg":"\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/LocalizationEstimateMsg":"\n    # LocalizationEstimateMsg\n    HeaderMsg m_header\n    PoseMsg pose\n    UncertaintyMsg uncertainty\n    float64 measurement_time\n    TrajectoryPointMsg[] trajectory_point\n    MsfStatusMsg msf_status\n    MsfSensorMsgStatusMsg sensor_status\n    int32 status\n    float64 mileage\n    float32 trailer_theta\n    float32 vehicle_to_curb_dist\n    StateMessageMsg state_message\n    DebugMessageMsg debug_message\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PoseMsg\n    # PoseMsg\n    PointENUMsg position\n    QuaternionMsg orientation\n    Point3DMsg linear_velocity\n    Point3DMsg linear_acceleration\n    Point3DMsg angular_velocity\n    float64 heading\n    Point3DMsg linear_acceleration_vrf\n    Point3DMsg angular_velocity_vrf\n    Point3DMsg euler_angles\n    Point3DMsg linear_velocity_vrf\n    PointLLHMsg position_llh\n    PointLLHMsg origin_llh\n    PointENUMsg global_offset\n    RelativePoseMsg relative_pose\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointLLHMsg\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RelativePoseMsg\n    # RelativePoseMsg\n    float64 relative_distance\n    float64 relative_heading\n    float64 reserved_1\n    float64 reserved_2\n    float64 reserved_3\n    float64 reserved_4\n    \n    ================================================================================\n    MSG: zhito_ap/msg/UncertaintyMsg\n    # UncertaintyMsg\n    Point3DMsg position_std_dev\n    Point3DMsg orientation_std_dev\n    Point3DMsg linear_velocity_std_dev\n    Point3DMsg linear_acceleration_std_dev\n    Point3DMsg angular_velocity_std_dev\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfStatusMsg\n    # MsfStatusMsg\n    uint32 local_lidar_consistency\n    uint32 gnss_consistency\n    uint32 local_lidar_status\n    uint32 local_lidar_quality\n    uint32 gnsspos_position_type\n    uint32 msf_running_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfSensorMsgStatusMsg\n    # MsfSensorMsgStatusMsg\n    uint32 imu_delay_status\n    uint32 imu_missing_status\n    uint32 imu_data_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StateMessageMsg\n    # StateMessageMsg\n    int32 fusion_state\n    int32 imu_state\n    int32 gnss_state\n    int32 wheel_state\n    int32 vision_state\n    int32 lidar_state\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DebugMessageMsg\n    # DebugMessageMsg\n    SensorMessageMsg sensor_message\n    ExtrinsicParaMsg extrinsic_para\n    bool skew_status\n    string adm_status\n    string reserved_1\n    string reserved_2\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMessageMsg\n    # SensorMessageMsg\n    int32 imu_delay\n    int32 gnss_delay\n    int32 wheel_delay\n    int32 vision_delay\n    int32 lidar_delay\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ExtrinsicParaMsg\n    # ExtrinsicParaMsg\n    Point3DMsg vi_eluer_zxy_deg\n    Point3DMsg vg_eluer_zxy_deg\n    Point3DMsg vc_eluer_zxy_deg\n    Point3DMsg vb_eluer_zxy_deg\n    Point3DMsg vl_eluer_zxy_deg\n    QuaternionMsg wheel_ko\n    \n    ","zhito_ap/msg/LogInfoMsg":"\n    # LogInfoMsg\n    uint64 time_stamp\n    uint32 log_level\n    string module_name\n    string msg\n    string file_name\n    string function_name\n    uint32 line_num\n    \n    ","zhito_ap/msg/MainChangeLaneMsg":"\n    # MainChangeLaneMsg\n    uint32 type\n    TargetLaneMsg[] default_lane\n    MainStopMsg default_lane_stop\n    MainStopMsg target_lane_stop\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TargetLaneMsg\n    # TargetLaneMsg\n    string id\n    float64 start_s\n    float64 end_s\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainStopMsg\n    # MainStopMsg\n    uint32 reason_code\n    string reason\n    PointENUMsg stop_point\n    float64 stop_heading\n    uint32 change_lane_type\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/MainCruiseMsg":"\n    # MainCruiseMsg\n    uint32 change_lane_type\n    \n    ","zhito_ap/msg/MainDecisionMsg":"\n    # MainDecisionMsg\n    uint32 task_case\n    MainCruiseMsg cruise\n    MainStopMsg stop\n    MainEmergencyStopMsg estop\n    MainChangeLaneMsg change_lane\n    MainMissionCompleteMsg mission_complete\n    MainNotReadyMsg not_ready\n    MainParkingMsg parking\n    TargetLaneMsg[] target_lane\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainCruiseMsg\n    # MainCruiseMsg\n    uint32 change_lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainStopMsg\n    # MainStopMsg\n    uint32 reason_code\n    string reason\n    PointENUMsg stop_point\n    float64 stop_heading\n    uint32 change_lane_type\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainEmergencyStopMsg\n    # MainEmergencyStopMsg\n    uint32 reason_code\n    string reason\n    uint32 task_case\n    EmergencyStopHardBrakeMsg hard_brake\n    EmergencyStopCruiseToStopMsg cruise_to_stop\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EmergencyStopHardBrakeMsg\n    # EmergencyStopHardBrakeMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EmergencyStopCruiseToStopMsg\n    # EmergencyStopCruiseToStopMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainChangeLaneMsg\n    # MainChangeLaneMsg\n    uint32 type\n    TargetLaneMsg[] default_lane\n    MainStopMsg default_lane_stop\n    MainStopMsg target_lane_stop\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TargetLaneMsg\n    # TargetLaneMsg\n    string id\n    float64 start_s\n    float64 end_s\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainMissionCompleteMsg\n    # MainMissionCompleteMsg\n    PointENUMsg stop_point\n    float64 stop_heading\n    uint32 reason_code\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainNotReadyMsg\n    # MainNotReadyMsg\n    string reason\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MainParkingMsg\n    # MainParkingMsg\n    uint32 status\n    \n    ","zhito_ap/msg/MainEmergencyStopMsg":"\n    # MainEmergencyStopMsg\n    uint32 reason_code\n    string reason\n    uint32 task_case\n    EmergencyStopHardBrakeMsg hard_brake\n    EmergencyStopCruiseToStopMsg cruise_to_stop\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EmergencyStopHardBrakeMsg\n    # EmergencyStopHardBrakeMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/EmergencyStopCruiseToStopMsg\n    # EmergencyStopCruiseToStopMsg\n    string id\n    \n    ","zhito_ap/msg/MainMissionCompleteMsg":"\n    # MainMissionCompleteMsg\n    PointENUMsg stop_point\n    float64 stop_heading\n    uint32 reason_code\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/MainNotReadyMsg":"\n    # MainNotReadyMsg\n    string reason\n    \n    ","zhito_ap/msg/MainParkingMsg":"\n    # MainParkingMsg\n    uint32 status\n    \n    ","zhito_ap/msg/MainStopMsg":"\n    # MainStopMsg\n    uint32 reason_code\n    string reason\n    PointENUMsg stop_point\n    float64 stop_heading\n    uint32 change_lane_type\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/MapMsg":"\n    # MapMsg\n    HdmapHeaderMsg m_header\n    CrosswalkMsg[] crosswalk\n    JunctionMsg[] junction\n    HdmapLaneMsg[] lane\n    HdmapStopSignMsg[] stop_sign\n    SignalMsg[] signal\n    YieldSignMsg[] m_yield\n    OverlapMsg[] overlap\n    ClearAreaMsg[] clear_area\n    SpeedBumpMsg[] speed_bump\n    RoadMsg[] road\n    ParkingSpaceMsg[] parking_space\n    PNCJunctionMsg[] pnc_junction\n    SweepZoneMsg[] sweep_zone\n    FireHydrantMsg[] fire_hydrant\n    HdmapTrafficSignMsg[] sign\n    SignalGroupMsg[] signal_group\n    JunctionRoadGroupMsg[] junction_road_group\n    PoleMsg[] pole\n    LandMarkMsg[] landmark\n    ProtrusionMsg[] protrusion\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapHeaderMsg\n    # HdmapHeaderMsg\n    string version\n    string date\n    ProjectionMsg projection\n    string district\n    string generation\n    string rev_major\n    string rev_minor\n    float64 left\n    float64 top\n    float64 right\n    float64 bottom\n    string vendor\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProjectionMsg\n    # ProjectionMsg\n    string proj\n    float64 origin_latitude_deg\n    float64 origin_longitude_deg\n    float64 origin_altitude_m\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CrosswalkMsg\n    # CrosswalkMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionMsg\n    # JunctionMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    IdMsg[] signal_group_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapLaneMsg\n    # HdmapLaneMsg\n    IdMsg id\n    CurveMsg central_curve\n    HdmapLaneBoundaryMsg left_boundary\n    HdmapLaneBoundaryMsg right_boundary\n    float64 length\n    float64 speed_limit\n    IdMsg[] overlap_id\n    IdMsg[] predecessor_id\n    IdMsg[] successor_id\n    IdMsg[] left_neighbor_forward_lane_id\n    IdMsg[] right_neighbor_forward_lane_id\n    uint32 type\n    uint32 turn\n    IdMsg[] left_neighbor_reverse_lane_id\n    IdMsg[] right_neighbor_reverse_lane_id\n    IdMsg junction_id\n    LaneSampleAssociationMsg[] left_sample\n    LaneSampleAssociationMsg[] right_sample\n    uint32 direction\n    LaneSampleAssociationMsg[] left_road_sample\n    LaneSampleAssociationMsg[] right_road_sample\n    IdMsg[] self_reverse_lane_id\n    float64 min_speed_limit\n    bool is_illegal_lane\n    bool is_side_road\n    bool is_connecting_lane\n    bool is_passable_lane\n    IdMsg section_id\n    bool is_vehicle_on\n    LaneSlopeMsg[] slope\n    LaneCurvatureMsg[] curvature\n    uint32 connection_type\n    uint32 attribute\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapLaneBoundaryMsg\n    # HdmapLaneBoundaryMsg\n    IdMsg id\n    CurveMsg curve\n    float64 length\n    bool is_virtual\n    LaneBoundaryTypeMsg[] boundary_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneBoundaryTypeMsg\n    # LaneBoundaryTypeMsg\n    float64 s\n    uint32[] types\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSampleAssociationMsg\n    # LaneSampleAssociationMsg\n    float64 s\n    float64 width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSlopeMsg\n    # LaneSlopeMsg\n    float64 s\n    float64 value\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneCurvatureMsg\n    # LaneCurvatureMsg\n    float64 s\n    float64 curve_value\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapStopSignMsg\n    # HdmapStopSignMsg\n    IdMsg id\n    CurveMsg[] stop_line\n    IdMsg[] overlap_id\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SignalMsg\n    # SignalMsg\n    IdMsg id\n    HdmapPolygonMsg boundary\n    SubsignalMsg[] subsignal\n    IdMsg[] overlap_id\n    uint32 type\n    CurveMsg[] stop_line\n    SignInfoMsg[] sign_info\n    IdMsg subsignal_id\n    IdMsg signal_group_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SubsignalMsg\n    # SubsignalMsg\n    IdMsg id\n    uint32 type\n    PointENUMsg location\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SignInfoMsg\n    # SignInfoMsg\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/YieldSignMsg\n    # YieldSignMsg\n    IdMsg id\n    CurveMsg[] stop_line\n    IdMsg[] overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/OverlapMsg\n    # OverlapMsg\n    IdMsg id\n    ObjectOverlapInfoMsg[] m_object\n    RegionOverlapInfoMsg[] region_overlap\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectOverlapInfoMsg\n    # ObjectOverlapInfoMsg\n    IdMsg id\n    uint32 type\n    float64 start_s\n    float64 end_s\n    bool is_merge\n    IdMsg region_overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RegionOverlapInfoMsg\n    # RegionOverlapInfoMsg\n    IdMsg id\n    HdmapPolygonMsg[] polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ClearAreaMsg\n    # ClearAreaMsg\n    IdMsg id\n    IdMsg[] overlap_id\n    HdmapPolygonMsg polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SpeedBumpMsg\n    # SpeedBumpMsg\n    IdMsg id\n    IdMsg[] overlap_id\n    CurveMsg[] position\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadMsg\n    # RoadMsg\n    IdMsg id\n    RoadSectionMsg[] section\n    IdMsg junction_id\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadSectionMsg\n    # RoadSectionMsg\n    IdMsg id\n    IdMsg[] lane_id\n    HdmapRoadBoundaryMsg boundary\n    IdMsg[] sign_id\n    WarningInfoMsg[] warning_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapRoadBoundaryMsg\n    # HdmapRoadBoundaryMsg\n    BoundaryPolygonMsg outer_polygon\n    BoundaryPolygonMsg[] hole\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryPolygonMsg\n    # BoundaryPolygonMsg\n    BoundaryEdgeMsg[] edge\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryEdgeMsg\n    # BoundaryEdgeMsg\n    CurveMsg curve\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/WarningInfoMsg\n    # WarningInfoMsg\n    float64 s\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ParkingSpaceMsg\n    # ParkingSpaceMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    float64 heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PNCJunctionMsg\n    # PNCJunctionMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    PassageGroupMsg[] passage_group\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PassageGroupMsg\n    # PassageGroupMsg\n    IdMsg id\n    HdmapPassageMsg[] passage\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPassageMsg\n    # HdmapPassageMsg\n    IdMsg id\n    IdMsg[] signal_id\n    IdMsg[] yield_id\n    IdMsg[] stop_sign_id\n    IdMsg[] lane_id\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SweepZoneMsg\n    # SweepZoneMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    string[] route_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/FireHydrantMsg\n    # FireHydrantMsg\n    PointENUMsg point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapTrafficSignMsg\n    # HdmapTrafficSignMsg\n    IdMsg id\n    PointENUMsg[] points\n    uint32 type\n    IdMsg section_id\n    float32 rect_width\n    float32 rect_height\n    uint32 point_num\n    PointENUMsg board_direction\n    PointENUMsg anchor_point\n    float32 board_height\n    uint32 shape\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SignalGroupMsg\n    # SignalGroupMsg\n    IdMsg id\n    IdMsg junction_id\n    IdMsg[] signal_id\n    float64 north_angle\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionRoadGroupMsg\n    # JunctionRoadGroupMsg\n    IdMsg id\n    IdMsg begin_junction_id\n    IdMsg end_junction_id\n    IdMsg[] road_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PoleMsg\n    # PoleMsg\n    IdMsg id\n    PointENUMsg[] points\n    uint32 type\n    IdMsg section_id\n    float32 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LandMarkMsg\n    # LandMarkMsg\n    IdMsg id\n    uint32 type\n    PointENUMsg[] points\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProtrusionMsg\n    # ProtrusionMsg\n    IdMsg id\n    uint32 type\n    ProtrusionBoundaryMsg protrusion_boundary\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProtrusionBoundaryMsg\n    # ProtrusionBoundaryMsg\n    IdMsg id\n    CurveMsg curve\n    float64 length\n    ProtrusionSourceMsg[] protrusion_source\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProtrusionSourceMsg\n    # ProtrusionSourceMsg\n    float64 s\n    uint32 type\n    \n    ","zhito_ap/msg/MsfSensorMsgStatusMsg":"\n    # MsfSensorMsgStatusMsg\n    uint32 imu_delay_status\n    uint32 imu_missing_status\n    uint32 imu_data_status\n    \n    ","zhito_ap/msg/MsfStatusMsg":"\n    # MsfStatusMsg\n    uint32 local_lidar_consistency\n    uint32 gnss_consistency\n    uint32 local_lidar_status\n    uint32 local_lidar_quality\n    uint32 gnsspos_position_type\n    uint32 msf_running_status\n    \n    ","zhito_ap/msg/NearbyObstacleMsg":"\n    # NearbyObstacleMsg\n    int32 id\n    float64 s\n    float64 l\n    \n    ","zhito_ap/msg/NodeSampleInfosMsg":"\n    # NodeSampleInfosMsg\n    string node_name\n    TopicSampleInfoMsg[] topics_sampleinfos\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TopicSampleInfoMsg\n    # TopicSampleInfoMsg\n    string m_topicnames\n    int64 m_sourcetimestamp\n    int64 m_dsttimestamp\n    uint32 m_sequence_num\n    \n    ","zhito_ap/msg/ObjectAvoidMsg":"\n    # ObjectAvoidMsg\n    string id\n    \n    ","zhito_ap/msg/ObjectDecisionMsg":"\n    # ObjectDecisionMsg\n    string id\n    int32 perception_id\n    ObjectDecisionTypeMsg[] object_decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectDecisionTypeMsg\n    # ObjectDecisionTypeMsg\n    uint32 object_tag_case\n    ObjectIgnoreMsg ignore\n    ObjectStopMsg stop\n    ObjectFollowMsg follow\n    ObjectYieldMsg m_yield\n    ObjectOvertakeMsg overtake\n    ObjectNudgeMsg nudge\n    ObjectAvoidMsg avoid\n    ObjectSidePassMsg side_pass\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectIgnoreMsg\n    # ObjectIgnoreMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectStopMsg\n    # ObjectStopMsg\n    uint32 reason_code\n    float64 distance_s\n    PointENUMsg stop_point\n    float64 stop_heading\n    string[] wait_for_obstacle\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectFollowMsg\n    # ObjectFollowMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectYieldMsg\n    # ObjectYieldMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectOvertakeMsg\n    # ObjectOvertakeMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectNudgeMsg\n    # ObjectNudgeMsg\n    uint32 type\n    float64 distance_l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectAvoidMsg\n    # ObjectAvoidMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectSidePassMsg\n    # ObjectSidePassMsg\n    uint32 type\n    \n    ","zhito_ap/msg/ObjectDecisionTypeMsg":"\n    # ObjectDecisionTypeMsg\n    uint32 object_tag_case\n    ObjectIgnoreMsg ignore\n    ObjectStopMsg stop\n    ObjectFollowMsg follow\n    ObjectYieldMsg m_yield\n    ObjectOvertakeMsg overtake\n    ObjectNudgeMsg nudge\n    ObjectAvoidMsg avoid\n    ObjectSidePassMsg side_pass\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectIgnoreMsg\n    # ObjectIgnoreMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectStopMsg\n    # ObjectStopMsg\n    uint32 reason_code\n    float64 distance_s\n    PointENUMsg stop_point\n    float64 stop_heading\n    string[] wait_for_obstacle\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectFollowMsg\n    # ObjectFollowMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectYieldMsg\n    # ObjectYieldMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectOvertakeMsg\n    # ObjectOvertakeMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectNudgeMsg\n    # ObjectNudgeMsg\n    uint32 type\n    float64 distance_l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectAvoidMsg\n    # ObjectAvoidMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectSidePassMsg\n    # ObjectSidePassMsg\n    uint32 type\n    \n    ","zhito_ap/msg/ObjectDecisionsMsg":"\n    # ObjectDecisionsMsg\n    ObjectDecisionMsg[] decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectDecisionMsg\n    # ObjectDecisionMsg\n    string id\n    int32 perception_id\n    ObjectDecisionTypeMsg[] object_decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectDecisionTypeMsg\n    # ObjectDecisionTypeMsg\n    uint32 object_tag_case\n    ObjectIgnoreMsg ignore\n    ObjectStopMsg stop\n    ObjectFollowMsg follow\n    ObjectYieldMsg m_yield\n    ObjectOvertakeMsg overtake\n    ObjectNudgeMsg nudge\n    ObjectAvoidMsg avoid\n    ObjectSidePassMsg side_pass\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectIgnoreMsg\n    # ObjectIgnoreMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectStopMsg\n    # ObjectStopMsg\n    uint32 reason_code\n    float64 distance_s\n    PointENUMsg stop_point\n    float64 stop_heading\n    string[] wait_for_obstacle\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectFollowMsg\n    # ObjectFollowMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectYieldMsg\n    # ObjectYieldMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectOvertakeMsg\n    # ObjectOvertakeMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectNudgeMsg\n    # ObjectNudgeMsg\n    uint32 type\n    float64 distance_l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectAvoidMsg\n    # ObjectAvoidMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectSidePassMsg\n    # ObjectSidePassMsg\n    uint32 type\n    \n    ","zhito_ap/msg/ObjectFollowMsg":"\n    # ObjectFollowMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/ObjectIgnoreMsg":"\n    # ObjectIgnoreMsg\n    string id\n    \n    ","zhito_ap/msg/ObjectInfoMsg":"\n    # ObjectInfoMsg\n    uint32 id\n    Array3DoubleNestedMsg[] polygon\n    float32[3] direction\n    float32 theta\n    float32 theta_variance\n    float64[3] center\n    Array3DoubleNestedMsg[3] center_uncertainty\n    float64[3] local_center\n    float32[3] size\n    float32[3] size_variance\n    float64[3] anchor_point\n    float64[3] local_anchor_point\n    uint32 type\n    float32[] type_probs\n    uint32 sub_type\n    float32[] sub_type_probs\n    float32 confidence\n    uint32 track_id\n    float32[3] velocity\n    float32[3] rel_velocity\n    Array3FloatNestedMsg[3] velocity_uncertainty\n    bool velocity_converged\n    float32 velocity_confidence\n    float32[3] acceleration\n    Array3FloatNestedMsg[3] acceleration_uncertainty\n    float64 tracking_time\n    float64 latest_tracked_time\n    uint32 motion_state\n    Array3DoubleNestedMsg[100] drops\n    uint32 drop_num\n    bool b_cipv\n    uint32 lidar_algorithm_type\n    RadarObjectSupplementMsg radar_supplement\n    CameraObjectSupplementMsg camera_supplement\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3DoubleNestedMsg\n    float64[3] m_float64\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3FloatNestedMsg\n    float32[3] m_float32\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RadarObjectSupplementMsg\n    # RadarObjectSupplementMsg\n    bool on_use\n    float32 range\n    float32 angle\n    float32 relative_radial_velocity\n    float32 relative_tangential_velocity\n    float32 radial_velocity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CameraObjectSupplementMsg\n    # CameraObjectSupplementMsg\n    string sensor_name\n    BBox2DMsg bbox\n    BBox2DMsg front_box\n    BBox2DMsg back_box\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ","zhito_ap/msg/ObjectMsg":"\n    # ObjectMsg\n    int32 id\n    PointCloudDMsg polygon\n    float32[3] direction\n    float32 theta\n    float32 theta_variance\n    float64[3] center\n    float64[3] local_center\n    Array3DoubleNestedMsg[3] center_uncertainty\n    float32[3] size\n    float32[3] size_variance\n    float64[3] anchor_point\n    float64[3] local_anchor_point\n    uint32 type\n    float32[] type_probs\n    uint32 sub_type\n    float32[] sub_type_probs\n    float32 confidence\n    int32 track_id\n    float32[3] velocity\n    float32[3] rel_velocity\n    Array3FloatNestedMsg[3] velocity_uncertainty\n    bool velocity_converged\n    float32 velocity_confidence\n    float32[3] acceleration\n    Array3FloatNestedMsg[3] acceleration_uncertainty\n    float64 tracking_time\n    float64 latest_tracked_time\n    uint32 motion_state\n    Array3DoubleNestedMsg[100] drops\n    uint64 drop_num\n    bool b_cipv\n    LidarObjectSupplementMsg lidar_supplement\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointCloudDMsg\n    # PointCloudDMsg\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointDMsg\n    # PointDMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array4DoubleNestedMsg\n    float64[4] m_float64\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3DoubleNestedMsg\n    float64[3] m_float64\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3FloatNestedMsg\n    float32[3] m_float32\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LidarObjectSupplementMsg\n    # LidarObjectSupplementMsg\n    bool is_orientation_ready\n    bool on_use\n    AttributePointCloudFMsg cloud\n    AttributePointCloudDMsg cloud_world\n    bool is_background\n    bool is_fp\n    float32 fp_prob\n    bool is_in_roi\n    uint64 num_points_in_roi\n    float32 height_above_ground\n    uint32 lidar_algorithm_type\n    VectorFloatNestedMsg[] raw_probs\n    string[] raw_classification_methods\n    \n    ================================================================================\n    MSG: zhito_ap/msg/AttributePointCloudFMsg\n    # AttributePointCloudFMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointFMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointFMsg\n    # PointFMsg\n    float32 x\n    float32 y\n    float32 z\n    float32 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/AttributePointCloudDMsg\n    # AttributePointCloudDMsg\n    float64[] m_points_timestamp\n    float32[] m_points_height\n    int32[] m_points_beam_id\n    uint8[] m_points_label\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/VectorFloatNestedMsg\n    float32[] m_float32\n    \n    ","zhito_ap/msg/ObjectNudgeMsg":"\n    # ObjectNudgeMsg\n    uint32 type\n    float64 distance_l\n    \n    ","zhito_ap/msg/ObjectOverlapInfoMsg":"\n    # ObjectOverlapInfoMsg\n    IdMsg id\n    uint32 type\n    float64 start_s\n    float64 end_s\n    bool is_merge\n    IdMsg region_overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ","zhito_ap/msg/ObjectOvertakeMsg":"\n    # ObjectOvertakeMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/ObjectSidePassMsg":"\n    # ObjectSidePassMsg\n    uint32 type\n    \n    ","zhito_ap/msg/ObjectStopMsg":"\n    # ObjectStopMsg\n    uint32 reason_code\n    float64 distance_s\n    PointENUMsg stop_point\n    float64 stop_heading\n    string[] wait_for_obstacle\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/ObjectYieldMsg":"\n    # ObjectYieldMsg\n    float64 distance_s\n    PointENUMsg fence_point\n    float64 fence_heading\n    float64 time_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/ObstacleDecisionMsg":"\n    # ObstacleDecisionMsg\n    string id\n    uint32 perception_id\n    uint8 decision\n    float32 safety_distance\n    float32 ttc\n    \n    ","zhito_ap/msg/ObstacleDecisionsMsg":"\n    # ObstacleDecisionsMsg\n    ObstacleDecisionMsg[] decisions\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstacleDecisionMsg\n    # ObstacleDecisionMsg\n    string id\n    uint32 perception_id\n    uint8 decision\n    float32 safety_distance\n    float32 ttc\n    \n    ","zhito_ap/msg/ObstacleIntentMsg":"\n    # ObstacleIntentMsg\n    uint32 type\n    uint8 lat_type\n    \n    ","zhito_ap/msg/ObstaclePriorityMsg":"\n    # ObstaclePriorityMsg\n    uint32 priority\n    \n    ","zhito_ap/msg/OverlapMsg":"\n    # OverlapMsg\n    IdMsg id\n    ObjectOverlapInfoMsg[] m_object\n    RegionOverlapInfoMsg[] region_overlap\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectOverlapInfoMsg\n    # ObjectOverlapInfoMsg\n    IdMsg id\n    uint32 type\n    float64 start_s\n    float64 end_s\n    bool is_merge\n    IdMsg region_overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RegionOverlapInfoMsg\n    # RegionOverlapInfoMsg\n    IdMsg id\n    HdmapPolygonMsg[] polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/PNCJunctionMsg":"\n    # PNCJunctionMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    PassageGroupMsg[] passage_group\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PassageGroupMsg\n    # PassageGroupMsg\n    IdMsg id\n    HdmapPassageMsg[] passage\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPassageMsg\n    # HdmapPassageMsg\n    IdMsg id\n    IdMsg[] signal_id\n    IdMsg[] yield_id\n    IdMsg[] stop_sign_id\n    IdMsg[] lane_id\n    uint32 type\n    \n    ","zhito_ap/msg/PanoFuseInputMessageMsg":"\n    # PanoFuseInputMessageMsg\n    string sensor_id\n    uint64 time_stamp\n    uint32 seq_num\n    PanoObjectMsg[] objects\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PanoObjectMsg\n    # PanoObjectMsg\n    uint32 id\n    uint32 type\n    float32 type_prob\n    uint32 sub_type\n    float32 sub_type_prob\n    uint32 track_id\n    uint32 miss\n    uint32 life\n    float64[3] rel_pos\n    float32[3] rel_velocity\n    float32[3] rel_acceleration\n    float32 theta\n    float64[3] size\n    BEVCornerPosMsg[] bev_cornerpos\n    float64 scale\n    RectInfoMsg rect_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BEVCornerPosMsg\n    # BEVCornerPosMsg\n    float64[3] rel_pos\n    bool is_visiable\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RectInfoMsg\n    # RectInfoMsg\n    BBox2DMsg rect_body\n    BBox2DMsg rect_vis\n    uint32 sub_rect_type\n    BBox2DMsg rect_tail\n    BBox2DMsg rect_head\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ","zhito_ap/msg/PanoObjectMsg":"\n    # PanoObjectMsg\n    uint32 id\n    uint32 type\n    float32 type_prob\n    uint32 sub_type\n    float32 sub_type_prob\n    uint32 track_id\n    uint32 miss\n    uint32 life\n    float64[3] rel_pos\n    float32[3] rel_velocity\n    float32[3] rel_acceleration\n    float32 theta\n    float64[3] size\n    BEVCornerPosMsg[] bev_cornerpos\n    float64 scale\n    RectInfoMsg rect_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BEVCornerPosMsg\n    # BEVCornerPosMsg\n    float64[3] rel_pos\n    bool is_visiable\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RectInfoMsg\n    # RectInfoMsg\n    BBox2DMsg rect_body\n    BBox2DMsg rect_vis\n    uint32 sub_rect_type\n    BBox2DMsg rect_tail\n    BBox2DMsg rect_head\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ","zhito_ap/msg/ParkingInfoMsg":"\n    # ParkingInfoMsg\n    string parking_space_id\n    PointENUMsg parking_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/ParkingSpaceMsg":"\n    # ParkingSpaceMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    float64 heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/PassageGroupMsg":"\n    # PassageGroupMsg\n    IdMsg id\n    HdmapPassageMsg[] passage\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPassageMsg\n    # HdmapPassageMsg\n    IdMsg id\n    IdMsg[] signal_id\n    IdMsg[] yield_id\n    IdMsg[] stop_sign_id\n    IdMsg[] lane_id\n    uint32 type\n    \n    ","zhito_ap/msg/PassageMsg":"\n    # PassageMsg\n    LaneSegmentMsg[] segment\n    bool can_exit\n    uint32 change_lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSegmentMsg\n    # LaneSegmentMsg\n    string id\n    float64 start_s\n    float64 end_s\n    \n    ","zhito_ap/msg/PathPointMsg":"\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ","zhito_ap/msg/PerceptionDebugMessageMsg":"\n    # PerceptionDebugMessageMsg\n    PerceptionTrajectoryMsg[] trajectory\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionTrajectoryMsg\n    # PerceptionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ","zhito_ap/msg/PerceptionLineSegmentMsg":"\n    # PerceptionLineSegmentMsg\n    uint32 line_segment_id\n    uint32 line_segment_type\n    uint32 line_segment_color\n    float32 line_segment_confidence\n    float32 c0\n    float32 c1\n    float32 c2\n    float32 c3\n    float32 begin_dist\n    float32 end_dist\n    Point2DMsg[] line_segment_points\n    Point2DMsg[] line_segment_points_confidence\n    float32 mark_width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/PerceptionLocMessageMsg":"\n    # PerceptionLocMessageMsg\n    HeaderMsg m_header\n    float64 measurement_time\n    PerceptionSignMsg[] signs\n    PerceptionLineSegmentMsg[] line_segmens\n    PerceptionPoleMsg[] poles\n    SensorProcessedLaneLinesMsg sensor_processed_lane_lines\n    uint32 error_code\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionSignMsg\n    # PerceptionSignMsg\n    uint32 track_id\n    uint32 traffic_sign_type\n    float32 object_confidence\n    float32 rect_width\n    float32 rect_height\n    Point2DMsg[] points\n    Point2DMsg[] points_confidence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionLineSegmentMsg\n    # PerceptionLineSegmentMsg\n    uint32 line_segment_id\n    uint32 line_segment_type\n    uint32 line_segment_color\n    float32 line_segment_confidence\n    float32 c0\n    float32 c1\n    float32 c2\n    float32 c3\n    float32 begin_dist\n    float32 end_dist\n    Point2DMsg[] line_segment_points\n    Point2DMsg[] line_segment_points_confidence\n    float32 mark_width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionPoleMsg\n    # PerceptionPoleMsg\n    uint32 pole_id\n    float32 pole_confidence\n    uint32 pole_type\n    Point2DMsg[] pole_points\n    Point2DMsg[] pole_points_confidence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorProcessedLaneLinesMsg\n    # SensorProcessedLaneLinesMsg\n    SensorProcessedLaneInfoMsg left_lane_line\n    SensorProcessedLaneInfoMsg right_lane_line\n    SensorProcessedLaneInfoMsg[] next_left_lane_lines\n    SensorProcessedLaneInfoMsg[] next_right_lane_lines\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorProcessedLaneInfoMsg\n    # SensorProcessedLaneInfoMsg\n    uint32 lane_line_type\n    float64 quality\n    float64 c0_position\n    float64 c1_heading_angle\n    float64 c2_curvature\n    float64 c3_curvature_derivative\n    float64 longitude_start\n    float64 longitude_end\n    \n    ","zhito_ap/msg/PerceptionObstacleMsg":"\n    # PerceptionObstacleMsg\n    uint32 id\n    Point3DMsg position\n    float64 theta\n    Point3DMsg velocity\n    float64 length\n    float64 width\n    float64 height\n    Point3DMsg[] polygon_point\n    float64 tracking_time\n    uint32 type\n    uint32 motion_state\n    float64 timestamp\n    float64[] point_cloud\n    float64 confidence\n    uint32 confidence_type\n    Point3DMsg[] drops\n    Point3DMsg acceleration\n    Point3DMsg anchor_point\n    BBox2DMsg bbox2d\n    uint32 sub_type\n    SensorMeasurementMsg[] measurements\n    float64 height_above_ground\n    float64[] position_covariance\n    float64[] velocity_covariance\n    float64[] acceleration_covariance\n    LightStatusMsg light_status\n    PerceptionDebugMessageMsg msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMeasurementMsg\n    # SensorMeasurementMsg\n    string sensor_id\n    uint32 id\n    Point3DMsg position\n    float64 theta\n    float64 length\n    float64 width\n    float64 height\n    Point3DMsg velocity\n    uint32 type\n    uint32 sub_type\n    float64 timestamp\n    BBox2DMsg box\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LightStatusMsg\n    # LightStatusMsg\n    float64 brake_visible\n    float64 brake_switch_on\n    float64 left_turn_visible\n    float64 left_turn_switch_on\n    float64 right_turn_visible\n    float64 right_turn_switch_on\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionDebugMessageMsg\n    # PerceptionDebugMessageMsg\n    PerceptionTrajectoryMsg[] trajectory\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionTrajectoryMsg\n    # PerceptionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ","zhito_ap/msg/PerceptionObstaclesMsg":"\n    # PerceptionObstaclesMsg\n    PerceptionObstacleMsg[] perception_obstacle\n    HeaderMsg m_header\n    uint32 error_code\n    LaneMarkersMsg lane_marker\n    CIPVInfoMsg cipv_info\n    bool trailer_existed\n    TrailerMessageMsg trailer\n    PerceptionTransformMsg transform\n    BsdInfoMsg bsd_info\n    SpeedLimitMessageMsg speed_limit_info\n    uint8 rear_perception_available\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionObstacleMsg\n    # PerceptionObstacleMsg\n    uint32 id\n    Point3DMsg position\n    float64 theta\n    Point3DMsg velocity\n    float64 length\n    float64 width\n    float64 height\n    Point3DMsg[] polygon_point\n    float64 tracking_time\n    uint32 type\n    uint32 motion_state\n    float64 timestamp\n    float64[] point_cloud\n    float64 confidence\n    uint32 confidence_type\n    Point3DMsg[] drops\n    Point3DMsg acceleration\n    Point3DMsg anchor_point\n    BBox2DMsg bbox2d\n    uint32 sub_type\n    SensorMeasurementMsg[] measurements\n    float64 height_above_ground\n    float64[] position_covariance\n    float64[] velocity_covariance\n    float64[] acceleration_covariance\n    LightStatusMsg light_status\n    PerceptionDebugMessageMsg msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMeasurementMsg\n    # SensorMeasurementMsg\n    string sensor_id\n    uint32 id\n    Point3DMsg position\n    float64 theta\n    float64 length\n    float64 width\n    float64 height\n    Point3DMsg velocity\n    uint32 type\n    uint32 sub_type\n    float64 timestamp\n    BBox2DMsg box\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LightStatusMsg\n    # LightStatusMsg\n    float64 brake_visible\n    float64 brake_switch_on\n    float64 left_turn_visible\n    float64 left_turn_switch_on\n    float64 right_turn_visible\n    float64 right_turn_switch_on\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionDebugMessageMsg\n    # PerceptionDebugMessageMsg\n    PerceptionTrajectoryMsg[] trajectory\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionTrajectoryMsg\n    # PerceptionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneMarkersMsg\n    # LaneMarkersMsg\n    LaneMarkerMsg left_lane_marker\n    LaneMarkerMsg right_lane_marker\n    LaneMarkerMsg[] next_left_lane_marker\n    LaneMarkerMsg[] next_right_lane_marker\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneMarkerMsg\n    # LaneMarkerMsg\n    uint32 lane_type\n    float64 quality\n    uint32 model_degree\n    float64 c0_position\n    float64 c1_heading_angle\n    float64 c2_curvature\n    float64 c3_curvature_derivative\n    float64 view_range\n    float64 longitude_start\n    float64 longitude_end\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CIPVInfoMsg\n    # CIPVInfoMsg\n    uint32 cipv_id\n    uint32[] potential_cipv_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrailerMessageMsg\n    # TrailerMessageMsg\n    float32 trailer_theta\n    Point2DMsg[4] trailer_polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionTransformMsg\n    # PerceptionTransformMsg\n    Point3DMsg translation\n    QuaternionMsg rotation\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BsdInfoMsg\n    # BsdInfoMsg\n    bool left_blind_spot_alarm\n    bool right_blind_spot_alarm\n    bool bsd_work_status\n    uint64 time_stamp\n    uint64 time_stamp2\n    uint64 soctime_stamp\n    uint32 rc\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SpeedLimitMessageMsg\n    # SpeedLimitMessageMsg\n    bool is_speed_limit_sign_exist\n    uint32 speed_limit_type\n    uint8 limit_speed\n    \n    ","zhito_ap/msg/PerceptionPoleMsg":"\n    # PerceptionPoleMsg\n    uint32 pole_id\n    float32 pole_confidence\n    uint32 pole_type\n    Point2DMsg[] pole_points\n    Point2DMsg[] pole_points_confidence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/PerceptionSignMsg":"\n    # PerceptionSignMsg\n    uint32 track_id\n    uint32 traffic_sign_type\n    float32 object_confidence\n    float32 rect_width\n    float32 rect_height\n    Point2DMsg[] points\n    Point2DMsg[] points_confidence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/PerceptionTrajectoryMsg":"\n    # PerceptionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ","zhito_ap/msg/PerceptionTransformMsg":"\n    # PerceptionTransformMsg\n    Point3DMsg translation\n    QuaternionMsg rotation\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ","zhito_ap/msg/PlanningDebugDataMsg":"\n    # PlanningDebugDataMsg\n    InputDataMsg input\n    TrajectoryStitcherStateMsg traj_stitcher_state\n    PositionAnalysisMsg distance_to_referenceline_point\n    LaneChangeAnalysisMsg lane_change_analysis\n    DecisionInfoMsg decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/InputDataMsg\n    # InputDataMsg\n    LocalizationEstimateMsg localization\n    ChassisMsg chassis\n    ADM2PPMsg adm_input\n    HeaderMsg perception_header\n    HeaderMsg prediction_header\n    HeaderMsg zmap_header\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LocalizationEstimateMsg\n    # LocalizationEstimateMsg\n    HeaderMsg m_header\n    PoseMsg pose\n    UncertaintyMsg uncertainty\n    float64 measurement_time\n    TrajectoryPointMsg[] trajectory_point\n    MsfStatusMsg msf_status\n    MsfSensorMsgStatusMsg sensor_status\n    int32 status\n    float64 mileage\n    float32 trailer_theta\n    float32 vehicle_to_curb_dist\n    StateMessageMsg state_message\n    DebugMessageMsg debug_message\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PoseMsg\n    # PoseMsg\n    PointENUMsg position\n    QuaternionMsg orientation\n    Point3DMsg linear_velocity\n    Point3DMsg linear_acceleration\n    Point3DMsg angular_velocity\n    float64 heading\n    Point3DMsg linear_acceleration_vrf\n    Point3DMsg angular_velocity_vrf\n    Point3DMsg euler_angles\n    Point3DMsg linear_velocity_vrf\n    PointLLHMsg position_llh\n    PointLLHMsg origin_llh\n    PointENUMsg global_offset\n    RelativePoseMsg relative_pose\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointLLHMsg\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RelativePoseMsg\n    # RelativePoseMsg\n    float64 relative_distance\n    float64 relative_heading\n    float64 reserved_1\n    float64 reserved_2\n    float64 reserved_3\n    float64 reserved_4\n    \n    ================================================================================\n    MSG: zhito_ap/msg/UncertaintyMsg\n    # UncertaintyMsg\n    Point3DMsg position_std_dev\n    Point3DMsg orientation_std_dev\n    Point3DMsg linear_velocity_std_dev\n    Point3DMsg linear_acceleration_std_dev\n    Point3DMsg angular_velocity_std_dev\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfStatusMsg\n    # MsfStatusMsg\n    uint32 local_lidar_consistency\n    uint32 gnss_consistency\n    uint32 local_lidar_status\n    uint32 local_lidar_quality\n    uint32 gnsspos_position_type\n    uint32 msf_running_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfSensorMsgStatusMsg\n    # MsfSensorMsgStatusMsg\n    uint32 imu_delay_status\n    uint32 imu_missing_status\n    uint32 imu_data_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StateMessageMsg\n    # StateMessageMsg\n    int32 fusion_state\n    int32 imu_state\n    int32 gnss_state\n    int32 wheel_state\n    int32 vision_state\n    int32 lidar_state\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DebugMessageMsg\n    # DebugMessageMsg\n    SensorMessageMsg sensor_message\n    ExtrinsicParaMsg extrinsic_para\n    bool skew_status\n    string adm_status\n    string reserved_1\n    string reserved_2\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMessageMsg\n    # SensorMessageMsg\n    int32 imu_delay\n    int32 gnss_delay\n    int32 wheel_delay\n    int32 vision_delay\n    int32 lidar_delay\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ExtrinsicParaMsg\n    # ExtrinsicParaMsg\n    Point3DMsg vi_eluer_zxy_deg\n    Point3DMsg vg_eluer_zxy_deg\n    Point3DMsg vc_eluer_zxy_deg\n    Point3DMsg vb_eluer_zxy_deg\n    Point3DMsg vl_eluer_zxy_deg\n    QuaternionMsg wheel_ko\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ChassisMsg\n    # ChassisMsg\n    bool engine_started\n    uint8 engine_started_status\n    bool parking_brake\n    uint8 parking_brake_status\n    bool high_beam_signal\n    uint8 high_beam_signal_status\n    bool low_beam_signal\n    uint8 low_beam_signal_status\n    bool left_turn_signal\n    uint8 left_turn_signal_status\n    bool right_turn_signal\n    uint8 right_turn_signal_status\n    bool horn\n    uint8 horn_status\n    bool wiper\n    uint8 wiper_status\n    float32 engine_rpm\n    uint8 engine_rpm_status\n    float32 speed_mps\n    uint8 speed_mps_status\n    float32 speed_mps_filtered\n    float32 wheel_spd_fl\n    uint8 wheel_spd_fl_status\n    float32 wheel_spd_fr\n    uint8 wheel_spd_fr_status\n    float32 wheel_spd_rl\n    uint8 wheel_spd_rl_status\n    float32 wheel_spd_rr\n    uint8 wheel_spd_rr_status\n    float32 wheel_spd_fl_filtered\n    float32 wheel_spd_fr_filtered\n    float32 wheel_spd_rl_filtered\n    float32 wheel_spd_rr_filtered\n    float32 odometer_m\n    uint8 odometer_m_status\n    float32 throttle_percentage\n    uint8 throttle_percentage_status\n    float32 brake_percentage\n    uint8 brake_percentage_status\n    float32 steering_angle\n    uint8 steering_angle_status\n    float32 steering_percentage\n    uint8 steering_percentage_status\n    float32 steering_torque_nm\n    uint8 steering_torque_nm_status\n    float32 steering_angle_velocity\n    uint8 steering_angle_velocity_status\n    float32 actual_torque\n    uint8 actual_torque_status\n    float32 yaw_rate\n    float32 yaw_rate_filtered\n    uint8 yaw_rate_status\n    float32 gear_ratio\n    uint8 gear_ratio_status\n    float32 longitude_acc\n    uint8 longitude_acc_status\n    float32 longitude_acc_filtered\n    float32 lateral_acc\n    uint8 lateral_acc_status\n    float32 lateral_acc_filtered\n    int32 fuel_range_m\n    uint8 fuel_range_m_status\n    uint32 driving_mode\n    uint8 driving_mode_status\n    uint32 gear_location\n    uint8 gear_location_status\n    uint8 trailer_connected\n    uint8 trailer_connected_status\n    HeaderMsg m_header\n    float64 eng_fuel_rate\n    float64 eng_instant_fuel_economy\n    float64 eng_average_fuel_economy\n    uint32 mass\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ADM2PPMsg\n    # ADM2PPMsg\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 ad_target_speed\n    uint8 ad_target_time_gap\n    uint8 driver_confirm_lane_change\n    uint8 drive_mode\n    uint8 sp_mode\n    uint8 i_acc_mode\n    uint8 drvr_lane_change_req\n    uint64 time_stamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryStitcherStateMsg\n    # TrajectoryStitcherStateMsg\n    uint32 replan_reason_type\n    float64 lat_diff\n    float64 lon_diff\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PositionAnalysisMsg\n    # PositionAnalysisMsg\n    DistanceToReferencePathMsg[] referenceline_distance_to_map\n    DistanceToReferencePathMsg[] trajectroy_distance_to_referenceline\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DistanceToReferencePathMsg\n    # DistanceToReferencePathMsg\n    float64 s\n    float64 distance\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneChangeAnalysisMsg\n    # LaneChangeAnalysisMsg\n    LaneChangeStatusMsg[] target_lane_obstacle_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneChangeStatusMsg\n    # LaneChangeStatusMsg\n    string obstacle_id\n    uint8 obstacle_direction\n    float64 obstacle_ttc\n    float64 obstacle_distance\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DecisionInfoMsg\n    # DecisionInfoMsg\n    ObstacleDecisionsMsg obstacle_decision\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstacleDecisionsMsg\n    # ObstacleDecisionsMsg\n    ObstacleDecisionMsg[] decisions\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstacleDecisionMsg\n    # ObstacleDecisionMsg\n    string id\n    uint32 perception_id\n    uint8 decision\n    float32 safety_distance\n    float32 ttc\n    \n    ","zhito_ap/msg/PlanningLatencyStatsMsg":"\n    # PlanningLatencyStatsMsg\n    float64 total_time_ms\n    TaskStatsMsg[] task_stats\n    float64 init_frame_time_ms\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TaskStatsMsg\n    # TaskStatsMsg\n    string name\n    float64 time_ms\n    \n    ","zhito_ap/msg/PlanningStatusMsg":"\n    # PlanningStatusMsg\n    uint32 planning_status\n    uint8 main_ad_mission\n    uint8 current_ad_mission\n    uint8 drive_mode\n    uint8 auto_lane_change_req\n    uint8 lane_change_condition\n    uint8 degrade_for_exceed_odd\n    uint32 out_odd_reason\n    uint8 sp_available\n    uint8 take_over_lane_change\n    uint8 pp_process_time\n    uint8 planning_action\n    uint32 pdphmi_caution_info\n    uint8 trajectory_type\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/Point2DMsg":"\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/Point3DMsg":"\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/PointCloudDMsg":"\n    # PointCloudDMsg\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointDMsg\n    # PointDMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array4DoubleNestedMsg\n    float64[4] m_float64\n    \n    ","zhito_ap/msg/PointCloudMsg":"\n    # PointCloudMsg\n    HeaderStackMsg m_header\n    uint8[100] frame_id\n    PointXYZITMsg[80000] point\n    bool is_dense\n    float64 measurement_time\n    uint32 width\n    uint32 height\n    uint32 lidar_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderStackMsg\n    # HeaderStackMsg\n    float64 timestamp_sec\n    uint8[100] module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbStackMsg status\n    uint8[100] frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbStackMsg\n    # StatusPbStackMsg\n    uint32 error_code\n    uint8[100] msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointXYZITMsg\n    # PointXYZITMsg\n    float32 x\n    float32 y\n    float32 z\n    uint32 intensity\n    uint64 timestamp\n    \n    ","zhito_ap/msg/PointDMsg":"\n    # PointDMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 intensity\n    \n    ","zhito_ap/msg/PointENUMsg":"\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/PointFMsg":"\n    # PointFMsg\n    float32 x\n    float32 y\n    float32 z\n    float32 intensity\n    \n    ","zhito_ap/msg/PointIndicesMsg":"\n    # PointIndicesMsg\n    int32[] indices\n    \n    ","zhito_ap/msg/PointLLHMsg":"\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ","zhito_ap/msg/PointXYZITMsg":"\n    # PointXYZITMsg\n    float32 x\n    float32 y\n    float32 z\n    uint32 intensity\n    uint64 timestamp\n    \n    ","zhito_ap/msg/PoleMsg":"\n    # PoleMsg\n    IdMsg id\n    PointENUMsg[] points\n    uint32 type\n    IdMsg section_id\n    float32 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/PolygonMsg":"\n    # PolygonMsg\n    Point3DMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/PoseMsg":"\n    # PoseMsg\n    PointENUMsg position\n    QuaternionMsg orientation\n    Point3DMsg linear_velocity\n    Point3DMsg linear_acceleration\n    Point3DMsg angular_velocity\n    float64 heading\n    Point3DMsg linear_acceleration_vrf\n    Point3DMsg angular_velocity_vrf\n    Point3DMsg euler_angles\n    Point3DMsg linear_velocity_vrf\n    PointLLHMsg position_llh\n    PointLLHMsg origin_llh\n    PointENUMsg global_offset\n    RelativePoseMsg relative_pose\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointLLHMsg\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RelativePoseMsg\n    # RelativePoseMsg\n    float64 relative_distance\n    float64 relative_heading\n    float64 reserved_1\n    float64 reserved_2\n    float64 reserved_3\n    float64 reserved_4\n    \n    ","zhito_ap/msg/PositionAnalysisMsg":"\n    # PositionAnalysisMsg\n    DistanceToReferencePathMsg[] referenceline_distance_to_map\n    DistanceToReferencePathMsg[] trajectroy_distance_to_referenceline\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DistanceToReferencePathMsg\n    # DistanceToReferencePathMsg\n    float64 s\n    float64 distance\n    \n    ","zhito_ap/msg/PredictionLaneSegmentMsg":"\n    # PredictionLaneSegmentMsg\n    string lane_id\n    float64 start_s\n    float64 end_s\n    uint32 lane_turn_type\n    LanePointMsg[] lane_point\n    float64 adc_s\n    int32 adc_lane_point_idx\n    float64 total_length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LanePointMsg\n    # LanePointMsg\n    Point3DMsg position\n    float64 heading\n    float64 width\n    float64 relative_s\n    float64 relative_l\n    float64 angle_diff\n    float64 kappa\n    uint32 scenario_type\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/PredictionObstacleMsg":"\n    # PredictionObstacleMsg\n    PerceptionObstacleMsg perception_obstacle\n    float64 timestamp\n    float64 predicted_period\n    PredictionTrajectoryMsg[] trajectory\n    ObstacleIntentMsg intent\n    ObstaclePriorityMsg priority\n    bool is_static\n    FeatureMsg[] feature\n    uint32 lane_assign\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionObstacleMsg\n    # PerceptionObstacleMsg\n    uint32 id\n    Point3DMsg position\n    float64 theta\n    Point3DMsg velocity\n    float64 length\n    float64 width\n    float64 height\n    Point3DMsg[] polygon_point\n    float64 tracking_time\n    uint32 type\n    uint32 motion_state\n    float64 timestamp\n    float64[] point_cloud\n    float64 confidence\n    uint32 confidence_type\n    Point3DMsg[] drops\n    Point3DMsg acceleration\n    Point3DMsg anchor_point\n    BBox2DMsg bbox2d\n    uint32 sub_type\n    SensorMeasurementMsg[] measurements\n    float64 height_above_ground\n    float64[] position_covariance\n    float64[] velocity_covariance\n    float64[] acceleration_covariance\n    LightStatusMsg light_status\n    PerceptionDebugMessageMsg msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMeasurementMsg\n    # SensorMeasurementMsg\n    string sensor_id\n    uint32 id\n    Point3DMsg position\n    float64 theta\n    float64 length\n    float64 width\n    float64 height\n    Point3DMsg velocity\n    uint32 type\n    uint32 sub_type\n    float64 timestamp\n    BBox2DMsg box\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LightStatusMsg\n    # LightStatusMsg\n    float64 brake_visible\n    float64 brake_switch_on\n    float64 left_turn_visible\n    float64 left_turn_switch_on\n    float64 right_turn_visible\n    float64 right_turn_switch_on\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionDebugMessageMsg\n    # PerceptionDebugMessageMsg\n    PerceptionTrajectoryMsg[] trajectory\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionTrajectoryMsg\n    # PerceptionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionTrajectoryMsg\n    # PredictionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstacleIntentMsg\n    # ObstacleIntentMsg\n    uint32 type\n    uint8 lat_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstaclePriorityMsg\n    # ObstaclePriorityMsg\n    uint32 priority\n    \n    ================================================================================\n    MSG: zhito_ap/msg/FeatureMsg\n    # FeatureMsg\n    int32 id\n    Point3DMsg[] polygon_point\n    Point3DMsg position\n    Point3DMsg front_position\n    Point3DMsg velocity\n    Point3DMsg raw_velocity\n    Point3DMsg acceleration\n    float64 velocity_heading\n    float64 speed\n    float64 acc\n    float64 theta\n    float64 length\n    float64 width\n    float64 height\n    float64 tracking_time\n    float64 timestamp\n    LaneMsg lane\n    LaneAssignMsg lane_assign\n    JunctionFeatureMsg junction_feature\n    Point3DMsg t_position\n    Point3DMsg t_velocity\n    float64 t_velocity_heading\n    float64 t_speed\n    Point3DMsg t_acceleration\n    float64 t_acc\n    bool is_still\n    uint32 type\n    float64 label_update_time_delta\n    ObstaclePriorityMsg priority\n    bool is_near_junction\n    PredictionTrajectoryPointMsg[] future_trajectory_points\n    TrajectoryPointMsg[] short_term_predicted_trajectory_points\n    PredictionTrajectoryMsg[] predicted_trajectory\n    TrajectoryPointMsg[] adc_trajectory_point\n    string[] surrounding_lane_id\n    string[] within_lane_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneMsg\n    # LaneMsg\n    LaneFeatureMsg[] current_lane_feature\n    LaneFeatureMsg lane_feature\n    LaneFeatureMsg[] nearby_lane_feature\n    LaneGraphMsg lane_graph\n    LaneGraphMsg lane_graph_ordered\n    float64 label_update_time_delta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneFeatureMsg\n    # LaneFeatureMsg\n    string lane_id\n    uint32 lane_turn_type\n    float64 lane_s\n    float64 lane_l\n    float64 angle_diff\n    float64 dist_to_left_boundary\n    float64 dist_to_right_boundary\n    float64 lane_heading\n    uint32 lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneGraphMsg\n    # LaneGraphMsg\n    LaneSequenceMsg[] lane_sequence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceMsg\n    # LaneSequenceMsg\n    int32 lane_sequence_id\n    PredictionLaneSegmentMsg[] lane_segment\n    int32 adc_lane_segment_idx\n    PathPointMsg[] path_point\n    uint32 lane_type\n    float64 lane_s\n    float64 lane_l\n    bool vehicle_on_lane\n    NearbyObstacleMsg[] nearby_obstacle\n    StopSignMsg stop_sign\n    int32 right_of_way\n    LaneSequenceFeaturesMsg features\n    int32 label\n    float64 probability\n    float64 acceleration\n    float64 time_to_lane_center\n    float64 time_to_lane_edge\n    uint32 behavior_type\n    LanePointMsg[] curr_lane_point\n    LanePointMsg[] left_neighbor_point\n    LanePointMsg[] right_neighbor_point\n    NearbyObstacleMsg[] left_nearby_obstacle\n    NearbyObstacleMsg[] right_nearby_obstacle\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionLaneSegmentMsg\n    # PredictionLaneSegmentMsg\n    string lane_id\n    float64 start_s\n    float64 end_s\n    uint32 lane_turn_type\n    LanePointMsg[] lane_point\n    float64 adc_s\n    int32 adc_lane_point_idx\n    float64 total_length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LanePointMsg\n    # LanePointMsg\n    Point3DMsg position\n    float64 heading\n    float64 width\n    float64 relative_s\n    float64 relative_l\n    float64 angle_diff\n    float64 kappa\n    uint32 scenario_type\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/NearbyObstacleMsg\n    # NearbyObstacleMsg\n    int32 id\n    float64 s\n    float64 l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StopSignMsg\n    # StopSignMsg\n    string stop_sign_id\n    string lane_id\n    float64 lane_s\n    float64 lane_sequence_s\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceFeaturesMsg\n    # LaneSequenceFeaturesMsg\n    float64[] mlp_features\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneAssignMsg\n    # LaneAssignMsg\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionFeatureMsg\n    # JunctionFeatureMsg\n    string junction_id\n    float64 junction_range\n    LaneFeatureMsg enter_lane\n    JunctionExitMsg[] junction_exit\n    float64[] junction_mlp_feature\n    int32[] junction_mlp_label\n    float64[] junction_mlp_probability\n    string[] start_lane_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionExitMsg\n    # JunctionExitMsg\n    string exit_lane_id\n    Point3DMsg exit_position\n    float64 exit_heading\n    float64 exit_width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionTrajectoryPointMsg\n    # PredictionTrajectoryPointMsg\n    PredictionPathPointMsg path_point\n    float64 timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionPathPointMsg\n    # PredictionPathPointMsg\n    float64 x\n    float64 y\n    float64 velocity_heading\n    \n    ","zhito_ap/msg/PredictionObstaclesMsg":"\n    # PredictionObstaclesMsg\n    HeaderMsg m_header\n    PredictionObstacleMsg[] prediction_obstacle\n    uint32 perception_error_code\n    float64 start_timestamp\n    float64 end_timestamp\n    IntentMsg intent\n    ScenarioMsg scenario\n    bool trailer_existed\n    TrailerMessageMsg trailer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionObstacleMsg\n    # PredictionObstacleMsg\n    PerceptionObstacleMsg perception_obstacle\n    float64 timestamp\n    float64 predicted_period\n    PredictionTrajectoryMsg[] trajectory\n    ObstacleIntentMsg intent\n    ObstaclePriorityMsg priority\n    bool is_static\n    FeatureMsg[] feature\n    uint32 lane_assign\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionObstacleMsg\n    # PerceptionObstacleMsg\n    uint32 id\n    Point3DMsg position\n    float64 theta\n    Point3DMsg velocity\n    float64 length\n    float64 width\n    float64 height\n    Point3DMsg[] polygon_point\n    float64 tracking_time\n    uint32 type\n    uint32 motion_state\n    float64 timestamp\n    float64[] point_cloud\n    float64 confidence\n    uint32 confidence_type\n    Point3DMsg[] drops\n    Point3DMsg acceleration\n    Point3DMsg anchor_point\n    BBox2DMsg bbox2d\n    uint32 sub_type\n    SensorMeasurementMsg[] measurements\n    float64 height_above_ground\n    float64[] position_covariance\n    float64[] velocity_covariance\n    float64[] acceleration_covariance\n    LightStatusMsg light_status\n    PerceptionDebugMessageMsg msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMeasurementMsg\n    # SensorMeasurementMsg\n    string sensor_id\n    uint32 id\n    Point3DMsg position\n    float64 theta\n    float64 length\n    float64 width\n    float64 height\n    Point3DMsg velocity\n    uint32 type\n    uint32 sub_type\n    float64 timestamp\n    BBox2DMsg box\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LightStatusMsg\n    # LightStatusMsg\n    float64 brake_visible\n    float64 brake_switch_on\n    float64 left_turn_visible\n    float64 left_turn_switch_on\n    float64 right_turn_visible\n    float64 right_turn_switch_on\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionDebugMessageMsg\n    # PerceptionDebugMessageMsg\n    PerceptionTrajectoryMsg[] trajectory\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PerceptionTrajectoryMsg\n    # PerceptionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionTrajectoryMsg\n    # PredictionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstacleIntentMsg\n    # ObstacleIntentMsg\n    uint32 type\n    uint8 lat_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObstaclePriorityMsg\n    # ObstaclePriorityMsg\n    uint32 priority\n    \n    ================================================================================\n    MSG: zhito_ap/msg/FeatureMsg\n    # FeatureMsg\n    int32 id\n    Point3DMsg[] polygon_point\n    Point3DMsg position\n    Point3DMsg front_position\n    Point3DMsg velocity\n    Point3DMsg raw_velocity\n    Point3DMsg acceleration\n    float64 velocity_heading\n    float64 speed\n    float64 acc\n    float64 theta\n    float64 length\n    float64 width\n    float64 height\n    float64 tracking_time\n    float64 timestamp\n    LaneMsg lane\n    LaneAssignMsg lane_assign\n    JunctionFeatureMsg junction_feature\n    Point3DMsg t_position\n    Point3DMsg t_velocity\n    float64 t_velocity_heading\n    float64 t_speed\n    Point3DMsg t_acceleration\n    float64 t_acc\n    bool is_still\n    uint32 type\n    float64 label_update_time_delta\n    ObstaclePriorityMsg priority\n    bool is_near_junction\n    PredictionTrajectoryPointMsg[] future_trajectory_points\n    TrajectoryPointMsg[] short_term_predicted_trajectory_points\n    PredictionTrajectoryMsg[] predicted_trajectory\n    TrajectoryPointMsg[] adc_trajectory_point\n    string[] surrounding_lane_id\n    string[] within_lane_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneMsg\n    # LaneMsg\n    LaneFeatureMsg[] current_lane_feature\n    LaneFeatureMsg lane_feature\n    LaneFeatureMsg[] nearby_lane_feature\n    LaneGraphMsg lane_graph\n    LaneGraphMsg lane_graph_ordered\n    float64 label_update_time_delta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneFeatureMsg\n    # LaneFeatureMsg\n    string lane_id\n    uint32 lane_turn_type\n    float64 lane_s\n    float64 lane_l\n    float64 angle_diff\n    float64 dist_to_left_boundary\n    float64 dist_to_right_boundary\n    float64 lane_heading\n    uint32 lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneGraphMsg\n    # LaneGraphMsg\n    LaneSequenceMsg[] lane_sequence\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceMsg\n    # LaneSequenceMsg\n    int32 lane_sequence_id\n    PredictionLaneSegmentMsg[] lane_segment\n    int32 adc_lane_segment_idx\n    PathPointMsg[] path_point\n    uint32 lane_type\n    float64 lane_s\n    float64 lane_l\n    bool vehicle_on_lane\n    NearbyObstacleMsg[] nearby_obstacle\n    StopSignMsg stop_sign\n    int32 right_of_way\n    LaneSequenceFeaturesMsg features\n    int32 label\n    float64 probability\n    float64 acceleration\n    float64 time_to_lane_center\n    float64 time_to_lane_edge\n    uint32 behavior_type\n    LanePointMsg[] curr_lane_point\n    LanePointMsg[] left_neighbor_point\n    LanePointMsg[] right_neighbor_point\n    NearbyObstacleMsg[] left_nearby_obstacle\n    NearbyObstacleMsg[] right_nearby_obstacle\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionLaneSegmentMsg\n    # PredictionLaneSegmentMsg\n    string lane_id\n    float64 start_s\n    float64 end_s\n    uint32 lane_turn_type\n    LanePointMsg[] lane_point\n    float64 adc_s\n    int32 adc_lane_point_idx\n    float64 total_length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LanePointMsg\n    # LanePointMsg\n    Point3DMsg position\n    float64 heading\n    float64 width\n    float64 relative_s\n    float64 relative_l\n    float64 angle_diff\n    float64 kappa\n    uint32 scenario_type\n    float64 speed_limit\n    \n    ================================================================================\n    MSG: zhito_ap/msg/NearbyObstacleMsg\n    # NearbyObstacleMsg\n    int32 id\n    float64 s\n    float64 l\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StopSignMsg\n    # StopSignMsg\n    string stop_sign_id\n    string lane_id\n    float64 lane_s\n    float64 lane_sequence_s\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSequenceFeaturesMsg\n    # LaneSequenceFeaturesMsg\n    float64[] mlp_features\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneAssignMsg\n    # LaneAssignMsg\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionFeatureMsg\n    # JunctionFeatureMsg\n    string junction_id\n    float64 junction_range\n    LaneFeatureMsg enter_lane\n    JunctionExitMsg[] junction_exit\n    float64[] junction_mlp_feature\n    int32[] junction_mlp_label\n    float64[] junction_mlp_probability\n    string[] start_lane_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionExitMsg\n    # JunctionExitMsg\n    string exit_lane_id\n    Point3DMsg exit_position\n    float64 exit_heading\n    float64 exit_width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionTrajectoryPointMsg\n    # PredictionTrajectoryPointMsg\n    PredictionPathPointMsg path_point\n    float64 timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionPathPointMsg\n    # PredictionPathPointMsg\n    float64 x\n    float64 y\n    float64 velocity_heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IntentMsg\n    # IntentMsg\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ScenarioMsg\n    # ScenarioMsg\n    uint32 type\n    string junction_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrailerMessageMsg\n    # TrailerMessageMsg\n    float32 trailer_theta\n    Point2DMsg[4] trailer_polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/PredictionPathPointMsg":"\n    # PredictionPathPointMsg\n    float64 x\n    float64 y\n    float64 velocity_heading\n    \n    ","zhito_ap/msg/PredictionTrajectoryMsg":"\n    # PredictionTrajectoryMsg\n    float64 probability\n    TrajectoryPointMsg[] trajectory_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ","zhito_ap/msg/PredictionTrajectoryPointMsg":"\n    # PredictionTrajectoryPointMsg\n    PredictionPathPointMsg path_point\n    float64 timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PredictionPathPointMsg\n    # PredictionPathPointMsg\n    float64 x\n    float64 y\n    float64 velocity_heading\n    \n    ","zhito_ap/msg/ProjectionMsg":"\n    # ProjectionMsg\n    string proj\n    float64 origin_latitude_deg\n    float64 origin_longitude_deg\n    float64 origin_altitude_m\n    \n    ","zhito_ap/msg/ProtrusionBoundaryMsg":"\n    # ProtrusionBoundaryMsg\n    IdMsg id\n    CurveMsg curve\n    float64 length\n    ProtrusionSourceMsg[] protrusion_source\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProtrusionSourceMsg\n    # ProtrusionSourceMsg\n    float64 s\n    uint32 type\n    \n    ","zhito_ap/msg/ProtrusionMsg":"\n    # ProtrusionMsg\n    IdMsg id\n    uint32 type\n    ProtrusionBoundaryMsg protrusion_boundary\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProtrusionBoundaryMsg\n    # ProtrusionBoundaryMsg\n    IdMsg id\n    CurveMsg curve\n    float64 length\n    ProtrusionSourceMsg[] protrusion_source\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProtrusionSourceMsg\n    # ProtrusionSourceMsg\n    float64 s\n    uint32 type\n    \n    ","zhito_ap/msg/ProtrusionSourceMsg":"\n    # ProtrusionSourceMsg\n    float64 s\n    uint32 type\n    \n    ","zhito_ap/msg/QuaternionMsg":"\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ","zhito_ap/msg/RSSInfoMsg":"\n    # RSSInfoMsg\n    bool is_rss_safe\n    float64 cur_dist_lon\n    float64 rss_safe_dist_lon\n    float64 acc_lon_range_minimum\n    float64 acc_lon_range_maximum\n    float64 acc_lat_left_range_minimum\n    float64 acc_lat_left_range_maximum\n    float64 acc_lat_right_range_minimum\n    float64 acc_lat_right_range_maximum\n    \n    ","zhito_ap/msg/RadarObjectSupplementMsg":"\n    # RadarObjectSupplementMsg\n    bool on_use\n    float32 range\n    float32 angle\n    float32 relative_radial_velocity\n    float32 relative_tangential_velocity\n    float32 radial_velocity\n    \n    ","zhito_ap/msg/RadarStatusMsg":"\n    # RadarStatusMsg\n    uint32 perception_radar_status\n    uint8 radar_process_time\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/RawNavInfoMsg":"\n    # RawNavInfoMsg\n    HeaderMsg m_header\n    uint32 sys_state\n    uint32 sat_status\n    uint16 week\n    float64 sec\n    float32[3] gyr\n    float32[3] acc\n    float32 age\n    uint8[2] gps_num_sat_used\n    uint8[2] gps_num_sats\n    float64[3] pos\n    float32[3] pos_std\n    float32[3] vel_enu\n    float32[3] vel_enu_std\n    float32[3] acc_in_vehicle\n    float32[3] att\n    float32[3] att_std\n    float32[3] paltance_in_vehicle\n    float64 time_stamp\n    float64 soctime_stamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ","zhito_ap/msg/RawNaviInfoMsg":"\n    # RawNaviInfoMsg\n    uint16 m_week\n    float64 m_sec\n    float32[3] m_gyr\n    float32[3] m_acc\n    uint8 m_sys_state\n    uint8[2] m_gps_num_sat_used\n    uint8 m_sat_status\n    float32 m_age\n    uint8[2] m_gps_num_sats\n    float64[3] m_pos\n    float32[3] m_pos_std\n    float32[4] m_vel\n    float32[4] m_vel_std\n    float32[3] m_acc_in_vehicle\n    float32[3] m_att\n    float32[3] m_att_std\n    float32[3] m_paltance_in_vehicle\n    uint64 time_stamp\n    uint64 soctime_stamp\n    uint32 rolling_counter\n    \n    ","zhito_ap/msg/RectInfoMsg":"\n    # RectInfoMsg\n    BBox2DMsg rect_body\n    BBox2DMsg rect_vis\n    uint32 sub_rect_type\n    BBox2DMsg rect_tail\n    BBox2DMsg rect_head\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ","zhito_ap/msg/RegionOverlapInfoMsg":"\n    # RegionOverlapInfoMsg\n    IdMsg id\n    HdmapPolygonMsg[] polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/RelativePoseMsg":"\n    # RelativePoseMsg\n    float64 relative_distance\n    float64 relative_heading\n    float64 reserved_1\n    float64 reserved_2\n    float64 reserved_3\n    float64 reserved_4\n    \n    ","zhito_ap/msg/RemoteCMDMsg":"\n    # RemoteCMDMsg\n    uint32 module_name\n    string cmd_data\n    \n    ","zhito_ap/msg/RoadBoundaryMsg":"\n    # RoadBoundaryMsg\n    PointCloudDMsg left_boundary\n    PointCloudDMsg right_boundary\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointCloudDMsg\n    # PointCloudDMsg\n    PointDMsg[] m_points\n    uint64 m_width\n    uint64 m_height\n    Array4DoubleNestedMsg[4] m_sensor_to_world_pose\n    float64 m_timestamp\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointDMsg\n    # PointDMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 intensity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array4DoubleNestedMsg\n    float64[4] m_float64\n    \n    ","zhito_ap/msg/RoadInformationMsg":"\n    # RoadInformationMsg\n    uint8 current_time\n    uint8 current_weather\n    uint8 road_type\n    \n    ","zhito_ap/msg/RoadMsg":"\n    # RoadMsg\n    IdMsg id\n    RoadSectionMsg[] section\n    IdMsg junction_id\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadSectionMsg\n    # RoadSectionMsg\n    IdMsg id\n    IdMsg[] lane_id\n    HdmapRoadBoundaryMsg boundary\n    IdMsg[] sign_id\n    WarningInfoMsg[] warning_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapRoadBoundaryMsg\n    # HdmapRoadBoundaryMsg\n    BoundaryPolygonMsg outer_polygon\n    BoundaryPolygonMsg[] hole\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryPolygonMsg\n    # BoundaryPolygonMsg\n    BoundaryEdgeMsg[] edge\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryEdgeMsg\n    # BoundaryEdgeMsg\n    CurveMsg curve\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/WarningInfoMsg\n    # WarningInfoMsg\n    float64 s\n    uint32 type\n    \n    ","zhito_ap/msg/RoadSectionMsg":"\n    # RoadSectionMsg\n    IdMsg id\n    IdMsg[] lane_id\n    HdmapRoadBoundaryMsg boundary\n    IdMsg[] sign_id\n    WarningInfoMsg[] warning_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapRoadBoundaryMsg\n    # HdmapRoadBoundaryMsg\n    BoundaryPolygonMsg outer_polygon\n    BoundaryPolygonMsg[] hole\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryPolygonMsg\n    # BoundaryPolygonMsg\n    BoundaryEdgeMsg[] edge\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryEdgeMsg\n    # BoundaryEdgeMsg\n    CurveMsg curve\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/WarningInfoMsg\n    # WarningInfoMsg\n    float64 s\n    uint32 type\n    \n    ","zhito_ap/msg/RoadSegmentMsg":"\n    # RoadSegmentMsg\n    string id\n    PassageMsg[] passage\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PassageMsg\n    # PassageMsg\n    LaneSegmentMsg[] segment\n    bool can_exit\n    uint32 change_lane_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSegmentMsg\n    # LaneSegmentMsg\n    string id\n    float64 start_s\n    float64 end_s\n    \n    ","zhito_ap/msg/RoutingMessageMsg":"\n    # RoutingMessageMsg\n    RoutingRequestMsg routing_request\n    RoadSegmentMsg[] road\n    bool stop_for_destination\n    uint32 routing_type\n    uint32 clean_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoutingRequestMsg\n    # RoutingRequestMsg\n    HeaderMsg m_header\n    LaneWaypointMsg[] waypoint\n    LaneSegmentMsg[] blacklisted_lane\n    string[] blacklisted_road\n    bool broadcast\n    ParkingSpaceMsg parking_space\n    ParkingInfoMsg parking_info\n    string default_route_name\n    uint32 routing_type\n    string route_id\n    LaneWaypointMsg starting_point_of_operation\n    LaneWaypointMsg ending_point_of_operation\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneWaypointMsg\n    # LaneWaypointMsg\n    string id\n    float64 s\n    PointENUMsg pose\n    uint32 clean_type\n    uint32 waypoint_type\n    uint32 change_buffer\n    uint32 speed_type\n    PointLLHMsg pose_llh\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointLLHMsg\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSegmentMsg\n    # LaneSegmentMsg\n    string id\n    float64 start_s\n    float64 end_s\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ParkingSpaceMsg\n    # ParkingSpaceMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    float64 heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ParkingInfoMsg\n    # ParkingInfoMsg\n    string parking_space_id\n    PointENUMsg parking_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadSegmentMsg\n    # RoadSegmentMsg\n    string id\n    PassageMsg[] passage\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PassageMsg\n    # PassageMsg\n    LaneSegmentMsg[] segment\n    bool can_exit\n    uint32 change_lane_type\n    \n    ","zhito_ap/msg/RoutingRequestMsg":"\n    # RoutingRequestMsg\n    HeaderMsg m_header\n    LaneWaypointMsg[] waypoint\n    LaneSegmentMsg[] blacklisted_lane\n    string[] blacklisted_road\n    bool broadcast\n    ParkingSpaceMsg parking_space\n    ParkingInfoMsg parking_info\n    string default_route_name\n    uint32 routing_type\n    string route_id\n    LaneWaypointMsg starting_point_of_operation\n    LaneWaypointMsg ending_point_of_operation\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneWaypointMsg\n    # LaneWaypointMsg\n    string id\n    float64 s\n    PointENUMsg pose\n    uint32 clean_type\n    uint32 waypoint_type\n    uint32 change_buffer\n    uint32 speed_type\n    PointLLHMsg pose_llh\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointLLHMsg\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSegmentMsg\n    # LaneSegmentMsg\n    string id\n    float64 start_s\n    float64 end_s\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ParkingSpaceMsg\n    # ParkingSpaceMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    float64 heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ParkingInfoMsg\n    # ParkingInfoMsg\n    string parking_space_id\n    PointENUMsg parking_point\n    \n    ","zhito_ap/msg/RqtCmdMsg":"\n    # RqtCmdMsg\n    uint8 index\n    uint32 cmd_type\n    uint32[] parameters\n    \n    ","zhito_ap/msg/SRStatusMsg":"\n    # SRStatusMsg\n    uint32 lidar_status\n    uint32 sr_status\n    uint8 segmentation_process_time\n    uint8 recognition_process_time\n    uint64 time_stamp\n    \n    ","zhito_ap/msg/ScenarioMsg":"\n    # ScenarioMsg\n    uint32 type\n    string junction_id\n    \n    ","zhito_ap/msg/SensorInformationMsg":"\n    # SensorInformationMsg\n    string name\n    uint8 type\n    uint8 orientation\n    string frame_id\n    \n    ","zhito_ap/msg/SensorMeasurementMsg":"\n    # SensorMeasurementMsg\n    string sensor_id\n    uint32 id\n    Point3DMsg position\n    float64 theta\n    float64 length\n    float64 width\n    float64 height\n    Point3DMsg velocity\n    uint32 type\n    uint32 sub_type\n    float64 timestamp\n    BBox2DMsg box\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ","zhito_ap/msg/SensorMessageMsg":"\n    # SensorMessageMsg\n    int32 imu_delay\n    int32 gnss_delay\n    int32 wheel_delay\n    int32 vision_delay\n    int32 lidar_delay\n    \n    ","zhito_ap/msg/SensorProcessedLaneInfoMsg":"\n    # SensorProcessedLaneInfoMsg\n    uint32 lane_line_type\n    float64 quality\n    float64 c0_position\n    float64 c1_heading_angle\n    float64 c2_curvature\n    float64 c3_curvature_derivative\n    float64 longitude_start\n    float64 longitude_end\n    \n    ","zhito_ap/msg/SensorProcessedLaneLinesMsg":"\n    # SensorProcessedLaneLinesMsg\n    SensorProcessedLaneInfoMsg left_lane_line\n    SensorProcessedLaneInfoMsg right_lane_line\n    SensorProcessedLaneInfoMsg[] next_left_lane_lines\n    SensorProcessedLaneInfoMsg[] next_right_lane_lines\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorProcessedLaneInfoMsg\n    # SensorProcessedLaneInfoMsg\n    uint32 lane_line_type\n    float64 quality\n    float64 c0_position\n    float64 c1_heading_angle\n    float64 c2_curvature\n    float64 c3_curvature_derivative\n    float64 longitude_start\n    float64 longitude_end\n    \n    ","zhito_ap/msg/SensorProcessedMessageMsg":"\n    # SensorProcessedMessageMsg\n    string sensor_id\n    float64 timestamp\n    uint32 seq_num\n    uint16 error_code\n    uint8 process_stage\n    SensorInformationMsg sensor_info\n    float64[3] sensor2world_transform\n    float64[4] sensor2world_rotation\n    uint16 object_num\n    ObjectInfoMsg[] objects\n    LaneLinesMsg lanelines\n    SpeedLimitInfoMsg speed_limit\n    LidarFrameSupplementMsg lidar_frame_supplement\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorInformationMsg\n    # SensorInformationMsg\n    string name\n    uint8 type\n    uint8 orientation\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectInfoMsg\n    # ObjectInfoMsg\n    uint32 id\n    Array3DoubleNestedMsg[] polygon\n    float32[3] direction\n    float32 theta\n    float32 theta_variance\n    float64[3] center\n    Array3DoubleNestedMsg[3] center_uncertainty\n    float64[3] local_center\n    float32[3] size\n    float32[3] size_variance\n    float64[3] anchor_point\n    float64[3] local_anchor_point\n    uint32 type\n    float32[] type_probs\n    uint32 sub_type\n    float32[] sub_type_probs\n    float32 confidence\n    uint32 track_id\n    float32[3] velocity\n    float32[3] rel_velocity\n    Array3FloatNestedMsg[3] velocity_uncertainty\n    bool velocity_converged\n    float32 velocity_confidence\n    float32[3] acceleration\n    Array3FloatNestedMsg[3] acceleration_uncertainty\n    float64 tracking_time\n    float64 latest_tracked_time\n    uint32 motion_state\n    Array3DoubleNestedMsg[100] drops\n    uint32 drop_num\n    bool b_cipv\n    uint32 lidar_algorithm_type\n    RadarObjectSupplementMsg radar_supplement\n    CameraObjectSupplementMsg camera_supplement\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3DoubleNestedMsg\n    float64[3] m_float64\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Array3FloatNestedMsg\n    float32[3] m_float32\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RadarObjectSupplementMsg\n    # RadarObjectSupplementMsg\n    bool on_use\n    float32 range\n    float32 angle\n    float32 relative_radial_velocity\n    float32 relative_tangential_velocity\n    float32 radial_velocity\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CameraObjectSupplementMsg\n    # CameraObjectSupplementMsg\n    string sensor_name\n    BBox2DMsg bbox\n    BBox2DMsg front_box\n    BBox2DMsg back_box\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BBox2DMsg\n    # BBox2DMsg\n    float64 xmin\n    float64 ymin\n    float64 xmax\n    float64 ymax\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneLinesMsg\n    # LaneLinesMsg\n    LineInfoMsg left_lane_line\n    LineInfoMsg right_lane_line\n    uint8 next_left_line_num\n    LineInfoMsg[] next_left_lane_lines\n    uint8 next_right_line_num\n    LineInfoMsg[] next_right_lane_lines\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineInfoMsg\n    # LineInfoMsg\n    uint32 lane_type\n    float64 quality\n    float64 c0_position\n    float64 c1_heading_angle\n    float64 c2_curvature\n    float64 c3_curvature_derivative\n    float64 longitude_start\n    float64 longitude_end\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SpeedLimitInfoMsg\n    # SpeedLimitInfoMsg\n    uint8 speed_limit_sign_exist\n    uint8 speed_limit_type\n    float32 limit_speed\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LidarFrameSupplementMsg\n    # LidarFrameSupplementMsg\n    bool on_use\n    bool trailer_existed\n    TrailerMessageMsg trailer_msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrailerMessageMsg\n    # TrailerMessageMsg\n    float32 trailer_theta\n    Point2DMsg[4] trailer_polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/SignInfoMsg":"\n    # SignInfoMsg\n    uint32 type\n    \n    ","zhito_ap/msg/SignalGroupMsg":"\n    # SignalGroupMsg\n    IdMsg id\n    IdMsg junction_id\n    IdMsg[] signal_id\n    float64 north_angle\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ","zhito_ap/msg/SignalMsg":"\n    # SignalMsg\n    IdMsg id\n    HdmapPolygonMsg boundary\n    SubsignalMsg[] subsignal\n    IdMsg[] overlap_id\n    uint32 type\n    CurveMsg[] stop_line\n    SignInfoMsg[] sign_info\n    IdMsg subsignal_id\n    IdMsg signal_group_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SubsignalMsg\n    # SubsignalMsg\n    IdMsg id\n    uint32 type\n    PointENUMsg location\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SignInfoMsg\n    # SignInfoMsg\n    uint32 type\n    \n    ","zhito_ap/msg/SpeedBumpMsg":"\n    # SpeedBumpMsg\n    IdMsg id\n    IdMsg[] overlap_id\n    CurveMsg[] position\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/SpeedLimitInfoMsg":"\n    # SpeedLimitInfoMsg\n    uint8 speed_limit_sign_exist\n    uint8 speed_limit_type\n    float32 limit_speed\n    \n    ","zhito_ap/msg/SpeedLimitMessageMsg":"\n    # SpeedLimitMessageMsg\n    bool is_speed_limit_sign_exist\n    uint32 speed_limit_type\n    uint8 limit_speed\n    \n    ","zhito_ap/msg/StateMessageMsg":"\n    # StateMessageMsg\n    int32 fusion_state\n    int32 imu_state\n    int32 gnss_state\n    int32 wheel_state\n    int32 vision_state\n    int32 lidar_state\n    \n    ","zhito_ap/msg/StatusPbMsg":"\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ","zhito_ap/msg/StatusPbStackMsg":"\n    # StatusPbStackMsg\n    uint32 error_code\n    uint8[100] msg\n    \n    ","zhito_ap/msg/StopSignMsg":"\n    # StopSignMsg\n    string stop_sign_id\n    string lane_id\n    float64 lane_s\n    float64 lane_sequence_s\n    \n    ","zhito_ap/msg/SubsignalMsg":"\n    # SubsignalMsg\n    IdMsg id\n    uint32 type\n    PointENUMsg location\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/SweepZoneMsg":"\n    # SweepZoneMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    string[] route_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/TargetLaneMsg":"\n    # TargetLaneMsg\n    string id\n    float64 start_s\n    float64 end_s\n    float64 speed_limit\n    \n    ","zhito_ap/msg/TaskStatsMsg":"\n    # TaskStatsMsg\n    string name\n    float64 time_ms\n    \n    ","zhito_ap/msg/TopicSampleInfoMsg":"\n    # TopicSampleInfoMsg\n    string m_topicnames\n    int64 m_sourcetimestamp\n    int64 m_dsttimestamp\n    uint32 m_sequence_num\n    \n    ","zhito_ap/msg/TrafficSignMsg":"\n    # TrafficSignMsg\n    uint8 sign_id\n    uint8 confirm_flag\n    uint16 sign_type\n    uint8 confidence\n    float32 pos_x\n    float32 pos_y\n    float32 pos_z\n    \n    ","zhito_ap/msg/TrailerMessageMsg":"\n    # TrailerMessageMsg\n    float32 trailer_theta\n    Point2DMsg[4] trailer_polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point2DMsg\n    # Point2DMsg\n    float64 x\n    float64 y\n    \n    ","zhito_ap/msg/TrajectoryPointMsg":"\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ","zhito_ap/msg/TrajectoryStitcherStateMsg":"\n    # TrajectoryStitcherStateMsg\n    uint32 replan_reason_type\n    float64 lat_diff\n    float64 lon_diff\n    \n    ","zhito_ap/msg/UbloxMsg":"\n    # UbloxMsg\n    H2puUdpBufferMsg udp_buffer\n    \n    ================================================================================\n    MSG: zhito_ap/msg/H2puUdpBufferMsg\n    # H2puUdpBufferMsg\n    uint32 length\n    uint8[1500] rawbuffer\n    uint64 timestamp\n    \n    ","zhito_ap/msg/UbxPvtMsg":"\n    # UbxPvtMsg\n    uint32 i_tow\n    uint32 year\n    uint32 month\n    uint32 day\n    uint32 hour\n    uint32 min\n    uint32 sec\n    uint32 valid\n    uint32 t_acc\n    int32 nano\n    uint32 fix_type\n    uint32 flags\n    uint32 flags2\n    uint32 num_sv\n    int32 lon\n    int32 lat\n    int32 height\n    int32 h_msl\n    uint32 h_acc\n    uint32 v_acc\n    int32 vel_n\n    int32 vel_e\n    int32 vel_d\n    int32 g_speed\n    int32 head_mot\n    uint32 s_acc\n    uint32 head_acc\n    uint32 p_dop\n    uint32 flags3\n    uint32 reserved1\n    int32 head_veh\n    int32 mag_dec\n    uint32 mag_acc\n    \n    ","zhito_ap/msg/UbxRelposnedMsg":"\n    # UbxRelposnedMsg\n    uint32 version\n    uint32 reserved1\n    uint32 ref_station_id\n    uint32 i_tow\n    int32 rel_pos_n\n    int32 rel_pos_e\n    int32 rel_pos_d\n    int32 rel_pos_length\n    int32 rel_pos_heading\n    uint32 reserved2\n    int32 rel_pos_hpn\n    int32 rel_pos_hpe\n    int32 rel_pos_hpd\n    int32 rel_pos_hp_length\n    uint32 acc_n\n    uint32 acc_e\n    uint32 acc_d\n    uint32 acc_length\n    uint32 acc_heading\n    uint32 reserved3\n    uint32 flags\n    \n    ","zhito_ap/msg/UncertaintyMsg":"\n    # UncertaintyMsg\n    Point3DMsg position_std_dev\n    Point3DMsg orientation_std_dev\n    Point3DMsg linear_velocity_std_dev\n    Point3DMsg linear_acceleration_std_dev\n    Point3DMsg angular_velocity_std_dev\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/VectorFloatNestedMsg":"\n    float32[] m_float32\n    \n    ","zhito_ap/msg/VehicleSignalMsg":"\n    # VehicleSignalMsg\n    uint32 turn_signal\n    bool high_beam\n    bool low_beam\n    bool horn\n    bool emergency_light\n    \n    ","zhito_ap/msg/WarningInfoMsg":"\n    # WarningInfoMsg\n    float64 s\n    uint32 type\n    \n    ","zhito_ap/msg/YieldSignMsg":"\n    # YieldSignMsg\n    IdMsg id\n    CurveMsg[] stop_line\n    IdMsg[] overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ","zhito_ap/msg/ZMapEgoLaneMsg":"\n    # ZMapEgoLaneMsg\n    uint8 lane_stat\n    \n    ","zhito_ap/msg/ZlocVisualizationInfoMsg":"\n    # ZlocVisualizationInfoMsg\n    uint32 length\n    uint64 timestamp\n    uint8[] rawbuffer\n    \n    ","zhito_ap/msg/ZmapMessageMsg":"\n    # ZmapMessageMsg\n    HeaderMsg m_header\n    LocalizationEstimateMsg localization\n    MapMsg m_map\n    RoutingMessageMsg routing\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HeaderMsg\n    # HeaderMsg\n    float64 timestamp_sec\n    string module_name\n    uint32 sequence_num\n    uint64 lidar_timestamp\n    uint64 camera_timestamp\n    uint64 radar_timestamp\n    uint32 version\n    StatusPbMsg status\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StatusPbMsg\n    # StatusPbMsg\n    uint32 error_code\n    string msg\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LocalizationEstimateMsg\n    # LocalizationEstimateMsg\n    HeaderMsg m_header\n    PoseMsg pose\n    UncertaintyMsg uncertainty\n    float64 measurement_time\n    TrajectoryPointMsg[] trajectory_point\n    MsfStatusMsg msf_status\n    MsfSensorMsgStatusMsg sensor_status\n    int32 status\n    float64 mileage\n    float32 trailer_theta\n    float32 vehicle_to_curb_dist\n    StateMessageMsg state_message\n    DebugMessageMsg debug_message\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PoseMsg\n    # PoseMsg\n    PointENUMsg position\n    QuaternionMsg orientation\n    Point3DMsg linear_velocity\n    Point3DMsg linear_acceleration\n    Point3DMsg angular_velocity\n    float64 heading\n    Point3DMsg linear_acceleration_vrf\n    Point3DMsg angular_velocity_vrf\n    Point3DMsg euler_angles\n    Point3DMsg linear_velocity_vrf\n    PointLLHMsg position_llh\n    PointLLHMsg origin_llh\n    PointENUMsg global_offset\n    RelativePoseMsg relative_pose\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointENUMsg\n    # PointENUMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/QuaternionMsg\n    # QuaternionMsg\n    float64 qx\n    float64 qy\n    float64 qz\n    float64 qw\n    \n    ================================================================================\n    MSG: zhito_ap/msg/Point3DMsg\n    # Point3DMsg\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PointLLHMsg\n    # PointLLHMsg\n    float64 lon\n    float64 lat\n    float64 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RelativePoseMsg\n    # RelativePoseMsg\n    float64 relative_distance\n    float64 relative_heading\n    float64 reserved_1\n    float64 reserved_2\n    float64 reserved_3\n    float64 reserved_4\n    \n    ================================================================================\n    MSG: zhito_ap/msg/UncertaintyMsg\n    # UncertaintyMsg\n    Point3DMsg position_std_dev\n    Point3DMsg orientation_std_dev\n    Point3DMsg linear_velocity_std_dev\n    Point3DMsg linear_acceleration_std_dev\n    Point3DMsg angular_velocity_std_dev\n    \n    ================================================================================\n    MSG: zhito_ap/msg/TrajectoryPointMsg\n    # TrajectoryPointMsg\n    PathPointMsg path_point\n    float64 v\n    float64 a\n    float64 relative_time\n    float64 da\n    float64 steer\n    GaussianInfoMsg gaussian_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PathPointMsg\n    # PathPointMsg\n    float64 x\n    float64 y\n    float64 z\n    float64 theta\n    float64 kappa\n    float64 s\n    float64 dkappa\n    float64 ddkappa\n    string lane_id\n    float64 x_derivative\n    float64 y_derivative\n    float64 dl\n    float64 ddl\n    float64 change_lane_state\n    float64 later_acc\n    float64 later_jerk\n    float64 trailer_theta\n    \n    ================================================================================\n    MSG: zhito_ap/msg/GaussianInfoMsg\n    # GaussianInfoMsg\n    float64 sigma_x\n    float64 sigma_y\n    float64 correlation\n    float64 area_probability\n    float64 ellipse_a\n    float64 ellipse_b\n    float64 theta_a\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfStatusMsg\n    # MsfStatusMsg\n    uint32 local_lidar_consistency\n    uint32 gnss_consistency\n    uint32 local_lidar_status\n    uint32 local_lidar_quality\n    uint32 gnsspos_position_type\n    uint32 msf_running_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MsfSensorMsgStatusMsg\n    # MsfSensorMsgStatusMsg\n    uint32 imu_delay_status\n    uint32 imu_missing_status\n    uint32 imu_data_status\n    \n    ================================================================================\n    MSG: zhito_ap/msg/StateMessageMsg\n    # StateMessageMsg\n    int32 fusion_state\n    int32 imu_state\n    int32 gnss_state\n    int32 wheel_state\n    int32 vision_state\n    int32 lidar_state\n    \n    ================================================================================\n    MSG: zhito_ap/msg/DebugMessageMsg\n    # DebugMessageMsg\n    SensorMessageMsg sensor_message\n    ExtrinsicParaMsg extrinsic_para\n    bool skew_status\n    string adm_status\n    string reserved_1\n    string reserved_2\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SensorMessageMsg\n    # SensorMessageMsg\n    int32 imu_delay\n    int32 gnss_delay\n    int32 wheel_delay\n    int32 vision_delay\n    int32 lidar_delay\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ExtrinsicParaMsg\n    # ExtrinsicParaMsg\n    Point3DMsg vi_eluer_zxy_deg\n    Point3DMsg vg_eluer_zxy_deg\n    Point3DMsg vc_eluer_zxy_deg\n    Point3DMsg vb_eluer_zxy_deg\n    Point3DMsg vl_eluer_zxy_deg\n    QuaternionMsg wheel_ko\n    \n    ================================================================================\n    MSG: zhito_ap/msg/MapMsg\n    # MapMsg\n    HdmapHeaderMsg m_header\n    CrosswalkMsg[] crosswalk\n    JunctionMsg[] junction\n    HdmapLaneMsg[] lane\n    HdmapStopSignMsg[] stop_sign\n    SignalMsg[] signal\n    YieldSignMsg[] m_yield\n    OverlapMsg[] overlap\n    ClearAreaMsg[] clear_area\n    SpeedBumpMsg[] speed_bump\n    RoadMsg[] road\n    ParkingSpaceMsg[] parking_space\n    PNCJunctionMsg[] pnc_junction\n    SweepZoneMsg[] sweep_zone\n    FireHydrantMsg[] fire_hydrant\n    HdmapTrafficSignMsg[] sign\n    SignalGroupMsg[] signal_group\n    JunctionRoadGroupMsg[] junction_road_group\n    PoleMsg[] pole\n    LandMarkMsg[] landmark\n    ProtrusionMsg[] protrusion\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapHeaderMsg\n    # HdmapHeaderMsg\n    string version\n    string date\n    ProjectionMsg projection\n    string district\n    string generation\n    string rev_major\n    string rev_minor\n    float64 left\n    float64 top\n    float64 right\n    float64 bottom\n    string vendor\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProjectionMsg\n    # ProjectionMsg\n    string proj\n    float64 origin_latitude_deg\n    float64 origin_longitude_deg\n    float64 origin_altitude_m\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CrosswalkMsg\n    # CrosswalkMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/IdMsg\n    # IdMsg\n    string id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPolygonMsg\n    # HdmapPolygonMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionMsg\n    # JunctionMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    IdMsg[] signal_group_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapLaneMsg\n    # HdmapLaneMsg\n    IdMsg id\n    CurveMsg central_curve\n    HdmapLaneBoundaryMsg left_boundary\n    HdmapLaneBoundaryMsg right_boundary\n    float64 length\n    float64 speed_limit\n    IdMsg[] overlap_id\n    IdMsg[] predecessor_id\n    IdMsg[] successor_id\n    IdMsg[] left_neighbor_forward_lane_id\n    IdMsg[] right_neighbor_forward_lane_id\n    uint32 type\n    uint32 turn\n    IdMsg[] left_neighbor_reverse_lane_id\n    IdMsg[] right_neighbor_reverse_lane_id\n    IdMsg junction_id\n    LaneSampleAssociationMsg[] left_sample\n    LaneSampleAssociationMsg[] right_sample\n    uint32 direction\n    LaneSampleAssociationMsg[] left_road_sample\n    LaneSampleAssociationMsg[] right_road_sample\n    IdMsg[] self_reverse_lane_id\n    float64 min_speed_limit\n    bool is_illegal_lane\n    bool is_side_road\n    bool is_connecting_lane\n    bool is_passable_lane\n    IdMsg section_id\n    bool is_vehicle_on\n    LaneSlopeMsg[] slope\n    LaneCurvatureMsg[] curvature\n    uint32 connection_type\n    uint32 attribute\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveMsg\n    # CurveMsg\n    CurveSegmentMsg[] segment\n    \n    ================================================================================\n    MSG: zhito_ap/msg/CurveSegmentMsg\n    # CurveSegmentMsg\n    LineSegmentMsg line_segment\n    float64 s\n    PointENUMsg start_position\n    float64 heading\n    float64 length\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LineSegmentMsg\n    # LineSegmentMsg\n    PointENUMsg[] point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapLaneBoundaryMsg\n    # HdmapLaneBoundaryMsg\n    IdMsg id\n    CurveMsg curve\n    float64 length\n    bool is_virtual\n    LaneBoundaryTypeMsg[] boundary_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneBoundaryTypeMsg\n    # LaneBoundaryTypeMsg\n    float64 s\n    uint32[] types\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSampleAssociationMsg\n    # LaneSampleAssociationMsg\n    float64 s\n    float64 width\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSlopeMsg\n    # LaneSlopeMsg\n    float64 s\n    float64 value\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneCurvatureMsg\n    # LaneCurvatureMsg\n    float64 s\n    float64 curve_value\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapStopSignMsg\n    # HdmapStopSignMsg\n    IdMsg id\n    CurveMsg[] stop_line\n    IdMsg[] overlap_id\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SignalMsg\n    # SignalMsg\n    IdMsg id\n    HdmapPolygonMsg boundary\n    SubsignalMsg[] subsignal\n    IdMsg[] overlap_id\n    uint32 type\n    CurveMsg[] stop_line\n    SignInfoMsg[] sign_info\n    IdMsg subsignal_id\n    IdMsg signal_group_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SubsignalMsg\n    # SubsignalMsg\n    IdMsg id\n    uint32 type\n    PointENUMsg location\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SignInfoMsg\n    # SignInfoMsg\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/YieldSignMsg\n    # YieldSignMsg\n    IdMsg id\n    CurveMsg[] stop_line\n    IdMsg[] overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/OverlapMsg\n    # OverlapMsg\n    IdMsg id\n    ObjectOverlapInfoMsg[] m_object\n    RegionOverlapInfoMsg[] region_overlap\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ObjectOverlapInfoMsg\n    # ObjectOverlapInfoMsg\n    IdMsg id\n    uint32 type\n    float64 start_s\n    float64 end_s\n    bool is_merge\n    IdMsg region_overlap_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RegionOverlapInfoMsg\n    # RegionOverlapInfoMsg\n    IdMsg id\n    HdmapPolygonMsg[] polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ClearAreaMsg\n    # ClearAreaMsg\n    IdMsg id\n    IdMsg[] overlap_id\n    HdmapPolygonMsg polygon\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SpeedBumpMsg\n    # SpeedBumpMsg\n    IdMsg id\n    IdMsg[] overlap_id\n    CurveMsg[] position\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadMsg\n    # RoadMsg\n    IdMsg id\n    RoadSectionMsg[] section\n    IdMsg junction_id\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadSectionMsg\n    # RoadSectionMsg\n    IdMsg id\n    IdMsg[] lane_id\n    HdmapRoadBoundaryMsg boundary\n    IdMsg[] sign_id\n    WarningInfoMsg[] warning_info\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapRoadBoundaryMsg\n    # HdmapRoadBoundaryMsg\n    BoundaryPolygonMsg outer_polygon\n    BoundaryPolygonMsg[] hole\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryPolygonMsg\n    # BoundaryPolygonMsg\n    BoundaryEdgeMsg[] edge\n    \n    ================================================================================\n    MSG: zhito_ap/msg/BoundaryEdgeMsg\n    # BoundaryEdgeMsg\n    CurveMsg curve\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/WarningInfoMsg\n    # WarningInfoMsg\n    float64 s\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ParkingSpaceMsg\n    # ParkingSpaceMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    float64 heading\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PNCJunctionMsg\n    # PNCJunctionMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    PassageGroupMsg[] passage_group\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PassageGroupMsg\n    # PassageGroupMsg\n    IdMsg id\n    HdmapPassageMsg[] passage\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapPassageMsg\n    # HdmapPassageMsg\n    IdMsg id\n    IdMsg[] signal_id\n    IdMsg[] yield_id\n    IdMsg[] stop_sign_id\n    IdMsg[] lane_id\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SweepZoneMsg\n    # SweepZoneMsg\n    IdMsg id\n    HdmapPolygonMsg polygon\n    IdMsg[] overlap_id\n    string[] route_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/FireHydrantMsg\n    # FireHydrantMsg\n    PointENUMsg point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/HdmapTrafficSignMsg\n    # HdmapTrafficSignMsg\n    IdMsg id\n    PointENUMsg[] points\n    uint32 type\n    IdMsg section_id\n    float32 rect_width\n    float32 rect_height\n    uint32 point_num\n    PointENUMsg board_direction\n    PointENUMsg anchor_point\n    float32 board_height\n    uint32 shape\n    \n    ================================================================================\n    MSG: zhito_ap/msg/SignalGroupMsg\n    # SignalGroupMsg\n    IdMsg id\n    IdMsg junction_id\n    IdMsg[] signal_id\n    float64 north_angle\n    \n    ================================================================================\n    MSG: zhito_ap/msg/JunctionRoadGroupMsg\n    # JunctionRoadGroupMsg\n    IdMsg id\n    IdMsg begin_junction_id\n    IdMsg end_junction_id\n    IdMsg[] road_id\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PoleMsg\n    # PoleMsg\n    IdMsg id\n    PointENUMsg[] points\n    uint32 type\n    IdMsg section_id\n    float32 height\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LandMarkMsg\n    # LandMarkMsg\n    IdMsg id\n    uint32 type\n    PointENUMsg[] points\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProtrusionMsg\n    # ProtrusionMsg\n    IdMsg id\n    uint32 type\n    ProtrusionBoundaryMsg protrusion_boundary\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProtrusionBoundaryMsg\n    # ProtrusionBoundaryMsg\n    IdMsg id\n    CurveMsg curve\n    float64 length\n    ProtrusionSourceMsg[] protrusion_source\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ProtrusionSourceMsg\n    # ProtrusionSourceMsg\n    float64 s\n    uint32 type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoutingMessageMsg\n    # RoutingMessageMsg\n    RoutingRequestMsg routing_request\n    RoadSegmentMsg[] road\n    bool stop_for_destination\n    uint32 routing_type\n    uint32 clean_type\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoutingRequestMsg\n    # RoutingRequestMsg\n    HeaderMsg m_header\n    LaneWaypointMsg[] waypoint\n    LaneSegmentMsg[] blacklisted_lane\n    string[] blacklisted_road\n    bool broadcast\n    ParkingSpaceMsg parking_space\n    ParkingInfoMsg parking_info\n    string default_route_name\n    uint32 routing_type\n    string route_id\n    LaneWaypointMsg starting_point_of_operation\n    LaneWaypointMsg ending_point_of_operation\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneWaypointMsg\n    # LaneWaypointMsg\n    string id\n    float64 s\n    PointENUMsg pose\n    uint32 clean_type\n    uint32 waypoint_type\n    uint32 change_buffer\n    uint32 speed_type\n    PointLLHMsg pose_llh\n    \n    ================================================================================\n    MSG: zhito_ap/msg/LaneSegmentMsg\n    # LaneSegmentMsg\n    string id\n    float64 start_s\n    float64 end_s\n    \n    ================================================================================\n    MSG: zhito_ap/msg/ParkingInfoMsg\n    # ParkingInfoMsg\n    string parking_space_id\n    PointENUMsg parking_point\n    \n    ================================================================================\n    MSG: zhito_ap/msg/RoadSegmentMsg\n    # RoadSegmentMsg\n    string id\n    PassageMsg[] passage\n    \n    ================================================================================\n    MSG: zhito_ap/msg/PassageMsg\n    # PassageMsg\n    LaneSegmentMsg[] segment\n    bool can_exit\n    uint32 change_lane_type\n    \n    ","zhito2ros_msg/ZhitoChart":"\n    string title\n    ZhitoLine[] line\n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoLine\n    string label\n    ZhitoPoint2D[] points\n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoPoint2D\n    float64 x\n    float64 y\n    ","zhito2ros_msg/ZhitoChassis":"\n    # enum DrivingMode \n    #     {\n    #         COMPLETE_MANUAL = 0;  # human drive\n    #         COMPLETE_AUTO_DRIVE = 1;\n    #         AUTO_STEER_ONLY = 2;  # only steer\n    #         AUTO_SPEED_ONLY = 3;  # include throttle and brake\n    \n    #         # security mode when manual intervention happens, only response status\n    #         EMERGENCY_MODE = 4;\n    #     }\n        uint8 DrivingMode_COMPLETE_MANUAL = 0\n        uint8 DrivingMode_COMPLETE_AUTO_DRIVE = 1\n        uint8 DrivingMode_AUTO_STEER_ONLY = 2\n        uint8 DrivingMode_AUTO_SPEED_ONLY = 3\n        uint8 DrivingMode_EMERGENCY_MODE = 4\n    \n    \n    #    enum ErrorCode \n    #    {\n    #        NO_ERROR = 0;\n    \n    #       CMD_NOT_IN_PERIOD = 1;  # control cmd not in period\n    \n            # car chassis report error, like steer, brake, throttle, gear fault\n    #        CHASSIS_ERROR = 2;\n    \n            # classify the types of the car chassis errors\n    #        CHASSIS_ERROR_ON_STEER = 6;\n    #        CHASSIS_ERROR_ON_BRAKE = 7;\n    #        CHASSIS_ERROR_ON_THROTTLE = 8;\n    #        CHASSIS_ERROR_ON_GEAR = 9;\n    \n    #        MANUAL_INTERVENTION = 3;  # human manual intervention\n    \n            # receive car chassis can frame not in period\n    #        CHASSIS_CAN_NOT_IN_PERIOD = 4;\n    \n    #        UNKNOWN_ERROR = 5;\n    #    }\n        uint8 ErrorCode_NO_ERROR = 0\n        uint8 ErrorCode_CMD_NOT_IN_PERIOD= 1\n        uint8 ErrorCode_CHASSIS_ERROR = 2\n        uint8 ErrorCode_CHASSIS_ERROR_ON_STEER = 6\n        uint8 ErrorCode_CHASSIS_ERROR_ON_BRAKE = 7\n        uint8 ErrorCode_CHASSIS_ERROR_ON_THROTTLE = 8\n        uint8 ErrorCode_CHASSIS_ERROR_ON_GEAR = 9\n        uint8 ErrorCode_MANUAL_INTERVENTION = 3\n        uint8 ErrorCode_CHASSIS_CAN_NOT_IN_PERIOD = 4\n        uint8 ErrorCode_UNKNOWN_ERROR = 5\n    #    enum GearPosition \n    #    {\n    #        GEAR_NEUTRAL = 0;\n    #        GEAR_DRIVE = 1;\n    #        GEAR_REVERSE = 2;\n    #        GEAR_PARKING = 3;\n    #        GEAR_LOW = 4;\n    #        GEAR_INVALID = 5;\n    #        GEAR_NONE = 6;\n    #    }\n    \n        uint8 GearPosition_GEAR_NEUTRAL = 0\n        uint8 GearPosition_GEAR_DRIVE = 1\n        uint8 GearPosition_GEAR_REVERSE = 2\n        uint8 GearPosition_GEAR_PARKING = 3\n        uint8 GearPosition_GEAR_LOW = 4\n        uint8 GearPosition_GEAR_INVALID = 5\n        uint8 GearPosition_GEAR_NONE = 6\n        bool engine_started\n    \n        # Engine speed in RPM.\n        float32 engine_rpm\n    \n        # Vehicle Speed in meters per second.\n        float32 speed_mps\n    \n        # Vehicle odometer in meters.\n        float32 odometer_m\n    \n        # Fuel range in meters.\n        int32 fuel_range_m\n    \n        # Real throttle location in [%], ranging from 0 to 100.\n        float32 throttle_percentage\n    \n        # Real brake location in [%], ranging from 0 to 100.\n        float32 brake_percentage\n    \n        # Real steering location in [%], ranging from -100 to 100.\n        # steering_angle / max_steering_angle\n        # Clockwise: negative\n        # CountClockwise: positive\n        float32 steering_percentage\n    \n        # Applied steering torque in [Nm].\n        float32 steering_torque_nm \n        #steering angle velocity [rad/s]\n        float32 steering_angle_velocity\n        # actual torque (j6f)\n        float32 actual_torque\n    \n        # Parking brake status.\n        bool parking_brake\n    \n        # Light signals\n        bool high_beam_signal \n        bool low_beam_signal \n        bool left_turn_signal \n        bool right_turn_signal \n        bool horn \n    \n        bool wiper \n        bool disengage_status \n        int32 driving_mode\n        int32 error_code\n        int32 gear_location\n    \n        # timestamp for steering module\n        float64 steering_timestamp  # In seconds, with 1e-6 accuracy\n    \n        # chassis also needs it own sending timestamp\n        std_msgs/Header header \n    \n        int32 chassis_error_mask\n    \n        #TODO\n        #zhito.common.VehicleSignal signal = 29;\n    \n        # Only available for Lincoln now\n        #TODO\n        # ChassisGPS chassis_gps = 30;\n    \n        #TODO\n        # zhito.common.EngageAdvice engage_advice = 31;\n    \n        #TODO\n        #WheelSpeed wheel_speed = 32;\n    \n        #Surround surround = 33;\n    \n        # Vehicle registration information\n        #TODO\n        #License license = 34 [deprecated = true];\n    \n        # Real gear location.\n        # int32 gear_location = 10 [deprecated = true]; deprecated use enum\n        # replace this [id 23]\n    \n        #TODO\n        #Remote_Signal remote_signal = 36;\n    \n        #TODO\n        # VehicleCanMsgStatus canbus_status = 37;\n    \n        # TODO \n        #J6f j6f = 38;\n        #J6f_PLUS j6f_plus = 39;\n        #J7 j7 = 40;\n        #RoadSweeper road_sweeper\n    \n        float64 yaw_rate\n        float64 gear_ratio\n        int32 abs_status \n        float64 longitude_acc\n        float64 lateral_acc\n    \n        int32 engine_started_status\n        int32 parking_brake_status\n        int32 high_beam_signal_status\n        int32 low_beam_signal_status\n        int32 left_turn_signal_status\n        int32 right_turn_signal_status\n        int32 horn_status\n        int32 wiper_status\n        int32 engine_rpm_status\n        int32 speed_mps_status\n        int32 wheel_spd_fl_status\n        int32 wheel_spd_fr_status\n        int32 wheel_spd_rl_status\n        int32 wheel_spd_rr_status\n        int32 odometer_m_status\n        int32 throttle_percentage_status\n        int32 brake_percentage_status\n        int32 steering_angle_status\n        int32 steering_percentage_status\n        int32 steering_torque_nm_status\n        int32 steering_angle_velocity_status\n        int32 actual_torque_status\n        int32 yaw_rate_status\n        int32 gear_ratio_status\n        int32 longitude_acc_status\n        int32 lateral_acc_status\n        int32 fuel_range_m_status\n        int32 driving_mode_status\n        int32 gear_location_status\n        int32 trailer_connected\n        int32 trailer_connected_status\n    \n        float64 eng_fuel_rate\n        float64 eng_instant_fuel_economy\n        float64 eng_average_fuel_economy\n    \n    ================================================================================\n    MSG: std_msgs/Header\n    # Standard metadata for higher-level stamped data types.\n    # This is generally used to communicate timestamped data \n    # in a particular coordinate frame.\n    # \n    # sequence ID: consecutively increasing ID \n    uint32 seq\n    #Two-integer timestamp that is expressed as:\n    # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n    # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n    # time-handling sugar is provided by the client library\n    time stamp\n    #Frame this data is associated with\n    string frame_id\n    \n    ","zhito2ros_msg/ZhitoCompressedImage":"\n    #\n    # it's the same with sensor_msgs/CompressedImage,\n    # but file name is different\n    #\n    Header header        # Header timestamp should be acquisition time of image\n                         # Header frame_id should be optical frame of camera\n                         # origin of frame should be optical center of camera\n                         # +x should point to the right in the image\n                         # +y should point down in the image\n                         # +z should point into to plane of the image\n    ZhitoCompressedImageData img_data\n    \n    ================================================================================\n    MSG: std_msgs/Header\n    # Standard metadata for higher-level stamped data types.\n    # This is generally used to communicate timestamped data \n    # in a particular coordinate frame.\n    # \n    # sequence ID: consecutively increasing ID \n    uint32 seq\n    #Two-integer timestamp that is expressed as:\n    # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n    # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n    # time-handling sugar is provided by the client library\n    time stamp\n    #Frame this data is associated with\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoCompressedImageData\n    string format        # Specifies the format of the data\n                         #   Acceptable values:\n                         #     jpeg, png\n    uint8[] data         # Compressed image buffer\n    \n    ","zhito2ros_msg/ZhitoCompressedImageData":"\n    string format        # Specifies the format of the data\n                         #   Acceptable values:\n                         #     jpeg, png\n    uint8[] data         # Compressed image buffer\n    \n    ","zhito2ros_msg/ZhitoControlReferenceInfo":"\n    \n      #0:no replan\n      #1:replan\n      #2:none\n      #3:error\n      uint32 is_replan\n    \n      \n      #0:N\n      #1:D\n      #2:R\n      #3:P\n      #4~6:none\n      #7:error\n      uint32 gear\n    \n    \n      #0:none\n      #1:left turn\n      #2:right turn\n      #3:error\n      uint32 turn_signal\n    \n      #0:turn off low beam light\n      #1:turn on low beam light\n      #2:none\n      #3:error\n      uint32 low_beam_light\n    \n      #0:turn off high beam light\n      #1:turn on high beam light\n      #2:none\n      #3:error\n      uint32 high_beam_light\n    \n      #0:turn off fog light\n      #1:turn on fog light\n      #2:none\n      #3:error\n      uint32 fog_light\n    \n      #0:turn off emergency light\n      #1:turn on emergency light\n      #2:none\n      #3:error\n      uint32 emergency_light\n    \n    \n      #0:no emergency stop\n      #1:request emergency stop\n      #2:none\n      #3:error\n      uint32 is_estop\n    \n      #longitudinal direction distance error [-3 3],unit m\n      float32 longitudinal_error\n    \n      #longitudinal direction reference speed [0 30],unit m/s\n      float32 speed_reference\n    \n      #longitudinal direction reference acceleration [-10 10],unit m/s^2\n      float32 acceleration_reference\n    \n      #lateral direction error [-1 1],unit m\n      float32 lateral_error\n    \n      #heading angle error[-1 1],unit rad\n      float32 heading_error\n    \n      #reference curvature[-0.3,0.3],unit 1/m\n      float32 kappa_reference\n    \n      #gps timestamped\n      float64 gps_time\n    \n      #0:no decision\n      #1:forward\n      #2:left change\n      #3:right change\n      #4:error\n      uint32 cruise_change_lane\n    \n      #0:no decision\n      #1:forward\n      #2:left change\n      #3:right change\n      #4:error\n      uint32 stop_change_lane\n    \n      #0:default\n      #1:crm module is not ready\n      #2:trajectory anlysis is not ready\n      #3:ready\n      uint32 crm_info_status\n    ","zhito2ros_msg/ZhitoImage":"\n    Header header\n    \n    ZhitoImageData imgdata\n    ================================================================================\n    MSG: std_msgs/Header\n    # Standard metadata for higher-level stamped data types.\n    # This is generally used to communicate timestamped data \n    # in a particular coordinate frame.\n    # \n    # sequence ID: consecutively increasing ID \n    uint32 seq\n    #Two-integer timestamp that is expressed as:\n    # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n    # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n    # time-handling sugar is provided by the client library\n    time stamp\n    #Frame this data is associated with\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoImageData\n    uint32 height\n    uint32 width\n    uint32 step\n    \n    string format\n    \n    uint8[] data\n    ","zhito2ros_msg/ZhitoImageData":"\n    uint32 height\n    uint32 width\n    uint32 step\n    \n    string format\n    \n    uint8[] data\n    ","zhito2ros_msg/ZhitoImageMarkerArray":"\n    visualization_msgs/ImageMarker[] markers\n    ================================================================================\n    MSG: visualization_msgs/ImageMarker\n    uint8 CIRCLE=0\n    uint8 LINE_STRIP=1\n    uint8 LINE_LIST=2\n    uint8 POLYGON=3\n    uint8 POINTS=4\n    \n    uint8 ADD=0\n    uint8 REMOVE=1\n    \n    Header header\n    string ns\t\t# namespace, used with id to form a unique id\n    int32 id          \t# unique id within the namespace\n    int32 type        \t# CIRCLE/LINE_STRIP/etc.\n    int32 action      \t# ADD/REMOVE\n    geometry_msgs/Point position # 2D, in pixel-coords\n    float32 scale\t \t# the diameter for a circle, etc.\n    std_msgs/ColorRGBA outline_color\n    uint8 filled\t\t# whether to fill in the shape with color\n    std_msgs/ColorRGBA fill_color # color [0.0-1.0]\n    duration lifetime       # How long the object should last before being automatically deleted.  0 means forever\n    \n    \n    geometry_msgs/Point[] points # used for LINE_STRIP/LINE_LIST/POINTS/etc., 2D in pixel coords\n    std_msgs/ColorRGBA[] outline_colors # a color for each line, point, etc.\n    ================================================================================\n    MSG: std_msgs/Header\n    # Standard metadata for higher-level stamped data types.\n    # This is generally used to communicate timestamped data \n    # in a particular coordinate frame.\n    # \n    # sequence ID: consecutively increasing ID \n    uint32 seq\n    #Two-integer timestamp that is expressed as:\n    # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n    # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n    # time-handling sugar is provided by the client library\n    time stamp\n    #Frame this data is associated with\n    string frame_id\n    \n    ================================================================================\n    MSG: geometry_msgs/Point\n    # This contains the position of a point in free space\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: std_msgs/ColorRGBA\n    float32 r\n    float32 g\n    float32 b\n    float32 a\n    \n    ","zhito2ros_msg/ZhitoInnerCameraOutput":"\n    # message InnerCameraOutputMessage {\n    #   optional string sensor_id  = 1; // 传感器id\n    #   optional uint64 time_stamp = 2; // 接收到传感器数据的时间戳Unix时间\n    #   optional string extra_info = 3; // 额外信息\n    #   optional uint32 object_num = 4; // 目标数量\n    #   repeated InnerObjectInfo inner_objects = 5;\n    # }\n    std_msgs/Header header \n    string sensor_id  # 传感器id\n    uint64 time_stamp #接收到传感器数据的时间戳Unix时间\n    string extra_info# 额外信息\n    uint32 object_num #目标数量\n    ZhitoInnerObjectInfo[] inner_objects #\n    ================================================================================\n    MSG: std_msgs/Header\n    # Standard metadata for higher-level stamped data types.\n    # This is generally used to communicate timestamped data \n    # in a particular coordinate frame.\n    # \n    # sequence ID: consecutively increasing ID \n    uint32 seq\n    #Two-integer timestamp that is expressed as:\n    # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n    # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n    # time-handling sugar is provided by the client library\n    time stamp\n    #Frame this data is associated with\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoInnerObjectInfo\n    # enums\n    \n    uint8 ObjectType_UNKNOWN = 0\n    uint8 ObjectType_UNKNOWN_MOVABLE = 1\n    uint8 ObjectType_UNKNOWN_UNMOVABLE = 2\n    uint8 ObjectType_PEDESTRIAN = 3\n    uint8 ObjectType_RIDER = 4\n    uint8 ObjectType_VEHICLE = 5\n    uint8 ObjectType_MAX_OBJECT_TYPE = 6\n    \n    \n    uint8 ObjectSubType_UNKNOWN = 0\n    uint8 ObjectSubType_UNKNOWN_MOVABLE = 1\n    uint8 ObjectSubType_UNKNOWN_UNMOVABLE = 2\n    uint8 ObjectSubType_CAR = 3\n    uint8 ObjectSubType_VAN = 4\n    uint8 ObjectSubType_TRUCK = 5\n    uint8 ObjectSubType_BUS = 6\n    uint8 ObjectSubType_CYCLIST = 7\n    uint8 ObjectSubType_MOTORCYCLIST = 8\n    uint8 ObjectSubType_TRICYCLIST = 9\n    uint8 ObjectSubType_PEDESTRIAN = 10\n    uint8 ObjectSubType_TRAFFICCONE = 11\n    uint8 ObjectSubType_MAX_OBJECT_SUBTYPE = 12\n    \n    \n    \n    \n    \n    #   optional  = 1;                    // 目标id\n    uint32 id\n    #   optional  = 2;              // 目标类型\n    uint8 type\n    #   optional  = 3;              // 该目标类型置信度\n    float32 type_prob\n    #   optional  = 4;       // 目标子类型\n    uint8 sub_type\n    #   optional  = 5;          // 每个子类型置信度\n    float32 sub_type_prob\n    #   optional  = 6;              // 跟踪列表中的目标id\n    uint32 track_id\n    #   optional  = 7;                  // 跟踪列表中的目标丢失帧数\n    uint32 miss\n    #   optional = 8;                  // 跟踪列表中的目标被连续跟踪的帧数\n    uint32 life \n    #   repeated  = 9;               // 目标在车体坐标系下的位置\n    float64[] rel_pos\n    float32 rel_pos_norm\n    #   repeated  = 10;          // 自车坐标系下的相对速度\n    float32[] rel_velocity\n    float32 rel_velocity_norm\n    #   repeated  = 11;      // 自车坐标系下的加速度\n    float32[] rel_acceleration\n    float32 rel_acceleration_norm\n    #   optional = 12;                 // 目标在车体坐标系下的方位角\n    float32 theta \n    #   repeated = 13;                  // 目标长宽高\n    float32[] size\n    #TODO repeated  = 14; // BEV视角下目标角点在车体坐标系下的位置\n    #BEVCornerPos bev_corner_pos\n    \n    float64 scale\n    #   optional  = 16;         // 该目标在图像的上的目标框\n    ZhitoRectInfo rect_pixel\n    #   optional  = 17;           // 额外信息\n    string extra_info\n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoRectInfo\n    #   message BoxSize {\n    #   optional double xmin = 1;\n    #   optional double ymin = 2;\n    #   optional double xmax = 3;\n    #   optional double ymax = 4;\n    # }\n    #   optional BoxSize rect_body = 1;         // 目标整体2D框，包括遮挡部分\n    #   optional BoxSize rect_vis  = 2;         // 目标可见部分框\n    #   optional SubRectType sub_rect_type = 3; // 标识车头或者车尾哪一个可用\n    #   optional BoxSize rect_tail = 4;         // 目标车尾框\n    #   optional BoxSize rect_head = 5;         // 目标车头框\n    \n      # BoxSize { xmin ymin xmax ymax } to   [xmin, ymin, xmax, ymax ]\n    uint8 SubRectType_RECT_UNKNOWN = 0\n    uint8 SubRectType_RECT_TAIL = 1\n    uint8 SubRectType_RECT_HEAED= 2\n    \n    float64[] rect_body\n    float64[] rect_vis\n    float64[] rect_tail\n    float64[] rect_head\n    uint8 sub_rect_type\n    ","zhito2ros_msg/ZhitoInnerObjInfo":"\n    # message InnerObjectInfo {\n    #   optional uint32 id = 1;                    // 目标id\n    #   optional ObjectType type = 2;              // 目标类型\n    #   optional float type_prob = 3;              // 该目标类型置信度\n    #   optional ObjectSubType sub_type = 4;       // 目标子类型\n    #   optional float sub_type_prob = 5;          // 每个子类型置信度\n    #   optional uint32 track_id = 6;              // 跟踪列表中的目标id\n    #   optional uint32 miss = 7;                  // 跟踪列表中的目标丢失帧数\n    #   optional uint32 life = 8;                  // 跟踪列表中的目标被连续跟踪的帧数\n    #   repeated double rel_pos = 9;               // 目标在车体坐标系下的位置\n    #   repeated float rel_velocity = 10;          // 自车坐标系下的相对速度\n    #   repeated float rel_acceleration = 11;      // 自车坐标系下的加速度\n    #   optional float theta = 12;                 // 目标在车体坐标系下的方位角\n    #   repeated float size = 13;                  // 目标长宽高\n    #   repeated BEVCornerPos bev_corner_pos = 14; // BEV视角下目标角点在车体坐标系下的位置\n    #   optional double scale = 15;   \n    #   optional RectInfo rect_pixel = 16;         // 该目标在图像的上的目标框\n    #   optional string extra_info = 17;           // 额外信息\n    # }\n    \n    # enum ObjectType {\n    #   OBJTYPE_UNKNOWN = 0;\n    #   OBJTYPE_UNKNOWN_MOVABLE = 1;\n    #   OBJTYPE_UNKNOWN_UNMOVABLE = 2;\n    #   OBJTYPE_PEDESTRIAN = 3;\n    #   OBJTYPE_RIDER = 4;\n    #   OBJTYPE_VEHICLE = 5;\n    #   MAX_OBJECT_TYPE = 6;\n    # }\n    \n    uint8  OBJTYPE_UNKNOWN = 0\n    uint8  OBJTYPE_UNKNOWN_MOVABLE = 1\n    uint8  OBJTYPE_UNKNOWN_UNMOVABLE = 2\n    uint8  OBJTYPE_PEDESTRIAN = 3\n    uint8  OBJTYPE_RIDER = 4\n    uint8  OBJTYPE_VEHICLE = 5\n    uint8  MAX_OBJECT_TYPE = 6\n    \n    uint8  OBJSUBTYPE_UNKNOWN = 0\n    uint8  OBJSUBTYPE_UNKNOWN_MOVABLE = 1\n    uint8  OBJSUBTYPE_UNKNOWN_UNMOVABLE = 2\n    uint8  OBJSUBTYPE_CAR = 3\n    uint8  OBJSUBTYPE_VAN = 4\n    uint8  OBJSUBTYPE_TRUCK = 5\n    uint8  OBJSUBTYPE_BUS = 6\n    uint8  OBJSUBTYPE_CYCLIST = 7\n    uint8  OBJSUBTYPE_MOTORCYCLIST = 8\n    uint8  OBJSUBTYPE_TRICYCLIST = 9\n    uint8  OBJSUBTYPE_PEDESTRIAN = 10\n    uint8  OBJSUBTYPE_TRAFFICCONE = 11\n    uint8  MAX_OBJECT_SUBTYPE = 12\n    \n    uint32 id                      # // 目标id\n    uint8 obj_type                 # // 目标类型\n    float32 type_prob              # // 该目标类型置信度\n    uint8 obj_sub_type             # // 目标子类型\n    float32 sub_type_prob          # // 每个子类型置信度\n    uint32 track_id                # // 跟踪列表中的目标id\n    float64 rel_pos                # // 目标在车体坐标系下的位置\n    float32 rel_velocity           # // 自车坐标系下的相对速度\n    float32 rel_acceleration       # // 自车坐标系下的加速度\n    float32 theta                  # // 目标在车体坐标系下的方位角\n    float32 size                   # // 目标长宽高\n    float64 scale                  \n    \n    \n    ","zhito2ros_msg/ZhitoInnerObjectInfo":"\n    # enums\n    \n    uint8 ObjectType_UNKNOWN = 0\n    uint8 ObjectType_UNKNOWN_MOVABLE = 1\n    uint8 ObjectType_UNKNOWN_UNMOVABLE = 2\n    uint8 ObjectType_PEDESTRIAN = 3\n    uint8 ObjectType_RIDER = 4\n    uint8 ObjectType_VEHICLE = 5\n    uint8 ObjectType_MAX_OBJECT_TYPE = 6\n    \n    \n    uint8 ObjectSubType_UNKNOWN = 0\n    uint8 ObjectSubType_UNKNOWN_MOVABLE = 1\n    uint8 ObjectSubType_UNKNOWN_UNMOVABLE = 2\n    uint8 ObjectSubType_CAR = 3\n    uint8 ObjectSubType_VAN = 4\n    uint8 ObjectSubType_TRUCK = 5\n    uint8 ObjectSubType_BUS = 6\n    uint8 ObjectSubType_CYCLIST = 7\n    uint8 ObjectSubType_MOTORCYCLIST = 8\n    uint8 ObjectSubType_TRICYCLIST = 9\n    uint8 ObjectSubType_PEDESTRIAN = 10\n    uint8 ObjectSubType_TRAFFICCONE = 11\n    uint8 ObjectSubType_MAX_OBJECT_SUBTYPE = 12\n    \n    \n    \n    \n    \n    #   optional  = 1;                    // 目标id\n    uint32 id\n    #   optional  = 2;              // 目标类型\n    uint8 type\n    #   optional  = 3;              // 该目标类型置信度\n    float32 type_prob\n    #   optional  = 4;       // 目标子类型\n    uint8 sub_type\n    #   optional  = 5;          // 每个子类型置信度\n    float32 sub_type_prob\n    #   optional  = 6;              // 跟踪列表中的目标id\n    uint32 track_id\n    #   optional  = 7;                  // 跟踪列表中的目标丢失帧数\n    uint32 miss\n    #   optional = 8;                  // 跟踪列表中的目标被连续跟踪的帧数\n    uint32 life \n    #   repeated  = 9;               // 目标在车体坐标系下的位置\n    float64[] rel_pos\n    float32 rel_pos_norm\n    #   repeated  = 10;          // 自车坐标系下的相对速度\n    float32[] rel_velocity\n    float32 rel_velocity_norm\n    #   repeated  = 11;      // 自车坐标系下的加速度\n    float32[] rel_acceleration\n    float32 rel_acceleration_norm\n    #   optional = 12;                 // 目标在车体坐标系下的方位角\n    float32 theta \n    #   repeated = 13;                  // 目标长宽高\n    float32[] size\n    #TODO repeated  = 14; // BEV视角下目标角点在车体坐标系下的位置\n    #BEVCornerPos bev_corner_pos\n    \n    float64 scale\n    #   optional  = 16;         // 该目标在图像的上的目标框\n    ZhitoRectInfo rect_pixel\n    #   optional  = 17;           // 额外信息\n    string extra_info\n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoRectInfo\n    #   message BoxSize {\n    #   optional double xmin = 1;\n    #   optional double ymin = 2;\n    #   optional double xmax = 3;\n    #   optional double ymax = 4;\n    # }\n    #   optional BoxSize rect_body = 1;         // 目标整体2D框，包括遮挡部分\n    #   optional BoxSize rect_vis  = 2;         // 目标可见部分框\n    #   optional SubRectType sub_rect_type = 3; // 标识车头或者车尾哪一个可用\n    #   optional BoxSize rect_tail = 4;         // 目标车尾框\n    #   optional BoxSize rect_head = 5;         // 目标车头框\n    \n      # BoxSize { xmin ymin xmax ymax } to   [xmin, ymin, xmax, ymax ]\n    uint8 SubRectType_RECT_UNKNOWN = 0\n    uint8 SubRectType_RECT_TAIL = 1\n    uint8 SubRectType_RECT_HEAED= 2\n    \n    float64[] rect_body\n    float64[] rect_vis\n    float64[] rect_tail\n    float64[] rect_head\n    uint8 sub_rect_type\n    ","zhito2ros_msg/ZhitoJson":"\n    string type\n    string data\n    ","zhito2ros_msg/ZhitoLine":"\n    string label\n    ZhitoPoint2D[] points\n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoPoint2D\n    float64 x\n    float64 y\n    ","zhito2ros_msg/ZhitoLineMarker":"\n    \n    uint8 LINE_STRIP=0\n    uint8 LINE_LIST=1\n    uint8 ADD=0\n    uint8 MODIFY=0\n    uint8 DELETE=2\n    uint8 DELETEALL=3\n    uint8 DASH=0\n    uint8 SOILD=1\n    uint8 THICK=2\n    std_msgs/Header header\n    string ns\n    int32 id\n    int32 type\n    int32 action\n    int32 material\n    geometry_msgs/Pose pose\n    geometry_msgs/Vector3 scale\n    std_msgs/ColorRGBA color\n    duration lifetime\n    bool frame_locked\n    geometry_msgs/Point[] points\n    std_msgs/ColorRGBA[] colors\n    ================================================================================\n    MSG: std_msgs/Header\n    # Standard metadata for higher-level stamped data types.\n    # This is generally used to communicate timestamped data \n    # in a particular coordinate frame.\n    # \n    # sequence ID: consecutively increasing ID \n    uint32 seq\n    #Two-integer timestamp that is expressed as:\n    # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n    # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n    # time-handling sugar is provided by the client library\n    time stamp\n    #Frame this data is associated with\n    string frame_id\n    \n    ================================================================================\n    MSG: geometry_msgs/Pose\n    # A representation of pose in free space, composed of position and orientation. \n    Point position\n    Quaternion orientation\n    \n    ================================================================================\n    MSG: geometry_msgs/Point\n    # This contains the position of a point in free space\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: geometry_msgs/Quaternion\n    # This represents an orientation in free space in quaternion form.\n    \n    float64 x\n    float64 y\n    float64 z\n    float64 w\n    \n    ================================================================================\n    MSG: geometry_msgs/Vector3\n    # This represents a vector in free space. \n    # It is only meant to represent a direction. Therefore, it does not\n    # make sense to apply a translation to it (e.g., when applying a \n    # generic rigid transformation to a Vector3, tf2 will only apply the\n    # rotation). If you want your data to be translatable too, use the\n    # geometry_msgs/Point message instead.\n    \n    float64 x\n    float64 y\n    float64 z\n    ================================================================================\n    MSG: std_msgs/ColorRGBA\n    float32 r\n    float32 g\n    float32 b\n    float32 a\n    \n    ","zhito2ros_msg/ZhitoMcu2Soc":"\n    \n    uint8 WorkStatus_FAIL = 0\n    uint8 WorkStatus_OK = 1\n    uint8 WorkStatus_ERROR = 2\n    \n    \n    uint8 camera_status\n    uint8 radarF_status \n    uint8 radarFL_status \n    uint8 radarFR_status \n    uint8 radarRL_status \n    uint8 radarRR_status \n    uint8 fusionMcu_status \n    uint8 chassis_status \n    uint8 mcu_status\n    uint32 main_ad_mission \n    uint32 current_ad_mission \n    uint32 ad_target_speed\n    uint32 set_ti_gap \n    uint32 driver_confirm_lane_change \n    uint32 drive_mode\n    uint32 sp_mode \n    uint32 iacc_mode \n    ","zhito2ros_msg/ZhitoPlanning":"\n    ZhitoTrajectoryPoint trajectory_point\n    \n    ZhitoTrajectoryPathPoint  trajectory_path_point\n    \n    ZhitoSpeedPlan[] speed_plan\n    \n    # ZhitoPlanningStGraph[] st_graph\n    \n    ZhitoPlanningDataPath[] planning_data_path\n    \n    ZhitoChart[] stCharts\n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoTrajectoryPoint\n    # 1 Planned SpeedHeuristic\n    # 1.1 VehicleSpeed 以散点显示\n    float64[] relative_timestamp_sec # [], timestamp_sec, trajectory_point.relative_time + header.timestamp_sec offset\n    float64[] v  # [], trajectory_point.v \n    \n    # 2 Planning Acceleration 以线显示\n    float64[] a # [], trajectory_point.a, in m/s^2\n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoTrajectoryPathPoint\n    # 3 Planning Theta 以线显示\n    float64[] trajectory_point_timestamp_sec # [], trajectory_point.relative_time + header.timestamp_sec, in second\n    float64[] theta # [], trajectory_point.path_point.theta, \n    \n    # 4 Planning Kappa 以线显示\n    # float64 trajectory_point_timestamp_sec # [], trajectory_point.relative_time + header.timestamp_sec, in second\n    float64[] kappa # [], trajectory_point.path_point.kappa,\n    \n    # 7 Planning Kappa Derivative 以线显示\n    # float64 trajectory_point_timestamp_sec # [], trajectory_point.relative_time + heade.timestamp_sec\n    float64[] dkappa # [], trajectory_point.path_point.dkappa \n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoSpeedPlan\n    string name\n    float64[] speed_point_t # [] planning_data.speed_plan.speed_point(i).t(), in second\n    float64[] speed_point_v # [] planning_data.speed_plan.speed_point(i).v(), in m/s\n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoPlanningDataPath\n    string name\n    \n    # 8 reference line theta \n    # 8.1 referenceLine theta 以线显示\n    # float64[] planning_data_path_path_point_s # [], planning_data.path.path_point.s \n    # float64[] planning_data_path_path_point_theta # [], planning_data.path.path_point.theta\n    \n    float64[] s # [], planning_data.path.path_point.s \n    float64[] theta # [], planning_data.path.path_point.theta\n    \n    # 9 reference line kappa\n    # 9.1 reference Line kappa 以线显示\n    # float64[] planning_data_path_path_point_s # [], planning_data.path.path_point.s \n    # float64[] planning_data_path_path_point_kappa # [], planning_data.path.path_point.kappa\n    float64[] kappa # [], planning_data.path.path_point.kappa\n    \n    # 10 reference line kappa Derivative\n    # 10.1 referenceLine dkappa 以线显示\n    # float64[] planning_data_path_path_point_s # [], planning_data.path.path_point.s\n    # float64[] planning_data_path_path_point_dkappa # [], planning_data.path.path_point.dkappa\n    float64[] dkappa # [], planning_data.path.path_point.dkappa\n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoChart\n    string title\n    ZhitoLine[] line\n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoLine\n    string label\n    ZhitoPoint2D[] points\n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoPoint2D\n    float64 x\n    float64 y\n    ","zhito2ros_msg/ZhitoPlanningDataKernelCruiseRef":"\n    # 5.2 kernelCruise 以散点显示\n    # float64 planning_data_st_graph_kernel_cruise_ref_t # [], planning_data.st_graph.kernel_cruise_ref.t \n    # float64 planning_data_st_graph_kernel_cruise_ref_cruise_line_s # [], planning_data.st_graph.kernel_cruise_ref.cruise_line_s \n    \n    float64[] kernel_cruise_ref_t # [], planning_data.st_graph.kernel_cruise_ref.t \n    float64[] cruise_line_s # [], planning_data.st_graph.kernel_cruise_ref.cruise_line_s \n    \n    ","zhito2ros_msg/ZhitoPlanningDataKernelFollowRef":"\n    # 5.3 kernelFollow 以散点显示\n    # float64 planning_data_st_graph_kernel_follow_ref_t # [], planning_data.st_graph.kernel_follow_ref.t \n    # float64 planning_data_st_graph_kernel_follow_ref_follow_line_s # [], st_graph.kernel_follow_ref.follow_line_s\n    \n    float64[] kernel_follow_ref_t # [], planning_data.st_graph.kernel_follow_ref.t \n    float64[] follow_line_s # [], st_graph.kernel_follow_ref.follow_line_s\n    \n    ","zhito2ros_msg/ZhitoPlanningDataPath":"\n    string name\n    \n    # 8 reference line theta \n    # 8.1 referenceLine theta 以线显示\n    # float64[] planning_data_path_path_point_s # [], planning_data.path.path_point.s \n    # float64[] planning_data_path_path_point_theta # [], planning_data.path.path_point.theta\n    \n    float64[] s # [], planning_data.path.path_point.s \n    float64[] theta # [], planning_data.path.path_point.theta\n    \n    # 9 reference line kappa\n    # 9.1 reference Line kappa 以线显示\n    # float64[] planning_data_path_path_point_s # [], planning_data.path.path_point.s \n    # float64[] planning_data_path_path_point_kappa # [], planning_data.path.path_point.kappa\n    float64[] kappa # [], planning_data.path.path_point.kappa\n    \n    # 10 reference line kappa Derivative\n    # 10.1 referenceLine dkappa 以线显示\n    # float64[] planning_data_path_path_point_s # [], planning_data.path.path_point.s\n    # float64[] planning_data_path_path_point_dkappa # [], planning_data.path.path_point.dkappa\n    float64[] dkappa # [], planning_data.path.path_point.dkappa\n    \n    ","zhito2ros_msg/ZhitoPlanningDataSpeedLimit":"\n    # 6.4 limit 以线显示\n    # float64 planning_data_st_graph_speed_limit_s # [], planning_data.st_graph.speed_limit.s \n    # float64 planning_data_st_graph_speed_limit_v # [], planning_data.st_graph.speed_limit.v \n    \n    float64[] speed_limit_s # [], planning_data.st_graph.speed_limit.s \n    float64[] speed_limit_v # [], planning_data.st_graph.speed_limit.v \n    \n    ","zhito2ros_msg/ZhitoPlanningDataSpeedProfile":"\n    # 5 SpeedHeuristic 和 Planning ST Graph\n    # 5.1 curveLine 以散点显示\n    # float64 planning_data_st_graph_speed_profile_t # [], planning_data.st_graph.speed_profile.t\n    # float64 planning_data_st_graph_speed_profile_s # [], planning_data.st_graph.speed_profile.s\n    \n    float64[] speed_profile_t # [], planning_data.st_graph.speed_profile.t\n    float64[] speed_profile_s # [], planning_data.st_graph.speed_profile.s\n    \n    # 6.3 planned 以线显示\n    # float64[] planning_data_st_graph_speed_profile_s # [], planning_data.st_graph.speed_profile.s \n    # float64[] planning_data_st_graph_speed_profile_v # [], planning_data.st_graph.speed_profile.v \n    float64[] speed_profile_v # [], planning_data.st_graph.speed_profile.v \n    \n    ","zhito2ros_msg/ZhitoPlanningStGraph":"\n    string name\n    # optional string name = 1;\n    # repeated StGraphBoundaryDebug boundary = 2;\n    # repeated zhito.common.SpeedPoint speed_limit = 3;\n    # repeated zhito.common.SpeedPoint speed_profile = 4;\n    # optional STGraphSpeedConstraint speed_constraint = 5;\n    # optional STGraphKernelCuiseRef kernel_cruise_ref = 6;\n    # optional STGraphKernelFollowRef kernel_follow_ref = 7;\n    \n    ZhitoPlanningDataSpeedLimit speed_limit\n    ZhitoPlanningDataSpeedProfile speed_profile\n    \n    ZhitoPlanningDataKernelCruiseRef kernel_cruise_ref\n    ZhitoPlanningDataKernelFollowRef kernel_follow_ref\n    \n    # 6 Planning VT 基于st_graph绘制\n    # 6.1 upperConstraint 以线显示\n    # float64 待定 # [],\n    # float64 planning_data_st_graph_speed_constraint_upper_bound # [], planning_data.st_graph.speed_constraint.upper_bound \n    \n    # 6.2 lowerConstraint 以线显示\n    # float64 待定 # []\n    # float64 planning_data_st_graph_speed_constraint_lower_bound # [], planning_data.st_graph.speed_constraint.lower_bound \n    \n    # 6.3 planned 以线显示\n    # float64 planning_data_st_graph_speed_profile_s # [], planning_data.st_graph.speed_profile.s \n    # float64 planning_data_st_graph_speed_profile_v # [], planning_data.st_graph.speed_profile.v \n    \n    # 6.4 limit 以线显示\n    # float64 planning_data_st_graph_speed_limit_s # [], planning_data.st_graph.speed_limit.s \n    # float64 planning_data_st_graph_speed_limit_v # [], planning_data.st_graph.speed_limit.v \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoPlanningDataSpeedLimit\n    # 6.4 limit 以线显示\n    # float64 planning_data_st_graph_speed_limit_s # [], planning_data.st_graph.speed_limit.s \n    # float64 planning_data_st_graph_speed_limit_v # [], planning_data.st_graph.speed_limit.v \n    \n    float64[] speed_limit_s # [], planning_data.st_graph.speed_limit.s \n    float64[] speed_limit_v # [], planning_data.st_graph.speed_limit.v \n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoPlanningDataSpeedProfile\n    # 5 SpeedHeuristic 和 Planning ST Graph\n    # 5.1 curveLine 以散点显示\n    # float64 planning_data_st_graph_speed_profile_t # [], planning_data.st_graph.speed_profile.t\n    # float64 planning_data_st_graph_speed_profile_s # [], planning_data.st_graph.speed_profile.s\n    \n    float64[] speed_profile_t # [], planning_data.st_graph.speed_profile.t\n    float64[] speed_profile_s # [], planning_data.st_graph.speed_profile.s\n    \n    # 6.3 planned 以线显示\n    # float64[] planning_data_st_graph_speed_profile_s # [], planning_data.st_graph.speed_profile.s \n    # float64[] planning_data_st_graph_speed_profile_v # [], planning_data.st_graph.speed_profile.v \n    float64[] speed_profile_v # [], planning_data.st_graph.speed_profile.v \n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoPlanningDataKernelCruiseRef\n    # 5.2 kernelCruise 以散点显示\n    # float64 planning_data_st_graph_kernel_cruise_ref_t # [], planning_data.st_graph.kernel_cruise_ref.t \n    # float64 planning_data_st_graph_kernel_cruise_ref_cruise_line_s # [], planning_data.st_graph.kernel_cruise_ref.cruise_line_s \n    \n    float64[] kernel_cruise_ref_t # [], planning_data.st_graph.kernel_cruise_ref.t \n    float64[] cruise_line_s # [], planning_data.st_graph.kernel_cruise_ref.cruise_line_s \n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoPlanningDataKernelFollowRef\n    # 5.3 kernelFollow 以散点显示\n    # float64 planning_data_st_graph_kernel_follow_ref_t # [], planning_data.st_graph.kernel_follow_ref.t \n    # float64 planning_data_st_graph_kernel_follow_ref_follow_line_s # [], st_graph.kernel_follow_ref.follow_line_s\n    \n    float64[] kernel_follow_ref_t # [], planning_data.st_graph.kernel_follow_ref.t \n    float64[] follow_line_s # [], st_graph.kernel_follow_ref.follow_line_s\n    \n    ","zhito2ros_msg/ZhitoPoint2D":"\n    float64 x\n    float64 y\n    ","zhito2ros_msg/ZhitoPose":"\n    \n    \n      geometry_msgs/Point  position\n    \n      # A quaternion that represents the rotation from the IMU coordinate\n      # (Right/Forward/Up) to the\n      # world coordinate (East/North/Up).\n      geometry_msgs/Quaternion orientation\n    \n      # Linear velocity of the VRP in the map reference frame.\n      # East/north/up in meters per second.\n      geometry_msgs/Point linear_velocity \n    \n      # Linear acceleration of the VRP in the map reference frame.\n      # East/north/up in meters per second.\n      geometry_msgs/Point linear_acceleration\n      # Angular velocity of the vehicle in the map reference frame.\n      # Around east/north/up axes in radians per second.\n      geometry_msgs/Point angular_velocity \n    \n      # Heading\n      # The heading is zero when the car is facing East and positive when facing\n      # North.\n      float64 heading\n    \n      # Linear acceleration of the VRP in the vehicle reference frame.\n      # Right/forward/up in meters per square second.\n      geometry_msgs/Point linear_acceleration_vrf\n    \n      # Angular velocity of the VRP in the vehicle reference frame.\n      # Around right/forward/up axes in radians per second.\n      geometry_msgs/Point angular_velocity_vrf\n    \n      # Roll/pitch/yaw that represents a rotation with intrinsic sequence z-x-y.\n      # in world coordinate (East/North/Up)\n      # The roll, in (-pi/2, pi/2), corresponds to a rotation around the y-axis.\n      # The pitch, in [-pi, pi), corresponds to a rotation around the x-axis.\n      # The yaw, in [-pi, pi), corresponds to a rotation around the z-axis.\n      # The direction of rotation follows the right-hand rule.\n      geometry_msgs/Point euler_angles\n    \n      # Linear velocity of the VRP in the vehicle reference frame.\n      # Right/forward/up in meters per square second.\n      geometry_msgs/Point linear_velocity_vrf \n    \n      geometry_msgs/Point  position_llh # 纬度，经度，高度 rad rad 米\n    ================================================================================\n    MSG: geometry_msgs/Point\n    # This contains the position of a point in free space\n    float64 x\n    float64 y\n    float64 z\n    \n    ================================================================================\n    MSG: geometry_msgs/Quaternion\n    # This represents an orientation in free space in quaternion form.\n    \n    float64 x\n    float64 y\n    float64 z\n    float64 w\n    \n    ","zhito2ros_msg/ZhitoProto":"\n    \n    string proto\n    uint8[] data\n    ","zhito2ros_msg/ZhitoRectInfo":"\n    #   message BoxSize {\n    #   optional double xmin = 1;\n    #   optional double ymin = 2;\n    #   optional double xmax = 3;\n    #   optional double ymax = 4;\n    # }\n    #   optional BoxSize rect_body = 1;         // 目标整体2D框，包括遮挡部分\n    #   optional BoxSize rect_vis  = 2;         // 目标可见部分框\n    #   optional SubRectType sub_rect_type = 3; // 标识车头或者车尾哪一个可用\n    #   optional BoxSize rect_tail = 4;         // 目标车尾框\n    #   optional BoxSize rect_head = 5;         // 目标车头框\n    \n      # BoxSize { xmin ymin xmax ymax } to   [xmin, ymin, xmax, ymax ]\n    uint8 SubRectType_RECT_UNKNOWN = 0\n    uint8 SubRectType_RECT_TAIL = 1\n    uint8 SubRectType_RECT_HEAED= 2\n    \n    float64[] rect_body\n    float64[] rect_vis\n    float64[] rect_tail\n    float64[] rect_head\n    uint8 sub_rect_type\n    ","zhito2ros_msg/ZhitoSpeedPlan":"\n    string name\n    float64[] speed_point_t # [] planning_data.speed_plan.speed_point(i).t(), in second\n    float64[] speed_point_v # [] planning_data.speed_plan.speed_point(i).v(), in m/s\n    \n    ","zhito2ros_msg/ZhitoTrajectoryPathPoint":"\n    # 3 Planning Theta 以线显示\n    float64[] trajectory_point_timestamp_sec # [], trajectory_point.relative_time + header.timestamp_sec, in second\n    float64[] theta # [], trajectory_point.path_point.theta, \n    \n    # 4 Planning Kappa 以线显示\n    # float64 trajectory_point_timestamp_sec # [], trajectory_point.relative_time + header.timestamp_sec, in second\n    float64[] kappa # [], trajectory_point.path_point.kappa,\n    \n    # 7 Planning Kappa Derivative 以线显示\n    # float64 trajectory_point_timestamp_sec # [], trajectory_point.relative_time + heade.timestamp_sec\n    float64[] dkappa # [], trajectory_point.path_point.dkappa \n    \n    ","zhito2ros_msg/ZhitoTrajectoryPoint":"\n    # 1 Planned SpeedHeuristic\n    # 1.1 VehicleSpeed 以散点显示\n    float64[] relative_timestamp_sec # [], timestamp_sec, trajectory_point.relative_time + header.timestamp_sec offset\n    float64[] v  # [], trajectory_point.v \n    \n    # 2 Planning Acceleration 以线显示\n    float64[] a # [], trajectory_point.a, in m/s^2\n    ","zhito2ros_msg/ZhitoVisionChart":"\n    Header header\n    \n    ZhitoImageData imgdata\n    ZhitoInnerObjInfo[] inner_obj_infos\n    \n    ================================================================================\n    MSG: std_msgs/Header\n    # Standard metadata for higher-level stamped data types.\n    # This is generally used to communicate timestamped data \n    # in a particular coordinate frame.\n    # \n    # sequence ID: consecutively increasing ID \n    uint32 seq\n    #Two-integer timestamp that is expressed as:\n    # * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n    # * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n    # time-handling sugar is provided by the client library\n    time stamp\n    #Frame this data is associated with\n    string frame_id\n    \n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoImageData\n    uint32 height\n    uint32 width\n    uint32 step\n    \n    string format\n    \n    uint8[] data\n    ================================================================================\n    MSG: zhito2ros_msg/ZhitoInnerObjInfo\n    # message InnerObjectInfo {\n    #   optional uint32 id = 1;                    // 目标id\n    #   optional ObjectType type = 2;              // 目标类型\n    #   optional float type_prob = 3;              // 该目标类型置信度\n    #   optional ObjectSubType sub_type = 4;       // 目标子类型\n    #   optional float sub_type_prob = 5;          // 每个子类型置信度\n    #   optional uint32 track_id = 6;              // 跟踪列表中的目标id\n    #   optional uint32 miss = 7;                  // 跟踪列表中的目标丢失帧数\n    #   optional uint32 life = 8;                  // 跟踪列表中的目标被连续跟踪的帧数\n    #   repeated double rel_pos = 9;               // 目标在车体坐标系下的位置\n    #   repeated float rel_velocity = 10;          // 自车坐标系下的相对速度\n    #   repeated float rel_acceleration = 11;      // 自车坐标系下的加速度\n    #   optional float theta = 12;                 // 目标在车体坐标系下的方位角\n    #   repeated float size = 13;                  // 目标长宽高\n    #   repeated BEVCornerPos bev_corner_pos = 14; // BEV视角下目标角点在车体坐标系下的位置\n    #   optional double scale = 15;   \n    #   optional RectInfo rect_pixel = 16;         // 该目标在图像的上的目标框\n    #   optional string extra_info = 17;           // 额外信息\n    # }\n    \n    # enum ObjectType {\n    #   OBJTYPE_UNKNOWN = 0;\n    #   OBJTYPE_UNKNOWN_MOVABLE = 1;\n    #   OBJTYPE_UNKNOWN_UNMOVABLE = 2;\n    #   OBJTYPE_PEDESTRIAN = 3;\n    #   OBJTYPE_RIDER = 4;\n    #   OBJTYPE_VEHICLE = 5;\n    #   MAX_OBJECT_TYPE = 6;\n    # }\n    \n    uint8  OBJTYPE_UNKNOWN = 0\n    uint8  OBJTYPE_UNKNOWN_MOVABLE = 1\n    uint8  OBJTYPE_UNKNOWN_UNMOVABLE = 2\n    uint8  OBJTYPE_PEDESTRIAN = 3\n    uint8  OBJTYPE_RIDER = 4\n    uint8  OBJTYPE_VEHICLE = 5\n    uint8  MAX_OBJECT_TYPE = 6\n    \n    uint8  OBJSUBTYPE_UNKNOWN = 0\n    uint8  OBJSUBTYPE_UNKNOWN_MOVABLE = 1\n    uint8  OBJSUBTYPE_UNKNOWN_UNMOVABLE = 2\n    uint8  OBJSUBTYPE_CAR = 3\n    uint8  OBJSUBTYPE_VAN = 4\n    uint8  OBJSUBTYPE_TRUCK = 5\n    uint8  OBJSUBTYPE_BUS = 6\n    uint8  OBJSUBTYPE_CYCLIST = 7\n    uint8  OBJSUBTYPE_MOTORCYCLIST = 8\n    uint8  OBJSUBTYPE_TRICYCLIST = 9\n    uint8  OBJSUBTYPE_PEDESTRIAN = 10\n    uint8  OBJSUBTYPE_TRAFFICCONE = 11\n    uint8  MAX_OBJECT_SUBTYPE = 12\n    \n    uint32 id                      # // 目标id\n    uint8 obj_type                 # // 目标类型\n    float32 type_prob              # // 该目标类型置信度\n    uint8 obj_sub_type             # // 目标子类型\n    float32 sub_type_prob          # // 每个子类型置信度\n    uint32 track_id                # // 跟踪列表中的目标id\n    float64 rel_pos                # // 目标在车体坐标系下的位置\n    float32 rel_velocity           # // 自车坐标系下的相对速度\n    float32 rel_acceleration       # // 自车坐标系下的加速度\n    float32 theta                  # // 目标在车体坐标系下的方位角\n    float32 size                   # // 目标长宽高\n    float64 scale                  \n    \n    \n    "}
